{
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _openFolder = _interopRequireDefault(require(\"./src/openFolder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//function of index set name of folder, excerpt data, start openFolder\nvar app = (0, _express[\"default\"])();\napp.listen(50000);\nvar data = (0, _openFolder[\"default\"])('data'); //.then(() => {\n//console.log(resolve)\n\nvar minutes = 1,\n    the_interval = minutes * 60 * 1000;\nsetInterval(function () {\n  console.log(\"I am doing my 1 minutes check\");\n  (0, _openFolder[\"default\"])('data');\n}, the_interval); //}).catch((error) => {\n// console.log(\"error index\")\n//})\n\napp.get('/jedem', function (req, res) {\n  res.send(data);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImxpc3RlbiIsImRhdGEiLCJtaW51dGVzIiwidGhlX2ludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7OztBQUZBO0FBR0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEtBQVg7QUFFQSxJQUFJQyxJQUFJLEdBQUcsNEJBQVcsTUFBWCxDQUFYLEMsQ0FBNkI7QUFDN0I7O0FBQ1EsSUFBSUMsT0FBTyxHQUFHLENBQWQ7QUFBQSxJQUFpQkMsWUFBWSxHQUFHRCxPQUFPLEdBQUcsRUFBVixHQUFlLElBQS9DO0FBQ0FFLFdBQVcsQ0FBQyxZQUFZO0FBQ3BCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBWjtBQUNBLDhCQUFXLE1BQVg7QUFFSCxDQUpVLEVBSVJILFlBSlEsQ0FBWCxDLENBTVI7QUFDRztBQUVIOztBQUVBSixHQUFHLENBQUNRLEdBQUosQ0FBUSxRQUFSLEVBQWtCLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUNsQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVNULElBQVQ7QUFFSCxDQUhEIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbCIsInNvdXJjZXNDb250ZW50IjpbIi8vZnVuY3Rpb24gb2YgaW5kZXggc2V0IG5hbWUgb2YgZm9sZGVyLCBleGNlcnB0IGRhdGEsIHN0YXJ0IG9wZW5Gb2xkZXJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgb3BlbkZvbGRlciBmcm9tIFwiLi9zcmMvb3BlbkZvbGRlclwiO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuYXBwLmxpc3Rlbig1MDAwMCk7XG5cbmxldCBkYXRhID0gb3BlbkZvbGRlcignZGF0YScpLy8udGhlbigoKSA9PiB7XG4vL2NvbnNvbGUubG9nKHJlc29sdmUpXG4gICAgICAgIHZhciBtaW51dGVzID0gMSwgdGhlX2ludGVydmFsID0gbWludXRlcyAqIDYwICogMTAwMDtcbiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJJIGFtIGRvaW5nIG15IDEgbWludXRlcyBjaGVja1wiKTtcbiAgICAgICAgICAgIG9wZW5Gb2xkZXIoJ2RhdGEnKVxuXG4gICAgICAgIH0sIHRoZV9pbnRlcnZhbCk7XG5cbi8vfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAvLyBjb25zb2xlLmxvZyhcImVycm9yIGluZGV4XCIpXG5cbi8vfSlcblxuYXBwLmdldCgnL2plZGVtJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgcmVzLnNlbmQoZGF0YSk7XG5cbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "listen",
        "data",
        "minutes",
        "the_interval",
        "setInterval",
        "console",
        "log",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AACA;;AACA;;;;AAFA;AAGA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,MAAJ,CAAW,KAAX;AAEA,IAAIC,IAAI,GAAG,4BAAW,MAAX,CAAX,C,CAA6B;AAC7B;;AACQ,IAAIC,OAAO,GAAG,CAAd;AAAA,IAAiBC,YAAY,GAAGD,OAAO,GAAG,EAAV,GAAe,IAA/C;AACAE,WAAW,CAAC,YAAY;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,8BAAW,MAAX;AAEH,CAJU,EAIRH,YAJQ,CAAX,C,CAMR;AACG;AAEH;;AAEAJ,GAAG,CAACQ,GAAJ,CAAQ,QAAR,EAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClCA,EAAAA,GAAG,CAACC,IAAJ,CAAST,IAAT;AAEH,CAHD",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "sourcesContent": [
        "//function of index set name of folder, excerpt data, start openFolder\nimport express from 'express'\nimport openFolder from \"./src/openFolder\";\nconst app = express();\napp.listen(50000);\n\nlet data = openFolder('data')//.then(() => {\n//console.log(resolve)\n        var minutes = 1, the_interval = minutes * 60 * 1000;\n        setInterval(function () {\n            console.log(\"I am doing my 1 minutes check\");\n            openFolder('data')\n\n        }, the_interval);\n\n//}).catch((error) => {\n   // console.log(\"error index\")\n\n//})\n\napp.get('/jedem', function (req, res) {\n    res.send(data);\n\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1575928680253
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/openFolder.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "openFolder.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _loadFile = _interopRequireDefault(require(\"./loadFile\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nvar _savetodatabase = _interopRequireDefault(require(\"./database/savetodatabase\"));\n\nvar _updatefilesize = _interopRequireDefault(require(\"./database/updatefilesize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// function of openFolder: read filename from folder, save filename, start loadFile\nvar rowexists = function rowexists(mystring) {\n  var connection = (0, _connection[\"default\"])();\n  return new Promise(function (resolve) {\n    var sql = \"SELECT * FROM ?? WHERE ?? = ?\";\n    connection.query(sql, ['filename', 'name', mystring], function (error, result) {\n      if (result[0] === undefined) {\n        result = false;\n      }\n\n      resolve(result);\n      connection.end();\n    });\n  });\n};\n\nvar getSize = function getSize(fields) {\n  return fields.map(function (field) {\n    return field.size;\n  });\n};\n\nvar _default = function _default(foldername) {\n  return new Promise(function (resolve, reject) {\n    var filename = _fs[\"default\"].readdirSync(foldername);\n\n    var _loop = function _loop(i) {\n      rowexists(filename[i]).then(function (result) {\n        var path = [foldername, filename[i]];\n        var pathtosize = path.join('/');\n\n        var stats = _fs[\"default\"].statSync(pathtosize);\n\n        var fileSizeInBytes = stats.size;\n\n        if (!!result === false || result[0].filesize < fileSizeInBytes) {\n          (0, _loadFile[\"default\"])(filename[i]).then(function (A) {\n            (0, _savetodatabase[\"default\"])(A, i, filename[i], !!result, fileSizeInBytes);\n\n            if (result[0].filesize < fileSizeInBytes) {\n              (0, _updatefilesize[\"default\"])(fileSizeInBytes, i);\n            }\n          })[\"catch\"](function (error) {\n            console.log(\"error openFolder\");\n          });\n        }\n      });\n    };\n\n    for (var i = 0; i < filename.length; i++) {\n      _loop(i);\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZW5Gb2xkZXIuanMiXSwibmFtZXMiOlsicm93ZXhpc3RzIiwibXlzdHJpbmciLCJjb25uZWN0aW9uIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzcWwiLCJxdWVyeSIsImVycm9yIiwicmVzdWx0IiwidW5kZWZpbmVkIiwiZW5kIiwiZ2V0U2l6ZSIsImZpZWxkcyIsIm1hcCIsImZpZWxkIiwic2l6ZSIsImZvbGRlcm5hbWUiLCJyZWplY3QiLCJmaWxlbmFtZSIsImZzIiwicmVhZGRpclN5bmMiLCJpIiwidGhlbiIsInBhdGgiLCJwYXRodG9zaXplIiwiam9pbiIsInN0YXRzIiwic3RhdFN5bmMiLCJmaWxlU2l6ZUluQnl0ZXMiLCJmaWxlc2l6ZSIsIkEiLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFMQTtBQVFBLElBQUlBLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLFFBQUQsRUFBYztBQUUxQixNQUFJQyxVQUFVLEdBQUcsNkJBQWpCO0FBQ0EsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQzFCLFFBQUlDLEdBQUcsR0FBRywrQkFBVjtBQUNBSCxJQUFBQSxVQUFVLENBQUNJLEtBQVgsQ0FBaUJELEdBQWpCLEVBQXNCLENBQUMsVUFBRCxFQUFhLE1BQWIsRUFBcUJKLFFBQXJCLENBQXRCLEVBQXNELFVBQVNNLEtBQVQsRUFBZ0JDLE1BQWhCLEVBQXVCO0FBQ3pFLFVBQUdBLE1BQU0sQ0FBQyxDQUFELENBQU4sS0FBY0MsU0FBakIsRUFBMkI7QUFFdkJELFFBQUFBLE1BQU0sR0FBRyxLQUFUO0FBQ0g7O0FBQ0RKLE1BQUFBLE9BQU8sQ0FBQ0ksTUFBRCxDQUFQO0FBQ1pOLE1BQUFBLFVBQVUsQ0FBQ1EsR0FBWDtBQUNTLEtBUEQ7QUFTSCxHQVhNLENBQVA7QUFZSCxDQWZEOztBQWtCQSxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFBQyxNQUFNO0FBQUEsU0FBR0EsTUFBTSxDQUFDQyxHQUFQLENBQVcsVUFBQUMsS0FBSztBQUFBLFdBQUlBLEtBQUssQ0FBQ0MsSUFBVjtBQUFBLEdBQWhCLENBQUg7QUFBQSxDQUF0Qjs7ZUFDZSxrQkFBQ0MsVUFBRCxFQUFlO0FBQzFCLFNBQU8sSUFBSWIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVWEsTUFBVixFQUFxQjtBQUdwQyxRQUFJQyxRQUFRLEdBQUdDLGVBQUdDLFdBQUgsQ0FBZUosVUFBZixDQUFmOztBQUhvQywrQkFJM0JLLENBSjJCO0FBS2hDckIsTUFBQUEsU0FBUyxDQUFDa0IsUUFBUSxDQUFDRyxDQUFELENBQVQsQ0FBVCxDQUF1QkMsSUFBdkIsQ0FBNEIsVUFBQ2QsTUFBRCxFQUFZO0FBRXBDLFlBQUllLElBQUksR0FBRyxDQUFDUCxVQUFELEVBQWFFLFFBQVEsQ0FBQ0csQ0FBRCxDQUFyQixDQUFYO0FBQ0EsWUFBSUcsVUFBVSxHQUFHRCxJQUFJLENBQUNFLElBQUwsQ0FBVSxHQUFWLENBQWpCOztBQUNBLFlBQU1DLEtBQUssR0FBR1AsZUFBR1EsUUFBSCxDQUFZSCxVQUFaLENBQWQ7O0FBQ0EsWUFBTUksZUFBZSxHQUFHRixLQUFLLENBQUNYLElBQTlCOztBQUtBLFlBQUcsQ0FBQyxDQUFDUCxNQUFGLEtBQWEsS0FBYixJQUFvQkEsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVcUIsUUFBVixHQUFtQkQsZUFBMUMsRUFBMkQ7QUFHM0Qsb0NBQVNWLFFBQVEsQ0FBQ0csQ0FBRCxDQUFqQixFQUFzQkMsSUFBdEIsQ0FBMkIsVUFBQ1EsQ0FBRCxFQUFPO0FBRTlCLDRDQUFlQSxDQUFmLEVBQWtCVCxDQUFsQixFQUFxQkgsUUFBUSxDQUFDRyxDQUFELENBQTdCLEVBQWtDLENBQUMsQ0FBQ2IsTUFBcEMsRUFBMkNvQixlQUEzQzs7QUFDQSxnQkFBSXBCLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVXFCLFFBQVYsR0FBbUJELGVBQXZCLEVBQXdDO0FBQ3BDLDhDQUFlQSxlQUFmLEVBQWdDUCxDQUFoQztBQUNIO0FBQ0osV0FORCxXQU1TLFVBQUNkLEtBQUQsRUFBVztBQUNoQndCLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaO0FBRUgsV0FURDtBQVdIO0FBQ0EsT0F6QkQ7QUFMZ0M7O0FBSXBDLFNBQUssSUFBSVgsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0gsUUFBUSxDQUFDZSxNQUE3QixFQUFxQ1osQ0FBQyxFQUF0QyxFQUEwQztBQUFBLFlBQWpDQSxDQUFpQztBQTJCekM7QUFDSixHQWhDTSxDQUFQO0FBaUNILEMiLCJzb3VyY2VSb290IjoiL2hvbWUvbHVja2F5cy9XZWJzdG9ybVByb2plY3RzL3JlYWx0aW1lc3FsL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGZ1bmN0aW9uIG9mIG9wZW5Gb2xkZXI6IHJlYWQgZmlsZW5hbWUgZnJvbSBmb2xkZXIsIHNhdmUgZmlsZW5hbWUsIHN0YXJ0IGxvYWRGaWxlXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5pbXBvcnQgbG9hZEZpbGUgZnJvbSBcIi4vbG9hZEZpbGVcIjtcbmltcG9ydCBjcmVhdGVDb25uZWN0aW9uIGZyb20gXCIuL2RhdGFiYXNlL2Nvbm5lY3Rpb25cIjtcbmltcG9ydCBzYXZldG9kYXRhYmFzZSBmcm9tIFwiLi9kYXRhYmFzZS9zYXZldG9kYXRhYmFzZVwiO1xuaW1wb3J0IHVwZGF0ZWZpbGVzaXplIGZyb20gXCIuL2RhdGFiYXNlL3VwZGF0ZWZpbGVzaXplXCI7XG5cblxubGV0IHJvd2V4aXN0cyA9IChteXN0cmluZykgPT4ge1xuXG4gICAgbGV0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBsZXQgc3FsID0gXCJTRUxFQ1QgKiBGUk9NID8/IFdIRVJFID8/ID0gP1wiO1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCwgWydmaWxlbmFtZScsICduYW1lJywgbXlzdHJpbmddLCBmdW5jdGlvbihlcnJvciwgcmVzdWx0KXtcbiAgICAgICAgICAgIGlmKHJlc3VsdFswXSA9PT0gdW5kZWZpbmVkKXtcblxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpXG5jb25uZWN0aW9uLmVuZCgpXG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG59O1xuXG5cbmNvbnN0IGdldFNpemUgPSBmaWVsZHMgPT5maWVsZHMubWFwKGZpZWxkID0+IGZpZWxkLnNpemUpXG5leHBvcnQgZGVmYXVsdCAoZm9sZGVybmFtZSk9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblxuXG4gICAgICAgIHZhciBmaWxlbmFtZSA9IGZzLnJlYWRkaXJTeW5jKGZvbGRlcm5hbWUpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVuYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICByb3dleGlzdHMoZmlsZW5hbWVbaV0pLnRoZW4oKHJlc3VsdCkgPT4ge1xuXG4gICAgICAgICAgICAgICAgdmFyIHBhdGggPSBbZm9sZGVybmFtZSwgZmlsZW5hbWVbaV1dO1xuICAgICAgICAgICAgICAgIHZhciBwYXRodG9zaXplID0gcGF0aC5qb2luKCcvJyk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSBmcy5zdGF0U3luYyhwYXRodG9zaXplKTtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlU2l6ZUluQnl0ZXMgPSBzdGF0cy5zaXplO1xuXG5cblxuXG4gICAgICAgICAgICAgICAgaWYoISFyZXN1bHQgPT09IGZhbHNlfHxyZXN1bHRbMF0uZmlsZXNpemU8ZmlsZVNpemVJbkJ5dGVzKSB7XG5cblxuICAgICAgICAgICAgICAgIGxvYWRGaWxlKGZpbGVuYW1lW2ldKS50aGVuKChBKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgc2F2ZXRvZGF0YWJhc2UoQSwgaSwgZmlsZW5hbWVbaV0sICEhcmVzdWx0LGZpbGVTaXplSW5CeXRlcylcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdFswXS5maWxlc2l6ZTxmaWxlU2l6ZUluQnl0ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZWZpbGVzaXplKGZpbGVTaXplSW5CeXRlcywgaSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yIG9wZW5Gb2xkZXJcIilcblxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "openFolder.js"
      ],
      "names": [
        "rowexists",
        "mystring",
        "connection",
        "Promise",
        "resolve",
        "sql",
        "query",
        "error",
        "result",
        "undefined",
        "end",
        "getSize",
        "fields",
        "map",
        "field",
        "size",
        "foldername",
        "reject",
        "filename",
        "fs",
        "readdirSync",
        "i",
        "then",
        "path",
        "pathtosize",
        "join",
        "stats",
        "statSync",
        "fileSizeInBytes",
        "filesize",
        "A",
        "console",
        "log",
        "length"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AALA;AAQA,IAAIA,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAc;AAE1B,MAAIC,UAAU,GAAG,6BAAjB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,QAAIC,GAAG,GAAG,+BAAV;AACAH,IAAAA,UAAU,CAACI,KAAX,CAAiBD,GAAjB,EAAsB,CAAC,UAAD,EAAa,MAAb,EAAqBJ,QAArB,CAAtB,EAAsD,UAASM,KAAT,EAAgBC,MAAhB,EAAuB;AACzE,UAAGA,MAAM,CAAC,CAAD,CAAN,KAAcC,SAAjB,EAA2B;AAEvBD,QAAAA,MAAM,GAAG,KAAT;AACH;;AACDJ,MAAAA,OAAO,CAACI,MAAD,CAAP;AACZN,MAAAA,UAAU,CAACQ,GAAX;AACS,KAPD;AASH,GAXM,CAAP;AAYH,CAfD;;AAkBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM;AAAA,SAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAhB,CAAH;AAAA,CAAtB;;eACe,kBAACC,UAAD,EAAe;AAC1B,SAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUa,MAAV,EAAqB;AAGpC,QAAIC,QAAQ,GAAGC,eAAGC,WAAH,CAAeJ,UAAf,CAAf;;AAHoC,+BAI3BK,CAJ2B;AAKhCrB,MAAAA,SAAS,CAACkB,QAAQ,CAACG,CAAD,CAAT,CAAT,CAAuBC,IAAvB,CAA4B,UAACd,MAAD,EAAY;AAEpC,YAAIe,IAAI,GAAG,CAACP,UAAD,EAAaE,QAAQ,CAACG,CAAD,CAArB,CAAX;AACA,YAAIG,UAAU,GAAGD,IAAI,CAACE,IAAL,CAAU,GAAV,CAAjB;;AACA,YAAMC,KAAK,GAAGP,eAAGQ,QAAH,CAAYH,UAAZ,CAAd;;AACA,YAAMI,eAAe,GAAGF,KAAK,CAACX,IAA9B;;AAKA,YAAG,CAAC,CAACP,MAAF,KAAa,KAAb,IAAoBA,MAAM,CAAC,CAAD,CAAN,CAAUqB,QAAV,GAAmBD,eAA1C,EAA2D;AAG3D,oCAASV,QAAQ,CAACG,CAAD,CAAjB,EAAsBC,IAAtB,CAA2B,UAACQ,CAAD,EAAO;AAE9B,4CAAeA,CAAf,EAAkBT,CAAlB,EAAqBH,QAAQ,CAACG,CAAD,CAA7B,EAAkC,CAAC,CAACb,MAApC,EAA2CoB,eAA3C;;AACA,gBAAIpB,MAAM,CAAC,CAAD,CAAN,CAAUqB,QAAV,GAAmBD,eAAvB,EAAwC;AACpC,8CAAeA,eAAf,EAAgCP,CAAhC;AACH;AACJ,WAND,WAMS,UAACd,KAAD,EAAW;AAChBwB,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEH,WATD;AAWH;AACA,OAzBD;AALgC;;AAIpC,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACe,MAA7B,EAAqCZ,CAAC,EAAtC,EAA0C;AAAA,YAAjCA,CAAiC;AA2BzC;AACJ,GAhCM,CAAP;AAiCH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of openFolder: read filename from folder, save filename, start loadFile\nimport fs from 'fs'\nimport loadFile from \"./loadFile\";\nimport createConnection from \"./database/connection\";\nimport savetodatabase from \"./database/savetodatabase\";\nimport updatefilesize from \"./database/updatefilesize\";\n\n\nlet rowexists = (mystring) => {\n\n    let connection = createConnection();\n    return new Promise(resolve => {\n        let sql = \"SELECT * FROM ?? WHERE ?? = ?\";\n        connection.query(sql, ['filename', 'name', mystring], function(error, result){\n            if(result[0] === undefined){\n\n                result = false;\n            }\n            resolve(result)\nconnection.end()\n        });\n\n    });\n};\n\n\nconst getSize = fields =>fields.map(field => field.size)\nexport default (foldername)=> {\n    return new Promise((resolve, reject) => {\n\n\n        var filename = fs.readdirSync(foldername);\n        for (let i = 0; i < filename.length; i++) {\n            rowexists(filename[i]).then((result) => {\n\n                var path = [foldername, filename[i]];\n                var pathtosize = path.join('/');\n                const stats = fs.statSync(pathtosize);\n                const fileSizeInBytes = stats.size;\n\n\n\n\n                if(!!result === false||result[0].filesize<fileSizeInBytes) {\n\n\n                loadFile(filename[i]).then((A) => {\n\n                    savetodatabase(A, i, filename[i], !!result,fileSizeInBytes)\n                    if (result[0].filesize<fileSizeInBytes) {\n                        updatefilesize(fileSizeInBytes, i)\n                    }\n                }).catch((error) => {\n                    console.log(\"error openFolder\")\n\n                })\n\n            }\n            })\n        }\n    })\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575927310064
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/parseFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "parseFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1573058656476
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/loadFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "loadFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _columns = _interopRequireDefault(require(\"./columns\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// function of loadFile: separate files dependent on extension, start columns\n//set number of columns\nvar r_all = 17;\nvar r_txt = 15;\nvar r_mol = 15;\nvar r_bud = 15;\nvar r_vlh = 15;\n\nvar rowexists = function rowexists(mystring) {\n  var connection = (0, _connection[\"default\"])();\n  return new Promise(function (resolve) {\n    var sql = \"SELECT * FROM ?? WHERE ?? = ?\";\n    connection.query(sql, ['filename', 'name', mystring], function (error, result) {\n      if (result[0] === undefined) {\n        result = false;\n      }\n\n      resolve(result);\n      connection.end();\n    });\n  });\n};\n\nvar _default = function _default(filename) {\n  return new Promise(function (resolve, reject) {\n    var readInterface = _readline[\"default\"].createInterface({\n      input: _fs[\"default\"].createReadStream(_path[\"default\"].join(__dirname, '../data/', filename)),\n      output: process.stdout,\n      console: false\n    });\n\n    readInterface.clear;\n\n    var extension = _path[\"default\"].extname(filename).split('.')[1].toLocaleLowerCase();\n\n    var A = [];\n    var i = 0;\n\n    switch (extension) {\n      case 'all':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_all));\n        });\n        break;\n\n      case 'txt':\n        readInterface.on('line', function (line) {\n          i++;\n\n          if (i === 1) {\n            return;\n          }\n\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_txt));\n        });\n        break;\n\n      case 'mol':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_mol));\n        });\n        break;\n\n      case 'bud':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_bud));\n        });\n        break;\n\n      case 'vlh':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_vlh));\n        });\n        break;\n    }\n\n    readInterface.on('close', function () {\n      resolve(A);\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWRGaWxlLmpzIl0sIm5hbWVzIjpbInJfYWxsIiwicl90eHQiLCJyX21vbCIsInJfYnVkIiwicl92bGgiLCJyb3dleGlzdHMiLCJteXN0cmluZyIsImNvbm5lY3Rpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInNxbCIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHQiLCJ1bmRlZmluZWQiLCJlbmQiLCJmaWxlbmFtZSIsInJlamVjdCIsInJlYWRJbnRlcmZhY2UiLCJyZWFkbGluZSIsImNyZWF0ZUludGVyZmFjZSIsImlucHV0IiwiZnMiLCJjcmVhdGVSZWFkU3RyZWFtIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJvdXRwdXQiLCJwcm9jZXNzIiwic3Rkb3V0IiwiY29uc29sZSIsImNsZWFyIiwiZXh0ZW5zaW9uIiwiZXh0bmFtZSIsInNwbGl0IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJBIiwiaSIsIm9uIiwibGluZSIsImZpbHRlciIsIml0ZW0iLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBT0E7O0FBQ0E7Ozs7QUFYQTtBQUlBO0FBQ0EsSUFBSUEsS0FBSyxHQUFHLEVBQVo7QUFDQSxJQUFJQyxLQUFLLEdBQUcsRUFBWjtBQUNBLElBQUlDLEtBQUssR0FBRyxFQUFaO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxJQUFJQyxLQUFLLEdBQUcsRUFBWjs7QUFJQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxRQUFELEVBQWM7QUFFMUIsTUFBSUMsVUFBVSxHQUFHLDZCQUFqQjtBQUNBLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUFDLE9BQU8sRUFBSTtBQUMxQixRQUFJQyxHQUFHLEdBQUcsK0JBQVY7QUFDQUgsSUFBQUEsVUFBVSxDQUFDSSxLQUFYLENBQWlCRCxHQUFqQixFQUFzQixDQUFDLFVBQUQsRUFBYSxNQUFiLEVBQXFCSixRQUFyQixDQUF0QixFQUFzRCxVQUFTTSxLQUFULEVBQWdCQyxNQUFoQixFQUF1QjtBQUN6RSxVQUFHQSxNQUFNLENBQUMsQ0FBRCxDQUFOLEtBQWNDLFNBQWpCLEVBQTJCO0FBRXZCRCxRQUFBQSxNQUFNLEdBQUcsS0FBVDtBQUNIOztBQUNESixNQUFBQSxPQUFPLENBQUNJLE1BQUQsQ0FBUDtBQUNBTixNQUFBQSxVQUFVLENBQUNRLEdBQVg7QUFDSCxLQVBEO0FBU0gsR0FYTSxDQUFQO0FBWUgsQ0FmRDs7ZUFpQmUsa0JBQUNDLFFBQUQsRUFBYztBQUl6QixTQUFPLElBQUlSLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVRLE1BQVYsRUFBcUI7QUFDeEMsUUFBTUMsYUFBYSxHQUFHQyxxQkFBU0MsZUFBVCxDQUF5QjtBQUMzQ0MsTUFBQUEsS0FBSyxFQUFFQyxlQUFHQyxnQkFBSCxDQUFvQkMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixVQUFyQixFQUFpQ1YsUUFBakMsQ0FBcEIsQ0FEb0M7QUFFM0NXLE1BQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxNQUYyQjtBQUczQ0MsTUFBQUEsT0FBTyxFQUFFO0FBSGtDLEtBQXpCLENBQXRCOztBQU1BWixJQUFBQSxhQUFhLENBQUNhLEtBQWQ7O0FBRUEsUUFBTUMsU0FBUyxHQUFHUixpQkFBS1MsT0FBTCxDQUFhakIsUUFBYixFQUF1QmtCLEtBQXZCLENBQTZCLEdBQTdCLEVBQWtDLENBQWxDLEVBQXFDQyxpQkFBckMsRUFBbEI7O0FBQ0ksUUFBSUMsQ0FBQyxHQUFHLEVBQVI7QUFDQSxRQUFJQyxDQUFDLEdBQUcsQ0FBUjs7QUFFSixZQUFRTCxTQUFSO0FBRUksV0FBSyxLQUFMO0FBRUlkLFFBQUFBLGFBQWEsQ0FBQ29CLEVBQWQsQ0FBaUIsTUFBakIsRUFBeUIsVUFBQ0MsSUFBRCxFQUFVO0FBQy9CLGNBQUlMLEtBQUssR0FBR0ssSUFBSSxDQUFDTCxLQUFMLENBQVcsR0FBWCxFQUFnQk0sTUFBaEIsQ0FBdUIsVUFBQUMsSUFBSTtBQUFBLG1CQUFJQSxJQUFJLEtBQUssRUFBYjtBQUFBLFdBQTNCLENBQVo7QUFDQUwsVUFBQUEsQ0FBQyxDQUFDTSxJQUFGLENBQU8seUJBQVFSLEtBQVIsRUFBZWxDLEtBQWYsQ0FBUDtBQUNILFNBSEQ7QUFJQTs7QUFFSixXQUFLLEtBQUw7QUFFSWtCLFFBQUFBLGFBQWEsQ0FBQ29CLEVBQWQsQ0FBaUIsTUFBakIsRUFBeUIsVUFBQ0MsSUFBRCxFQUFVO0FBQy9CRixVQUFBQSxDQUFDOztBQUNELGNBQUlBLENBQUMsS0FBSyxDQUFWLEVBQWE7QUFDVDtBQUNIOztBQUNELGNBQUlILEtBQUssR0FBR0ssSUFBSSxDQUFDTCxLQUFMLENBQVcsR0FBWCxFQUFnQk0sTUFBaEIsQ0FBdUIsVUFBQUMsSUFBSTtBQUFBLG1CQUFJQSxJQUFJLEtBQUssRUFBYjtBQUFBLFdBQTNCLENBQVo7QUFDQUwsVUFBQUEsQ0FBQyxDQUFDTSxJQUFGLENBQU8seUJBQVFSLEtBQVIsRUFBZWpDLEtBQWYsQ0FBUDtBQUNILFNBUEQ7QUFRQTs7QUFFSixXQUFLLEtBQUw7QUFFSWlCLFFBQUFBLGFBQWEsQ0FBQ29CLEVBQWQsQ0FBaUIsTUFBakIsRUFBeUIsVUFBQ0MsSUFBRCxFQUFVO0FBQy9CLGNBQUlMLEtBQUssR0FBR0ssSUFBSSxDQUFDTCxLQUFMLENBQVcsR0FBWCxFQUFnQk0sTUFBaEIsQ0FBdUIsVUFBQUMsSUFBSTtBQUFBLG1CQUFJQSxJQUFJLEtBQUssRUFBYjtBQUFBLFdBQTNCLENBQVo7QUFDQUwsVUFBQUEsQ0FBQyxDQUFDTSxJQUFGLENBQU8seUJBQVFSLEtBQVIsRUFBZWhDLEtBQWYsQ0FBUDtBQUNILFNBSEQ7QUFJQTs7QUFFSixXQUFLLEtBQUw7QUFDSWdCLFFBQUFBLGFBQWEsQ0FBQ29CLEVBQWQsQ0FBaUIsTUFBakIsRUFBeUIsVUFBQ0MsSUFBRCxFQUFVO0FBQy9CLGNBQUlMLEtBQUssR0FBR0ssSUFBSSxDQUFDTCxLQUFMLENBQVcsR0FBWCxFQUFnQk0sTUFBaEIsQ0FBdUIsVUFBQUMsSUFBSTtBQUFBLG1CQUFJQSxJQUFJLEtBQUssRUFBYjtBQUFBLFdBQTNCLENBQVo7QUFDQUwsVUFBQUEsQ0FBQyxDQUFDTSxJQUFGLENBQU8seUJBQVFSLEtBQVIsRUFBZS9CLEtBQWYsQ0FBUDtBQUNDLFNBSEw7QUFJQTs7QUFFSixXQUFLLEtBQUw7QUFFSWUsUUFBQUEsYUFBYSxDQUFDb0IsRUFBZCxDQUFpQixNQUFqQixFQUF5QixVQUFDQyxJQUFELEVBQVU7QUFDL0IsY0FBSUwsS0FBSyxHQUFHSyxJQUFJLENBQUNMLEtBQUwsQ0FBVyxHQUFYLEVBQWdCTSxNQUFoQixDQUF1QixVQUFBQyxJQUFJO0FBQUEsbUJBQUlBLElBQUksS0FBSyxFQUFiO0FBQUEsV0FBM0IsQ0FBWjtBQUNBTCxVQUFBQSxDQUFDLENBQUNNLElBQUYsQ0FBTyx5QkFBUVIsS0FBUixFQUFlOUIsS0FBZixDQUFQO0FBQ0gsU0FIRDtBQUlBO0FBM0NSOztBQThDSWMsSUFBQUEsYUFBYSxDQUFDb0IsRUFBZCxDQUFpQixPQUFqQixFQUEwQixZQUFNO0FBQUM3QixNQUFBQSxPQUFPLENBQUMyQixDQUFELENBQVA7QUFBVyxLQUE1QztBQUNILEdBNURNLENBQVA7QUE2REgsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZnVuY3Rpb24gb2YgbG9hZEZpbGU6IHNlcGFyYXRlIGZpbGVzIGRlcGVuZGVudCBvbiBleHRlbnNpb24sIHN0YXJ0IGNvbHVtbnNcbmltcG9ydCByZWFkbGluZSBmcm9tIFwicmVhZGxpbmVcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgZnMgZnJvbSBcImZzXCJcbi8vc2V0IG51bWJlciBvZiBjb2x1bW5zXG5sZXQgcl9hbGwgPSAxNztcbmxldCByX3R4dCA9IDE1O1xubGV0IHJfbW9sID0gMTU7XG5sZXQgcl9idWQgPSAxNTtcbmxldCByX3ZsaCA9IDE1O1xuaW1wb3J0IGNvbHVtbnMgZnJvbSBcIi4vY29sdW1uc1wiO1xuaW1wb3J0IGNyZWF0ZUNvbm5lY3Rpb24gZnJvbSBcIi4vZGF0YWJhc2UvY29ubmVjdGlvblwiO1xuXG5sZXQgcm93ZXhpc3RzID0gKG15c3RyaW5nKSA9PiB7XG5cbiAgICBsZXQgY29ubmVjdGlvbiA9IGNyZWF0ZUNvbm5lY3Rpb24oKTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGxldCBzcWwgPSBcIlNFTEVDVCAqIEZST00gPz8gV0hFUkUgPz8gPSA/XCI7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBbJ2ZpbGVuYW1lJywgJ25hbWUnLCBteXN0cmluZ10sIGZ1bmN0aW9uKGVycm9yLCByZXN1bHQpe1xuICAgICAgICAgICAgaWYocmVzdWx0WzBdID09PSB1bmRlZmluZWQpe1xuXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNvbHZlKHJlc3VsdClcbiAgICAgICAgICAgIGNvbm5lY3Rpb24uZW5kKClcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmaWxlbmFtZSkgPT4ge1xuXG5cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVhZEludGVyZmFjZSA9IHJlYWRsaW5lLmNyZWF0ZUludGVyZmFjZSh7XG4gICAgICAgIGlucHV0OiBmcy5jcmVhdGVSZWFkU3RyZWFtKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9kYXRhLycsIGZpbGVuYW1lKSksXG4gICAgICAgIG91dHB1dDogcHJvY2Vzcy5zdGRvdXQsXG4gICAgICAgIGNvbnNvbGU6IGZhbHNlXG5cbiAgICB9KTtcbiAgICByZWFkSW50ZXJmYWNlLmNsZWFyO1xuXG4gICAgY29uc3QgZXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKGZpbGVuYW1lKS5zcGxpdCgnLicpWzFdLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgIGxldCBBID0gW107XG4gICAgICAgIGxldCBpID0gMDtcblxuICAgIHN3aXRjaCAoZXh0ZW5zaW9uKSB7XG5cbiAgICAgICAgY2FzZSAnYWxsJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl9hbGwpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAndHh0JzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIGlmIChpID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl90eHQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnbW9sJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl9tb2wpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnYnVkJzpcbiAgICAgICAgICAgIHJlYWRJbnRlcmZhY2Uub24oJ2xpbmUnLCAobGluZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBzcGxpdCA9IGxpbmUuc3BsaXQoJyAnKS5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSAnJyk7XG4gICAgICAgICAgICAgICAgQS5wdXNoKGNvbHVtbnMoc3BsaXQsIHJfYnVkKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICd2bGgnOlxuXG4gICAgICAgICAgICByZWFkSW50ZXJmYWNlLm9uKCdsaW5lJywgKGxpbmUpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgc3BsaXQgPSBsaW5lLnNwbGl0KCcgJykuZmlsdGVyKGl0ZW0gPT4gaXRlbSAhPT0gJycpO1xuICAgICAgICAgICAgICAgIEEucHVzaChjb2x1bW5zKHNwbGl0LCByX3ZsaCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICAgICAgcmVhZEludGVyZmFjZS5vbignY2xvc2UnLCAoKSA9PiB7cmVzb2x2ZShBKX0pXG4gICAgfSlcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "loadFile.js"
      ],
      "names": [
        "r_all",
        "r_txt",
        "r_mol",
        "r_bud",
        "r_vlh",
        "rowexists",
        "mystring",
        "connection",
        "Promise",
        "resolve",
        "sql",
        "query",
        "error",
        "result",
        "undefined",
        "end",
        "filename",
        "reject",
        "readInterface",
        "readline",
        "createInterface",
        "input",
        "fs",
        "createReadStream",
        "path",
        "join",
        "__dirname",
        "output",
        "process",
        "stdout",
        "console",
        "clear",
        "extension",
        "extname",
        "split",
        "toLocaleLowerCase",
        "A",
        "i",
        "on",
        "line",
        "filter",
        "item",
        "push"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of loadFile: separate files dependent on extension, start columns\nimport readline from \"readline\";\nimport path from \"path\";\nimport fs from \"fs\"\n//set number of columns\nlet r_all = 17;\nlet r_txt = 15;\nlet r_mol = 15;\nlet r_bud = 15;\nlet r_vlh = 15;\nimport columns from \"./columns\";\nimport createConnection from \"./database/connection\";\n\nlet rowexists = (mystring) => {\n\n    let connection = createConnection();\n    return new Promise(resolve => {\n        let sql = \"SELECT * FROM ?? WHERE ?? = ?\";\n        connection.query(sql, ['filename', 'name', mystring], function(error, result){\n            if(result[0] === undefined){\n\n                result = false;\n            }\n            resolve(result)\n            connection.end()\n        });\n\n    });\n};\n\nexport default (filename) => {\n\n\n\n    return new Promise((resolve, reject) => {\n    const readInterface = readline.createInterface({\n        input: fs.createReadStream(path.join(__dirname, '../data/', filename)),\n        output: process.stdout,\n        console: false\n\n    });\n    readInterface.clear;\n\n    const extension = path.extname(filename).split('.')[1].toLocaleLowerCase();\n        let A = [];\n        let i = 0;\n\n    switch (extension) {\n\n        case 'all':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_all));\n            });\n            break;\n\n        case 'txt':\n\n            readInterface.on('line', (line) => {\n                i++;\n                if (i === 1) {\n                    return;\n                }\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_txt));\n            });\n            break;\n\n        case 'mol':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_mol));\n            });\n            break;\n\n        case 'bud':\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_bud));\n                });\n            break;\n\n        case 'vlh':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_vlh));\n            });\n            break;\n    }\n\n        readInterface.on('close', () => {resolve(A)})\n    })\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575923644555
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/rows.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "rows.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// function of rows: throw values to definited +number+ of rows and return split line\nvar parsedLines = [];\n\nvar _default = function _default(split, number) {\n  var date = new Date();\n  date.setFullYear(split[0], split[1] - 1, split[2]);\n  date.setHours(split[3], split[4], split[5]);\n  var s7 = split[6];\n  var s8 = split[7];\n  var s9 = split[8];\n  var s10 = split[9];\n  var s11 = split[10];\n  var s12 = split[11];\n  var s13 = split[12];\n  var s14 = split[13];\n  var s15 = split[14];\n  var s16 = split[15];\n  var s17 = split[16];\n  var s18 = split[17];\n  var s19 = split[18];\n  var s20 = split[19];\n  var s21 = split[20];\n  var s22 = split[21];\n  var s23 = split[22];\n  var s24 = split[23];\n  var s25 = split[24];\n  var s26 = split[25];\n  var s27 = split[26];\n  var s28 = split[27];\n  var s29 = split[28];\n  var s30 = split[29];\n  var s31 = split[30];\n  var s32 = split[31];\n  var s33 = split[32];\n  var s34 = split[33];\n  var s35 = split[34];\n  var s36 = split[35];\n  var s37 = split[36];\n  var s38 = split[37];\n  var s39 = split[38];\n  var s40 = split[39];\n\n  switch (number) {\n    case number <= 6:\n      throw Error('Unsupported number of rows ' + number);\n\n    case 7:\n      parsedLines = {\n        date: date,\n        s7: s7\n      };\n      break;\n\n    case 8:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8\n      };\n      break;\n\n    case 9:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9\n      };\n      break;\n\n    case 10:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10\n      };\n      break;\n\n    case 11:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11\n      };\n      break;\n\n    case 12:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12\n      };\n      break;\n\n    case 13:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13\n      };\n      break;\n\n    case 14:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14\n      };\n      break;\n\n    case 15:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15\n      };\n      break;\n\n    case 16:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16\n      };\n      break;\n\n    case 17:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17\n      };\n      break;\n\n    case 18:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18\n      };\n      break;\n\n    case 19:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19\n      };\n      break;\n\n    case 20:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20\n      };\n      break;\n\n    case 21:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21\n      };\n      break;\n\n    case 22:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22\n      };\n      break;\n\n    case 23:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23\n      };\n      break;\n\n    case 24:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24\n      };\n      break;\n\n    case 25:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25\n      };\n      break;\n\n    case 26:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26\n      };\n      break;\n\n    case 27:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27\n      };\n      break;\n\n    case 28:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28\n      };\n      break;\n\n    case 29:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29\n      };\n      break;\n\n    case 30:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30\n      };\n      break;\n\n    case 31:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31\n      };\n      break;\n\n    case 32:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32\n      };\n      break;\n\n    case 33:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33\n      };\n      break;\n\n    case 34:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34\n      };\n      break;\n\n    case 35:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35\n      };\n      break;\n\n    case 36:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36\n      };\n      break;\n\n    case 37:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37\n      };\n      break;\n\n    case 38:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38\n      };\n      break;\n\n    case 39:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39\n      };\n      break;\n\n    case 40:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39,\n        s40: s40\n      };\n      break;\n  } //console.log(parsedLines)\n\n\n  return parsedLines;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "rows.js"
      ],
      "names": [
        "parsedLines",
        "split",
        "number",
        "date",
        "Date",
        "setFullYear",
        "setHours",
        "s7",
        "s8",
        "s9",
        "s10",
        "s11",
        "s12",
        "s13",
        "s14",
        "s15",
        "s16",
        "s17",
        "s18",
        "s19",
        "s20",
        "s21",
        "s22",
        "s23",
        "s24",
        "s25",
        "s26",
        "s27",
        "s28",
        "s29",
        "s30",
        "s31",
        "s32",
        "s33",
        "s34",
        "s35",
        "s36",
        "s37",
        "s38",
        "s39",
        "s40",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of rows and return split line\nlet parsedLines = [];\nexport default (split,number) => {\n    let date = new Date();\n    date.setFullYear(split[0], (split[1] - 1), split[2]);\n    date.setHours(split[3], split[4], split[5]);\n    let s7 = split[6];\n    let s8 = split[7];\n    let s9 = split[8];\n    let s10 = split[9];\n    let s11 = split[10];\n    let s12 = split[11];\n    let s13 = split[12];\n    let s14 = split[13];\n    let s15 = split[14];\n    let s16 = split[15];\n    let s17 = split[16];\n    let s18 = split[17];\n    let s19 = split[18];\n    let s20 = split[19];\n    let s21 = split[20];\n    let s22 = split[21];\n    let s23 = split[22];\n    let s24 = split[23];\n    let s25 = split[24];\n    let s26 = split[25];\n    let s27 = split[26];\n    let s28 = split[27];\n    let s29 = split[28];\n    let s30 = split[29];\n    let s31 = split[30];\n    let s32 = split[31];\n    let s33 = split[32];\n    let s34 = split[33];\n    let s35 = split[34];\n    let s36 = split[35];\n    let s37 = split[36];\n    let s38 = split[37];\n    let s39 = split[38];\n    let s40 = split[39];\n\n    switch(number){\n        case (number<=6):\n            throw Error('Unsupported number of rows ' + number)\n        case 7:\n            parsedLines = ({date,s7});\n        break;\n        case 8:\n            parsedLines = ({date,s7,s8});\n            break;\n        case 9:\n            parsedLines = ({date,s7,s8,s9});\n            break;\n        case 10:\n            parsedLines = ({date,s7,s8,s9,s10});\n            break;\n        case 11:\n            parsedLines = ({date,s7,s8,s9,s10,s11});\n            break;\n        case 12:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12});\n\n            break;\n        case 13:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13});\n            break;\n        case 14:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14});\n            break;\n        case 15:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15});\n            break;\n        case 16:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16});\n            break;\n        case 17:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17});\n            break;\n        case 18:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18});\n            break;\n        case 19:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19});\n            break;\n        case 20:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20});\n            break;\n        case 21:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21});\n            break;\n        case 22:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22});\n            break;\n        case 23:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23});\n            break;\n        case 24:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24});\n            break;\n        case 25:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25});\n            break;\n        case 26:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26});\n            break;\n        case 27:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27});\n            break;\n        case 28:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28});\n            break;\n        case 29:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29});\n            break;\n        case 30:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30});\n            break;\n        case 31:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31});\n            break;\n        case 32:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32});\n            break;\n        case 33:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33});\n            break;\n        case 34:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34});\n            break;\n        case 35:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35});\n            break;\n        case 36:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36});\n            break;\n        case 37:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37});\n            break;\n        case 38:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38});\n            break;\n        case 39:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39});\n            break;\n        case 40:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40});\n            break;\n\n\n    }\n//console.log(parsedLines)\nreturn parsedLines\n\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1573059286086
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/columns.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "columns.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n// function of rows: throw values to definited +number+ of columns and return split line\nvar _default = function _default(split, number) {\n  var parsedLine = {\n    date: new Date(),\n    columns: []\n  };\n  parsedLine.date.setFullYear(split[0], split[1] - 1, split[2]);\n  parsedLine.date.setHours(split[3], split[4], split[5]);\n  parsedLine.date.setMilliseconds(0);\n\n  if (number <= 6 || number > 40) {\n    throw Error('Unsupported number of rows ' + number);\n  }\n\n  for (var i = 6; i < number; i++) {\n    if (split[i] === undefined) {\n      split[i] = null;\n    }\n\n    if (split[i] === '?') {\n      split[i] = null;\n    }\n\n    parsedLine.columns[i - 6] = split[i];\n  }\n\n  return parsedLine;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbnMuanMiXSwibmFtZXMiOlsic3BsaXQiLCJudW1iZXIiLCJwYXJzZWRMaW5lIiwiZGF0ZSIsIkRhdGUiLCJjb2x1bW5zIiwic2V0RnVsbFllYXIiLCJzZXRIb3VycyIsInNldE1pbGxpc2Vjb25kcyIsIkVycm9yIiwiaSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO2VBRWUsa0JBQUNBLEtBQUQsRUFBT0MsTUFBUCxFQUFrQjtBQUM3QixNQUFNQyxVQUFVLEdBQUc7QUFDZkMsSUFBQUEsSUFBSSxFQUFFLElBQUlDLElBQUosRUFEUztBQUVmQyxJQUFBQSxPQUFPLEVBQUU7QUFGTSxHQUFuQjtBQUlESCxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JHLFdBQWhCLENBQTRCTixLQUFLLENBQUMsQ0FBRCxDQUFqQyxFQUF1Q0EsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLENBQWxELEVBQXNEQSxLQUFLLENBQUMsQ0FBRCxDQUEzRDtBQUNBRSxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JJLFFBQWhCLENBQXlCUCxLQUFLLENBQUMsQ0FBRCxDQUE5QixFQUFtQ0EsS0FBSyxDQUFDLENBQUQsQ0FBeEMsRUFBNkNBLEtBQUssQ0FBQyxDQUFELENBQWxEO0FBQ0FFLEVBQUFBLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQkssZUFBaEIsQ0FBZ0MsQ0FBaEM7O0FBQ0MsTUFBSVAsTUFBTSxJQUFJLENBQVYsSUFBZUEsTUFBTSxHQUFHLEVBQTVCLEVBQWdDO0FBQzVCLFVBQU1RLEtBQUssQ0FBQyxnQ0FBZ0NSLE1BQWpDLENBQVg7QUFDSDs7QUFDRCxPQUFLLElBQUlTLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdULE1BQXBCLEVBQTRCUyxDQUFDLEVBQTdCLEVBQWlDO0FBQzdCLFFBQUlWLEtBQUssQ0FBQ1UsQ0FBRCxDQUFMLEtBQWFDLFNBQWpCLEVBQTRCO0FBQ3hCWCxNQUFBQSxLQUFLLENBQUNVLENBQUQsQ0FBTCxHQUFXLElBQVg7QUFDSDs7QUFDRCxRQUFJVixLQUFLLENBQUNVLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQ2xCVixNQUFBQSxLQUFLLENBQUNVLENBQUQsQ0FBTCxHQUFXLElBQVg7QUFDSDs7QUFDRFIsSUFBQUEsVUFBVSxDQUFDRyxPQUFYLENBQW1CSyxDQUFDLEdBQUcsQ0FBdkIsSUFBNEJWLEtBQUssQ0FBQ1UsQ0FBRCxDQUFqQztBQUNIOztBQUVMLFNBQU9SLFVBQVA7QUFDQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmdW5jdGlvbiBvZiByb3dzOiB0aHJvdyB2YWx1ZXMgdG8gZGVmaW5pdGVkICtudW1iZXIrIG9mIGNvbHVtbnMgYW5kIHJldHVybiBzcGxpdCBsaW5lXG5cbmV4cG9ydCBkZWZhdWx0IChzcGxpdCxudW1iZXIpID0+IHtcbiAgICBjb25zdCBwYXJzZWRMaW5lID0ge1xuICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLFxuICAgICAgICBjb2x1bW5zOiBbXVxuICAgIH07XG4gICBwYXJzZWRMaW5lLmRhdGUuc2V0RnVsbFllYXIoc3BsaXRbMF0sIChzcGxpdFsxXSAtIDEpLCBzcGxpdFsyXSk7XG4gICBwYXJzZWRMaW5lLmRhdGUuc2V0SG91cnMoc3BsaXRbM10sIHNwbGl0WzRdLCBzcGxpdFs1XSk7XG4gICBwYXJzZWRMaW5lLmRhdGUuc2V0TWlsbGlzZWNvbmRzKDApXG4gICAgaWYgKG51bWJlciA8PSA2IHx8IG51bWJlciA+IDQwKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdVbnN1cHBvcnRlZCBudW1iZXIgb2Ygcm93cyAnICsgbnVtYmVyKVxuICAgIH1cbiAgICBmb3IgKGxldCBpID0gNjsgaSA8IG51bWJlcjsgaSsrKSB7XG4gICAgICAgIGlmIChzcGxpdFtpXSA9PT0gdW5kZWZpbmVkICl7XG4gICAgICAgICAgICBzcGxpdFtpXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNwbGl0W2ldID09PSAnPycgKXtcbiAgICAgICAgICAgIHNwbGl0W2ldID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBwYXJzZWRMaW5lLmNvbHVtbnNbaSAtIDZdID0gc3BsaXRbaV07XG4gICAgfVxuXG5yZXR1cm4gcGFyc2VkTGluZVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "columns.js"
      ],
      "names": [
        "split",
        "number",
        "parsedLine",
        "date",
        "Date",
        "columns",
        "setFullYear",
        "setHours",
        "setMilliseconds",
        "Error",
        "i",
        "undefined"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,kBAACA,KAAD,EAAOC,MAAP,EAAkB;AAC7B,MAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EADS;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAAnB;AAIDH,EAAAA,UAAU,CAACC,IAAX,CAAgBG,WAAhB,CAA4BN,KAAK,CAAC,CAAD,CAAjC,EAAuCA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAlD,EAAsDA,KAAK,CAAC,CAAD,CAA3D;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgBI,QAAhB,CAAyBP,KAAK,CAAC,CAAD,CAA9B,EAAmCA,KAAK,CAAC,CAAD,CAAxC,EAA6CA,KAAK,CAAC,CAAD,CAAlD;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgBK,eAAhB,CAAgC,CAAhC;;AACC,MAAIP,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,EAA5B,EAAgC;AAC5B,UAAMQ,KAAK,CAAC,gCAAgCR,MAAjC,CAAX;AACH;;AACD,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAApB,EAA4BS,CAAC,EAA7B,EAAiC;AAC7B,QAAIV,KAAK,CAACU,CAAD,CAAL,KAAaC,SAAjB,EAA4B;AACxBX,MAAAA,KAAK,CAACU,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,QAAIV,KAAK,CAACU,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClBV,MAAAA,KAAK,CAACU,CAAD,CAAL,GAAW,IAAX;AACH;;AACDR,IAAAA,UAAU,CAACG,OAAX,CAAmBK,CAAC,GAAG,CAAvB,IAA4BV,KAAK,CAACU,CAAD,CAAjC;AACH;;AAEL,SAAOR,UAAP;AACC,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of columns and return split line\n\nexport default (split,number) => {\n    const parsedLine = {\n        date: new Date(),\n        columns: []\n    };\n   parsedLine.date.setFullYear(split[0], (split[1] - 1), split[2]);\n   parsedLine.date.setHours(split[3], split[4], split[5]);\n   parsedLine.date.setMilliseconds(0)\n    if (number <= 6 || number > 40) {\n        throw Error('Unsupported number of rows ' + number)\n    }\n    for (let i = 6; i < number; i++) {\n        if (split[i] === undefined ){\n            split[i] = null;\n        }\n        if (split[i] === '?' ){\n            split[i] = null;\n        }\n        parsedLine.columns[i - 6] = split[i];\n    }\n\nreturn parsedLine\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575925191563
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/connection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "connection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//connecting to db\nvar _default = function _default() {\n  var connection = _mysql[\"default\"].createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'Luckas.11995544',\n    database: 'data'\n  });\n\n  connection.connect(function (err) {\n    if (!err) {// console.log(\"Connected\");\n    } else {\n      console.log(\"Connection Failed\");\n    }\n  });\n  return connection;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3Rpb24uanMiXSwibmFtZXMiOlsiY29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtlQUVlLG9CQUFLO0FBQ1osTUFBTUEsVUFBVSxHQUFHQyxrQkFBTUMsZ0JBQU4sQ0FBdUI7QUFDdENDLElBQUFBLElBQUksRUFBRSxXQURnQztBQUV0Q0MsSUFBQUEsSUFBSSxFQUFFLE1BRmdDO0FBR3RDQyxJQUFBQSxRQUFRLEVBQUUsaUJBSDRCO0FBSXRDQyxJQUFBQSxRQUFRLEVBQUU7QUFKNEIsR0FBdkIsQ0FBbkI7O0FBT0FOLEVBQUFBLFVBQVUsQ0FBQ08sT0FBWCxDQUFtQixVQUFDQyxHQUFELEVBQVM7QUFDeEIsUUFBSSxDQUFDQSxHQUFMLEVBQVUsQ0FDUDtBQUNGLEtBRkQsTUFFTztBQUNIQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWjtBQUNIO0FBRUosR0FQRDtBQVFSLFNBQU9WLFVBQVA7QUFDQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMvZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyIvL2Nvbm5lY3RpbmcgdG8gZGJcbmltcG9ydCBteXNxbCBmcm9tICdteXNxbCc7XG5leHBvcnQgZGVmYXVsdCAoKT0+IHtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgICAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgICAgICAgICB1c2VyOiAncm9vdCcsXG4gICAgICAgICAgICBwYXNzd29yZDogJ0x1Y2thcy4xMTk5NTU0NCcsXG4gICAgICAgICAgICBkYXRhYmFzZTogJ2RhdGEnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJDb25uZWN0ZWRcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGlvbiBGYWlsZWRcIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG5yZXR1cm4gY29ubmVjdGlvblxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "connection.js"
      ],
      "names": [
        "connection",
        "mysql",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;eAEe,oBAAK;AACZ,MAAMA,UAAU,GAAGC,kBAAMC,gBAAN,CAAuB;AACtCC,IAAAA,IAAI,EAAE,WADgC;AAEtCC,IAAAA,IAAI,EAAE,MAFgC;AAGtCC,IAAAA,QAAQ,EAAE,iBAH4B;AAItCC,IAAAA,QAAQ,EAAE;AAJ4B,GAAvB,CAAnB;;AAOAN,EAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,GAAD,EAAS;AACxB,QAAI,CAACA,GAAL,EAAU,CACP;AACF,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAEJ,GAPD;AAQR,SAAOV,UAAP;AACC,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//connecting to db\nimport mysql from 'mysql';\nexport default ()=> {\n        const connection = mysql.createConnection({\n            host: 'localhost',\n            user: 'root',\n            password: 'Luckas.11995544',\n            database: 'data'\n        });\n\n        connection.connect((err) => {\n            if (!err) {\n               // console.log(\"Connected\");\n            } else {\n                console.log(\"Connection Failed\");\n            }\n\n        });\nreturn connection\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575907203499
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "createtable.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createtable;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nfunction createtable() {\n  var connection = (0, _connection[\"default\"])();\n  var sql = \"CREATE TABLE IF NOT EXISTS txt_table ( datum VARCHAR(255) UNIQUE ,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS all_table ( datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS mol_table (datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS bud_table (datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS vlh_table ( datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS filename ( id int UNIQUE,name VARCHAR(25),filesize double)\";\n  connection.query(sql);\n  /* var sql= \"ALTER TABLE all_table  ADD (s11 double)\"\n   connection.query(sql);*/\n}\n\ncreatetable();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZXRhYmxlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZXRhYmxlIiwiY29ubmVjdGlvbiIsInNxbCIsInF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFGQTtBQUNBO0FBRWUsU0FBU0EsV0FBVCxHQUF1QjtBQUM5QixNQUFJQyxVQUFVLEdBQUcsNkJBQWpCO0FBQ0EsTUFBSUMsR0FBRyxHQUFHLGtLQUFWO0FBQ0FELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQUcsdUxBQVY7QUFDQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FBRyxnS0FBVjtBQUNBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBQ0EsTUFBSUEsR0FBRyxHQUFHLGdLQUFWO0FBQ0FELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQUcsaUtBQVY7QUFDQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FBRyx1RkFBVjtBQUNBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBQ0Q7O0FBSU47O0FBQ0RGLFdBQVciLCJzb3VyY2VSb290IjoiL2hvbWUvbHVja2F5cy9XZWJzdG9ybVByb2plY3RzL3JlYWx0aW1lc3FsL3NyYy9kYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1ha2UgbmV3IHRhYmxlLCBvciBhZGQgY29sdW1uOiBFWEFNUExFIHZhciBzcWw9IFwiQUxURVIgVEFCTEUgdHh0X3RhYmxlICBBREQgKHM5IFZBUkNIQVIoMjUpKVwiOywgcnVuIHNlcGFyYXRlbHlcbi8vIGlzIG5lY2Vzc2FyeSBoYXZlIHNhbWUgbnVtYmVyIG9mIGNvbHVtbiBpbiBkYXRhYmFzZSBhbmQgaW4gcGFyc2VGaWxlXG5pbXBvcnQgY3JlYXRlQ29ubmVjdGlvbiBmcm9tIFwiLi9jb25uZWN0aW9uXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGV0YWJsZSgpIHtcbiAgICAgICAgbGV0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKCk7XG4gICAgICAgIHZhciBzcWwgPSBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHR4dF90YWJsZSAoIGRhdHVtIFZBUkNIQVIoMjU1KSBVTklRVUUgLHMxIGRvdWJsZSwgczIgZG91YmxlLCBzMyBkb3VibGUsczQgZG91YmxlLHM1IGRvdWJsZSxzNiBkb3VibGUsIHM3IGRvdWJsZSxzOCBkb3VibGUsIHM5IGRvdWJsZSlcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuICAgICAgICB2YXIgc3FsID0gXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhbGxfdGFibGUgKCBkYXR1bSBWQVJDSEFSKDI1NSkgVU5JUVVFLHMxIGRvdWJsZSwgczIgZG91YmxlLCBzMyBkb3VibGUsczQgZG91YmxlLHM1IGRvdWJsZSxzNiBkb3VibGUsIHM3IGRvdWJsZSxzOCBkb3VibGUsIHM5IGRvdWJsZSxzMTAgZG91YmxlLHMxMSBkb3VibGUpXCI7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsKTtcbiAgICAgICAgdmFyIHNxbCA9IFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgbW9sX3RhYmxlIChkYXR1bSBWQVJDSEFSKDI1NSkgVU5JUVVFLHMxIGRvdWJsZSwgczIgZG91YmxlLCBzMyBkb3VibGUsczQgZG91YmxlLHM1IGRvdWJsZSxzNiBkb3VibGUsIHM3IGRvdWJsZSxzOCBkb3VibGUsIHM5IGRvdWJsZSlcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuICAgICAgICB2YXIgc3FsID0gXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBidWRfdGFibGUgKGRhdHVtIFZBUkNIQVIoMjU1KSBVTklRVUUsczEgZG91YmxlLCBzMiBkb3VibGUsIHMzIGRvdWJsZSxzNCBkb3VibGUsczUgZG91YmxlLHM2IGRvdWJsZSwgczcgZG91YmxlLHM4IGRvdWJsZSwgczkgZG91YmxlKVwiO1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgICAgIHZhciBzcWwgPSBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHZsaF90YWJsZSAoIGRhdHVtIFZBUkNIQVIoMjU1KSBVTklRVUUsczEgZG91YmxlLCBzMiBkb3VibGUsIHMzIGRvdWJsZSxzNCBkb3VibGUsczUgZG91YmxlLHM2IGRvdWJsZSwgczcgZG91YmxlLHM4IGRvdWJsZSwgczkgZG91YmxlKVwiO1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgICAgIHZhciBzcWwgPSBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGZpbGVuYW1lICggaWQgaW50IFVOSVFVRSxuYW1lIFZBUkNIQVIoMjUpLGZpbGVzaXplIGRvdWJsZSlcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuICAgICAgIC8qIHZhciBzcWw9IFwiQUxURVIgVEFCTEUgYWxsX3RhYmxlICBBREQgKHMxMSBkb3VibGUpXCJcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpOyovXG5cblxufVxuY3JlYXRldGFibGUoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "createtable.js"
      ],
      "names": [
        "createtable",
        "connection",
        "sql",
        "query"
      ],
      "mappings": ";;;;;;;AAEA;;;;AAFA;AACA;AAEe,SAASA,WAAT,GAAuB;AAC9B,MAAIC,UAAU,GAAG,6BAAjB;AACA,MAAIC,GAAG,GAAG,kKAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uLAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,gKAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,gKAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,iKAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uFAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACD;;AAIN;;AACDF,WAAW",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nimport createConnection from \"./connection\";\nexport default function createtable() {\n        let connection = createConnection();\n        var sql = \"CREATE TABLE IF NOT EXISTS txt_table ( datum VARCHAR(255) UNIQUE ,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS all_table ( datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS mol_table (datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS bud_table (datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS vlh_table ( datum VARCHAR(255) UNIQUE,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS filename ( id int UNIQUE,name VARCHAR(25),filesize double)\";\n        connection.query(sql);\n       /* var sql= \"ALTER TABLE all_table  ADD (s11 double)\"\n        connection.query(sql);*/\n\n\n}\ncreatetable();"
      ]
    },
    "sourceType": "script",
    "mtime": 1575926045019
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "savetodatabase.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar getDates = function getDates(fields) {\n  return fields.map(function (field) {\n    return field.date;\n  });\n};\n\nvar getColumns = function getColumns(fields) {\n  return fields.map(function (field) {\n    return field.columns;\n  });\n};\n\nvar getAll = function getAll(fields) {\n  return fields.map(function (field) {\n    return field;\n  });\n};\n\nvar toOneArray = function toOneArray(A) {\n  var todb = [];\n\n  for (var i = 0; i < A.length; i++) {\n    var k = [A[i].date].concat(_toConsumableArray(A[i].columns));\n    todb.push(k);\n  }\n\n  return todb;\n};\n\nvar _default = function _default(A, index, filename, oriniginalfileresult, fileSizeInBytes) {\n  if (oriniginalfileresult === false) {\n    var connection = (0, _connection[\"default\"])();\n    var sqlfilename = \"INSERT INTO filename VALUES ('\" + index + \"','\" + filename + \"','\" + fileSizeInBytes + \"')\";\n    connection.query(sqlfilename);\n    connection.end();\n  }\n\n  var c = getColumns(A);\n  var d = getDates(A);\n  var values = toOneArray(A);\n\n  var extension = _path[\"default\"].extname(filename).split('.')[1].toLocaleLowerCase();\n\n  switch (extension) {\n    case 'txt':\n      var sql = \"INSERT IGNORE INTO txt_table VALUES ?\";\n      var connection1 = (0, _connection[\"default\"])();\n      connection1.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection1.end();\n      });\n      break;\n\n    case 'all':\n      var connection2 = (0, _connection[\"default\"])();\n      var sql = \"INSERT IGNORE INTO all_table VALUES ?\";\n      connection2.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection2.end();\n      });\n      break;\n\n    case 'mol':\n      var connection3 = (0, _connection[\"default\"])();\n      var sql = \"INSERT IGNORE INTO mol_table VALUES ?\";\n      connection3.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection3.end();\n      });\n      break;\n\n    case 'bud':\n      var connection4 = (0, _connection[\"default\"])();\n      var sql = \"INSERT IGNORE INTO bud_table VALUES ? \";\n      connection4.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection4.end();\n      });\n      break;\n\n    case 'vlh':\n      var connection5 = (0, _connection[\"default\"])();\n      var sql = \"INSERT IGNORE INTO vlh_table VALUES ?\";\n      connection5.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection5.end();\n      });\n      break;\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "savetodatabase.js"
      ],
      "names": [
        "getDates",
        "fields",
        "map",
        "field",
        "date",
        "getColumns",
        "columns",
        "getAll",
        "toOneArray",
        "A",
        "todb",
        "i",
        "length",
        "k",
        "push",
        "index",
        "filename",
        "oriniginalfileresult",
        "fileSizeInBytes",
        "connection",
        "sqlfilename",
        "query",
        "end",
        "c",
        "d",
        "values",
        "extension",
        "path",
        "extname",
        "split",
        "toLocaleLowerCase",
        "sql",
        "connection1",
        "err",
        "result",
        "console",
        "log",
        "affectedRows",
        "connection2",
        "connection3",
        "connection4",
        "connection5"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;;;;;AAGA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM;AAAA,SAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAhB,CAAH;AAAA,CAAvB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAJ,MAAM;AAAA,SAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACG,OAAV;AAAA,GAAhB,CAAH;AAAA,CAAzB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAN,MAAM;AAAA,SAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAhB,CAAH;AAAA,CAArB;;AAEA,IAAIK,UAAU,GAAG,SAAbA,UAAa,CAASC,CAAT,EAAY;AACzB,MAAIC,IAAI,GAAG,EAAX;;AACJ,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACF,CAAC,CAACG,MAAlB,EAAyBD,CAAC,EAA1B,EAA6B;AACzB,QAAIE,CAAC,IAAKJ,CAAC,CAACE,CAAD,CAAD,CAAKP,IAAV,4BAAmBK,CAAC,CAACE,CAAD,CAAD,CAAKL,OAAxB,EAAL;AACAI,IAAAA,IAAI,CAACI,IAAL,CAAUD,CAAV;AAEH;;AACG,SAAOH,IAAP;AACH,CARD;;eAUe,kBAACD,CAAD,EAAGM,KAAH,EAASC,QAAT,EAAkBC,oBAAlB,EAAuCC,eAAvC,EAA2D;AAE1E,MAAID,oBAAoB,KAAG,KAA3B,EAAkC;AAC9B,QAAIE,UAAU,GAAG,6BAAjB;AACA,QAAIC,WAAW,GAAG,mCAAmCL,KAAnC,GAA2C,KAA3C,GAAmDC,QAAnD,GAA8D,KAA9D,GAAsEE,eAAtE,GAAwF,IAA1G;AACAC,IAAAA,UAAU,CAACE,KAAX,CAAiBD,WAAjB;AACAD,IAAAA,UAAU,CAACG,GAAX;AACH;;AACO,MAAIC,CAAC,GAAGlB,UAAU,CAACI,CAAD,CAAlB;AACA,MAAIe,CAAC,GAAGxB,QAAQ,CAACS,CAAD,CAAhB;AACA,MAAIgB,MAAM,GAAGjB,UAAU,CAACC,CAAD,CAAvB;;AAQA,MAAMiB,SAAS,GAAGC,iBAAKC,OAAL,CAAaZ,QAAb,EAAuBa,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,EAAqCC,iBAArC,EAAlB;;AACA,UAAQJ,SAAR;AACI,SAAK,KAAL;AACI,UAAIK,GAAG,GAAG,uCAAV;AACD,UAAIC,WAAW,GAAI,6BAAnB;AAECA,MAAAA,WAAW,CAACX,KAAZ,CAAkBU,GAAlB,EAAuB,CAACN,MAAD,CAAvB,EAAiC,UAAUQ,GAAV,EAAeC,MAAf,EAAuB;AACpD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,MAAM,CAACG,YAApD;AACAL,QAAAA,WAAW,CAACV,GAAZ;AACH,OAJD;AAKA;;AACJ,SAAK,KAAL;AACI,UAAIgB,WAAW,GAAG,6BAAlB;AACA,UAAIP,GAAG,GAAG,uCAAV;AACAO,MAAAA,WAAW,CAACjB,KAAZ,CAAkBU,GAAlB,EAAuB,CAACN,MAAD,CAAvB,EAAiC,UAAUQ,GAAV,EAAeC,MAAf,EAAuB;AACpD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,MAAM,CAACG,YAApD;AACAC,QAAAA,WAAW,CAAChB,GAAZ;AACH,OAJD;AAKA;;AACJ,SAAK,KAAL;AACI,UAAIiB,WAAW,GAAG,6BAAlB;AACA,UAAIR,GAAG,GAAG,uCAAV;AACAQ,MAAAA,WAAW,CAAClB,KAAZ,CAAkBU,GAAlB,EAAuB,CAACN,MAAD,CAAvB,EAAiC,UAAUQ,GAAV,EAAeC,MAAf,EAAuB;AACpD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,MAAM,CAACG,YAApD;AACAE,QAAAA,WAAW,CAACjB,GAAZ;AACH,OAJD;AAKA;;AACJ,SAAK,KAAL;AACI,UAAIkB,WAAW,GAAG,6BAAlB;AACA,UAAIT,GAAG,GAAG,wCAAV;AACAS,MAAAA,WAAW,CAACnB,KAAZ,CAAkBU,GAAlB,EAAuB,CAACN,MAAD,CAAvB,EAAiC,UAAUQ,GAAV,EAAeC,MAAf,EAAuB;AACpD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,MAAM,CAACG,YAApD;AACAG,QAAAA,WAAW,CAAClB,GAAZ;AACH,OAJD;AAKA;;AAGJ,SAAK,KAAL;AACI,UAAImB,WAAW,GAAG,6BAAlB;AACA,UAAIV,GAAG,GAAG,uCAAV;AACAU,MAAAA,WAAW,CAACpB,KAAZ,CAAkBU,GAAlB,EAAuB,CAACN,MAAD,CAAvB,EAAiC,UAAUQ,GAAV,EAAeC,MAAf,EAAuB;AACpD,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,MAAM,CAACG,YAApD;AACAI,QAAAA,WAAW,CAACnB,GAAZ;AACH,OAJD;AAKA;AAhDR;AAuDP,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//saving to db\nimport createConnection from \"./connection\";\nimport path from \"path\";\n\n\nconst getDates = fields =>fields.map(field => field.date)\nconst getColumns = fields =>fields.map(field => field.columns)\nconst getAll = fields =>fields.map(field => field)\n\nvar toOneArray = function(A) {\n    let todb = [];\nfor(let i = 0;i<A.length;i++){\n    let k = ([A[i].date, ...A[i].columns]);\n    todb.push(k)\n\n}\n    return todb\n}\n\nexport default (A,index,filename,oriniginalfileresult,fileSizeInBytes) => {\n\nif (oriniginalfileresult===false) {\n    let connection = createConnection();\n    var sqlfilename = \"INSERT INTO filename VALUES ('\" + index + \"','\" + filename + \"','\" + fileSizeInBytes + \"')\";\n    connection.query(sqlfilename);\n    connection.end();\n}\n        let c = getColumns(A)\n        let d = getDates(A)\n        let values = toOneArray(A)\n\n\n\n\n\n\n\n        const extension = path.extname(filename).split('.')[1].toLocaleLowerCase();\n        switch (extension) {\n            case 'txt':\n                var sql = \"INSERT IGNORE INTO txt_table VALUES ?\";\n               let connection1 =  createConnection();\n\n                connection1.query(sql, [values], function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                    connection1.end();\n                });\n                break;\n            case 'all':\n                let connection2 = createConnection();\n                var sql = \"INSERT IGNORE INTO all_table VALUES ?\";\n                connection2.query(sql, [values], function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                    connection2.end();\n                });\n                break;\n            case 'mol':\n                let connection3 = createConnection();\n                var sql = \"INSERT IGNORE INTO mol_table VALUES ?\";\n                connection3.query(sql, [values], function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                    connection3.end();\n                });\n                break;\n            case 'bud':\n                let connection4 = createConnection();\n                var sql = \"INSERT IGNORE INTO bud_table VALUES ? \";\n                connection4.query(sql, [values], function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                    connection4.end();\n                });\n                break;\n\n\n            case 'vlh':\n                let connection5 = createConnection();\n                var sql = \"INSERT IGNORE INTO vlh_table VALUES ?\";\n                connection5.query(sql, [values], function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                    connection5.end();\n                });\n                break;\n\n        }\n\n\n\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575926629876
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "updatefilesize.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar connection = (0, _connection[\"default\"])();\n\nvar _default = function _default(size, id) {\n  var sql = \"UPDATE filename SET filesize = '\" + size + \"' WHERE id = '\" + id + \"'\";\n  connection.query(sql, function (err, result) {\n    if (err) throw err;\n    console.log(result.affectedRows + \" record(s) updated\");\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZWZpbGVzaXplLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb24iLCJzaXplIiwiaWQiLCJzcWwiLCJxdWVyeSIsImVyciIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJhZmZlY3RlZFJvd3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQUlBLFVBQVUsR0FBRyw2QkFBakI7O2VBQ2Usa0JBQUNDLElBQUQsRUFBTUMsRUFBTixFQUFhO0FBRXBCLE1BQUlDLEdBQUcsR0FBRyxxQ0FBbUNGLElBQW5DLEdBQXdDLGdCQUF4QyxHQUF5REMsRUFBekQsR0FBNEQsR0FBdEU7QUFDQUYsRUFBQUEsVUFBVSxDQUFDSSxLQUFYLENBQWlCRCxHQUFqQixFQUFzQixVQUFVRSxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFDekMsUUFBSUQsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVEUsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLE1BQU0sQ0FBQ0csWUFBUCxHQUFzQixvQkFBbEM7QUFDUCxHQUhHO0FBS1AsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjL2RhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUNvbm5lY3Rpb24gZnJvbSBcIi4vY29ubmVjdGlvblwiO1xuXG5sZXQgY29ubmVjdGlvbiA9IGNyZWF0ZUNvbm5lY3Rpb24oKTtcbmV4cG9ydCBkZWZhdWx0IChzaXplLGlkKSA9PiB7XG5cbiAgICAgICAgdmFyIHNxbCA9IFwiVVBEQVRFIGZpbGVuYW1lIFNFVCBmaWxlc2l6ZSA9ICdcIitzaXplK1wiJyBXSEVSRSBpZCA9ICdcIitpZCtcIidcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0LmFmZmVjdGVkUm93cyArIFwiIHJlY29yZChzKSB1cGRhdGVkXCIpO1xuICAgIH0pO1xuXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "updatefilesize.js"
      ],
      "names": [
        "connection",
        "size",
        "id",
        "sql",
        "query",
        "err",
        "result",
        "console",
        "log",
        "affectedRows"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAIA,UAAU,GAAG,6BAAjB;;eACe,kBAACC,IAAD,EAAMC,EAAN,EAAa;AAEpB,MAAIC,GAAG,GAAG,qCAAmCF,IAAnC,GAAwC,gBAAxC,GAAyDC,EAAzD,GAA4D,GAAtE;AACAF,EAAAA,UAAU,CAACI,KAAX,CAAiBD,GAAjB,EAAsB,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzC,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,YAAP,GAAsB,oBAAlC;AACP,GAHG;AAKP,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "import createConnection from \"./connection\";\n\nlet connection = createConnection();\nexport default (size,id) => {\n\n        var sql = \"UPDATE filename SET filesize = '\"+size+\"' WHERE id = '\"+id+\"'\";\n        connection.query(sql, function (err, result) {\n            if (err) throw err;\n            console.log(result.affectedRows + \" record(s) updated\");\n    });\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575927737744
  }
}