{
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _openFolder = _interopRequireDefault(require(\"./src/openFolder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//function of index set name of folder, excerpt data, start openFolder\nvar app = (0, _express[\"default\"])();\napp.listen(3000);\nvar data = (0, _openFolder[\"default\"])('data').then(function (data) {\n  console.log(data);\n});\napp.get('/jedem', function (req, res) {\n  res.send(data);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImxpc3RlbiIsImRhdGEiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFIQTtBQUlBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxJQUFYO0FBRUEsSUFBSUMsSUFBSSxHQUFHLDRCQUFXLE1BQVgsRUFBbUJDLElBQW5CLENBQXdCLFVBQUNELElBQUQsRUFBUTtBQUN2Q0UsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILElBQVo7QUFDSCxDQUZVLENBQVg7QUFHQUYsR0FBRyxDQUFDTSxHQUFKLENBQVEsUUFBUixFQUFrQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDbENBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTUCxJQUFUO0FBRUgsQ0FIRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwiLCJzb3VyY2VzQ29udGVudCI6WyIvL2Z1bmN0aW9uIG9mIGluZGV4IHNldCBuYW1lIG9mIGZvbGRlciwgZXhjZXJwdCBkYXRhLCBzdGFydCBvcGVuRm9sZGVyXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCBvcGVuRm9sZGVyIGZyb20gXCIuL3NyYy9vcGVuRm9sZGVyXCI7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5hcHAubGlzdGVuKDMwMDApO1xuXG5sZXQgZGF0YSA9IG9wZW5Gb2xkZXIoJ2RhdGEnKS50aGVuKChkYXRhKT0+e1xuICAgIGNvbnNvbGUubG9nKGRhdGEpXG59KTtcbmFwcC5nZXQoJy9qZWRlbScsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIHJlcy5zZW5kKGRhdGEpO1xuXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "listen",
        "data",
        "then",
        "console",
        "log",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHA;AAIA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,MAAJ,CAAW,IAAX;AAEA,IAAIC,IAAI,GAAG,4BAAW,MAAX,EAAmBC,IAAnB,CAAwB,UAACD,IAAD,EAAQ;AACvCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,CAFU,CAAX;AAGAF,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClCA,EAAAA,GAAG,CAACC,IAAJ,CAASP,IAAT;AAEH,CAHD",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "sourcesContent": [
        "//function of index set name of folder, excerpt data, start openFolder\nimport express from 'express'\nimport path from 'path'\nimport openFolder from \"./src/openFolder\";\nconst app = express();\napp.listen(3000);\n\nlet data = openFolder('data').then((data)=>{\n    console.log(data)\n});\napp.get('/jedem', function (req, res) {\n    res.send(data);\n\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1575203299638
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/openFolder.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "openFolder.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _loadFile = _interopRequireDefault(require(\"./loadFile\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nvar _savetodatabase = _interopRequireDefault(require(\"./database/savetodatabase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// function of openFolder: read filename from folder, save filename, start loadFile\nvar _default = function _default(foldername) {\n  return new Promise(function (resolve) {\n    var filename = _fs[\"default\"].readdirSync(foldername);\n\n    var A;\n\n    var _loop = function _loop(i) {\n      (0, _loadFile[\"default\"])(filename[i]).then(function (A) {\n        (0, _savetodatabase[\"default\"])(A, filename[i]);\n      })[\"catch\"](function (error) {\n        console.log(\"error\");\n      });\n    };\n\n    for (var i = 0; i < filename.length; i++) {\n      _loop(i);\n    }\n\n    return A;\n    console.log(filename);\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZW5Gb2xkZXIuanMiXSwibmFtZXMiOlsiZm9sZGVybmFtZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiZmlsZW5hbWUiLCJmcyIsInJlYWRkaXJTeW5jIiwiQSIsImkiLCJ0aGVuIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFKQTtlQU1lLGtCQUFDQSxVQUFELEVBQWU7QUFDMUIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQzFCLFFBQUlDLFFBQVEsR0FBR0MsZUFBR0MsV0FBSCxDQUFlTCxVQUFmLENBQWY7O0FBQ0EsUUFBSU0sQ0FBSjs7QUFGMEIsK0JBR2pCQyxDQUhpQjtBQUl0QixnQ0FBU0osUUFBUSxDQUFDSSxDQUFELENBQWpCLEVBQXNCQyxJQUF0QixDQUEyQixVQUFDRixDQUFELEVBQU87QUFFbEMsd0NBQWVBLENBQWYsRUFBaUJILFFBQVEsQ0FBQ0ksQ0FBRCxDQUF6QjtBQUVDLE9BSkQsV0FJUyxVQUFDRSxLQUFELEVBQVc7QUFDaEJDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFFSixPQVBBO0FBSnNCOztBQUcxQixTQUFLLElBQUlKLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdKLFFBQVEsQ0FBQ1MsTUFBN0IsRUFBcUNMLENBQUMsRUFBdEMsRUFBMEM7QUFBQSxZQUFqQ0EsQ0FBaUM7QUFTekM7O0FBQ0QsV0FBT0QsQ0FBUDtBQUNBSSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVIsUUFBWjtBQUNILEdBZk0sQ0FBUDtBQWtCQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmdW5jdGlvbiBvZiBvcGVuRm9sZGVyOiByZWFkIGZpbGVuYW1lIGZyb20gZm9sZGVyLCBzYXZlIGZpbGVuYW1lLCBzdGFydCBsb2FkRmlsZVxuaW1wb3J0IGZzIGZyb20gJ2ZzJ1xuaW1wb3J0IGxvYWRGaWxlIGZyb20gXCIuL2xvYWRGaWxlXCI7XG5pbXBvcnQgY3JlYXRlQ29ubmVjdGlvbiBmcm9tIFwiLi9kYXRhYmFzZS9jb25uZWN0aW9uXCI7XG5pbXBvcnQgc2F2ZXRvZGF0YWJhc2UgZnJvbSBcIi4vZGF0YWJhc2Uvc2F2ZXRvZGF0YWJhc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZvbGRlcm5hbWUpPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgdmFyIGZpbGVuYW1lID0gZnMucmVhZGRpclN5bmMoZm9sZGVybmFtZSk7XG4gICAgICAgIGxldCBBO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVuYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsb2FkRmlsZShmaWxlbmFtZVtpXSkudGhlbigoQSkgPT4ge1xuXG4gICAgICAgICAgICBzYXZldG9kYXRhYmFzZShBLGZpbGVuYW1lW2ldKVxuXG4gICAgICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yXCIpXG5cbiAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQVxuICAgICAgICBjb25zb2xlLmxvZyhmaWxlbmFtZSlcbiAgICB9KVxuXG5cbiAgICB9XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "openFolder.js"
      ],
      "names": [
        "foldername",
        "Promise",
        "resolve",
        "filename",
        "fs",
        "readdirSync",
        "A",
        "i",
        "then",
        "error",
        "console",
        "log",
        "length"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AACA;;;;AAJA;eAMe,kBAACA,UAAD,EAAe;AAC1B,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,QAAIC,QAAQ,GAAGC,eAAGC,WAAH,CAAeL,UAAf,CAAf;;AACA,QAAIM,CAAJ;;AAF0B,+BAGjBC,CAHiB;AAItB,gCAASJ,QAAQ,CAACI,CAAD,CAAjB,EAAsBC,IAAtB,CAA2B,UAACF,CAAD,EAAO;AAElC,wCAAeA,CAAf,EAAiBH,QAAQ,CAACI,CAAD,CAAzB;AAEC,OAJD,WAIS,UAACE,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEJ,OAPA;AAJsB;;AAG1B,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACS,MAA7B,EAAqCL,CAAC,EAAtC,EAA0C;AAAA,YAAjCA,CAAiC;AASzC;;AACD,WAAOD,CAAP;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,GAfM,CAAP;AAkBC,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of openFolder: read filename from folder, save filename, start loadFile\nimport fs from 'fs'\nimport loadFile from \"./loadFile\";\nimport createConnection from \"./database/connection\";\nimport savetodatabase from \"./database/savetodatabase\";\n\nexport default (foldername)=> {\n    return new Promise(resolve => {\n        var filename = fs.readdirSync(foldername);\n        let A;\n        for (let i = 0; i < filename.length; i++) {\n            loadFile(filename[i]).then((A) => {\n\n            savetodatabase(A,filename[i])\n\n            }).catch((error) => {\n                console.log(\"error\")\n\n           })\n        }\n        return A\n        console.log(filename)\n    })\n\n\n    }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575463883399
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/parseFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "parseFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1573058656476
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/loadFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "loadFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _columns = _interopRequireDefault(require(\"./columns\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// function of loadFile: separate files dependent on extension, start columns\n//set number of columns\nvar r_all = 15;\nvar r_txt = 15;\nvar r_mol = 15;\nvar r_bud = 15;\nvar r_vlh = 15;\nvar connection = (0, _connection[\"default\"])();\n\nvar _default = function _default(filename) {\n  return new Promise(function (resolve, reject) {\n    var readInterface = _readline[\"default\"].createInterface({\n      input: _fs[\"default\"].createReadStream(_path[\"default\"].join(__dirname, '../data/', filename)),\n      output: process.stdout,\n      console: false\n    });\n\n    readInterface.clear;\n    console.log(filename);\n\n    var extension = _path[\"default\"].extname(filename).split('.')[1].toLocaleLowerCase();\n\n    var A = [];\n    var i = 0;\n\n    switch (extension) {\n      case 'all':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_all));\n        });\n        break;\n\n      case 'txt':\n        readInterface.on('line', function (line) {\n          i++;\n\n          if (i === 1) {\n            return;\n          }\n\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_txt));\n        });\n        break;\n\n      case 'mol':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_mol));\n        });\n        break;\n\n      case 'bud':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_bud));\n        });\n        break;\n\n      case 'vlh':\n        readInterface.on('line', function (line) {\n          var split = line.split(' ').filter(function (item) {\n            return item !== '';\n          });\n          A.push((0, _columns[\"default\"])(split, r_vlh));\n        });\n        break;\n    }\n\n    readInterface.on('close', function () {\n      resolve(A);\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWRGaWxlLmpzIl0sIm5hbWVzIjpbInJfYWxsIiwicl90eHQiLCJyX21vbCIsInJfYnVkIiwicl92bGgiLCJjb25uZWN0aW9uIiwiZmlsZW5hbWUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlYWRJbnRlcmZhY2UiLCJyZWFkbGluZSIsImNyZWF0ZUludGVyZmFjZSIsImlucHV0IiwiZnMiLCJjcmVhdGVSZWFkU3RyZWFtIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJvdXRwdXQiLCJwcm9jZXNzIiwic3Rkb3V0IiwiY29uc29sZSIsImNsZWFyIiwibG9nIiwiZXh0ZW5zaW9uIiwiZXh0bmFtZSIsInNwbGl0IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJBIiwiaSIsIm9uIiwibGluZSIsImZpbHRlciIsIml0ZW0iLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBUUE7O0FBQ0E7Ozs7QUFaQTtBQUtBO0FBQ0EsSUFBSUEsS0FBSyxHQUFHLEVBQVo7QUFDQSxJQUFJQyxLQUFLLEdBQUcsRUFBWjtBQUNBLElBQUlDLEtBQUssR0FBRyxFQUFaO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQSxJQUFJQyxLQUFLLEdBQUcsRUFBWjtBQUdBLElBQU1DLFVBQVUsR0FBRyw2QkFBbkI7O2VBR2Usa0JBQUNDLFFBQUQsRUFBYztBQUN6QixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDeEMsUUFBTUMsYUFBYSxHQUFHQyxxQkFBU0MsZUFBVCxDQUF5QjtBQUMzQ0MsTUFBQUEsS0FBSyxFQUFFQyxlQUFHQyxnQkFBSCxDQUFvQkMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixVQUFyQixFQUFpQ1osUUFBakMsQ0FBcEIsQ0FEb0M7QUFFM0NhLE1BQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxNQUYyQjtBQUczQ0MsTUFBQUEsT0FBTyxFQUFFO0FBSGtD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UDtBQUFXLEtBQTVDO0FBQ1AsR0E5RFUsQ0FBUDtBQStESCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmdW5jdGlvbiBvZiBsb2FkRmlsZTogc2VwYXJhdGUgZmlsZXMgZGVwZW5kZW50IG9uIGV4dGVuc2lvbiwgc3RhcnQgY29sdW1uc1xuaW1wb3J0IHJlYWRsaW5lIGZyb20gXCJyZWFkbGluZVwiO1xuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCBmcyBmcm9tIFwiZnNcIlxuXG4vL3NldCBudW1iZXIgb2YgY29sdW1uc1xubGV0IHJfYWxsID0gMTU7XG5sZXQgcl90eHQgPSAxNTtcbmxldCByX21vbCA9IDE1O1xubGV0IHJfYnVkID0gMTU7XG5sZXQgcl92bGggPSAxNTtcbmltcG9ydCBjb2x1bW5zIGZyb20gXCIuL2NvbHVtbnNcIjtcbmltcG9ydCBjcmVhdGVDb25uZWN0aW9uIGZyb20gXCIuL2RhdGFiYXNlL2Nvbm5lY3Rpb25cIjtcbmNvbnN0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKClcblxuXG5leHBvcnQgZGVmYXVsdCAoZmlsZW5hbWUpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHJlYWRJbnRlcmZhY2UgPSByZWFkbGluZS5jcmVhdGVJbnRlcmZhY2Uoe1xuICAgICAgICBpbnB1dDogZnMuY3JlYXRlUmVhZFN0cmVhbShwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vZGF0YS8nLCBmaWxlbmFtZSkpLFxuICAgICAgICBvdXRwdXQ6IHByb2Nlc3Muc3Rkb3V0LFxuICAgICAgICBjb25zb2xlOiBmYWxzZVxuXG4gICAgfSk7XG4gICAgcmVhZEludGVyZmFjZS5jbGVhcjtcblxuICAgIGNvbnNvbGUubG9nKGZpbGVuYW1lKTtcbiAgICBjb25zdCBleHRlbnNpb24gPSBwYXRoLmV4dG5hbWUoZmlsZW5hbWUpLnNwbGl0KCcuJylbMV0udG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgICAgbGV0IEEgPSBbXTtcbiAgICAgICAgbGV0IGkgPSAwO1xuICAgIHN3aXRjaCAoZXh0ZW5zaW9uKSB7XG5cbiAgICAgICAgY2FzZSAnYWxsJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl9hbGwpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAndHh0JzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIGlmIChpID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl90eHQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnbW9sJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl9tb2wpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnYnVkJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl9idWQpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAndmxoJzpcblxuICAgICAgICAgICAgcmVhZEludGVyZmFjZS5vbignbGluZScsIChsaW5lKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0ID0gbGluZS5zcGxpdCgnICcpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICcnKTtcbiAgICAgICAgICAgICAgICBBLnB1c2goY29sdW1ucyhzcGxpdCwgcl92bGgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuXG5cbiAgICAgICAgcmVhZEludGVyZmFjZS5vbignY2xvc2UnLCAoKSA9PiB7cmVzb2x2ZShBKX0pXG59KVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "loadFile.js"
      ],
      "names": [
        "r_all",
        "r_txt",
        "r_mol",
        "r_bud",
        "r_vlh",
        "connection",
        "filename",
        "Promise",
        "resolve",
        "reject",
        "readInterface",
        "readline",
        "createInterface",
        "input",
        "fs",
        "createReadStream",
        "path",
        "join",
        "__dirname",
        "output",
        "process",
        "stdout",
        "console",
        "clear",
        "log",
        "extension",
        "extname",
        "split",
        "toLocaleLowerCase",
        "A",
        "i",
        "on",
        "line",
        "filter",
        "item",
        "push"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of loadFile: separate files dependent on extension, start columns\nimport readline from \"readline\";\nimport path from \"path\";\nimport fs from \"fs\"\n\n//set number of columns\nlet r_all = 15;\nlet r_txt = 15;\nlet r_mol = 15;\nlet r_bud = 15;\nlet r_vlh = 15;\nimport columns from \"./columns\";\nimport createConnection from \"./database/connection\";\nconst connection = createConnection()\n\n\nexport default (filename) => {\n    return new Promise((resolve, reject) => {\n    const readInterface = readline.createInterface({\n        input: fs.createReadStream(path.join(__dirname, '../data/', filename)),\n        output: process.stdout,\n        console: false\n\n    });\n    readInterface.clear;\n\n    console.log(filename);\n    const extension = path.extname(filename).split('.')[1].toLocaleLowerCase();\n        let A = [];\n        let i = 0;\n    switch (extension) {\n\n        case 'all':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_all));\n            });\n            break;\n\n        case 'txt':\n\n            readInterface.on('line', (line) => {\n                i++;\n                if (i === 1) {\n                    return;\n                }\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_txt));\n            });\n            break;\n\n        case 'mol':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_mol));\n            });\n            break;\n\n        case 'bud':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_bud));\n            });\n            break;\n\n        case 'vlh':\n\n            readInterface.on('line', (line) => {\n                let split = line.split(' ').filter(item => item !== '');\n                A.push(columns(split, r_vlh));\n            });\n            break;\n    }\n\n\n        readInterface.on('close', () => {resolve(A)})\n})\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575396895708
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/rows.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "rows.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// function of rows: throw values to definited +number+ of rows and return split line\nvar parsedLines = [];\n\nvar _default = function _default(split, number) {\n  var date = new Date();\n  date.setFullYear(split[0], split[1] - 1, split[2]);\n  date.setHours(split[3], split[4], split[5]);\n  var s7 = split[6];\n  var s8 = split[7];\n  var s9 = split[8];\n  var s10 = split[9];\n  var s11 = split[10];\n  var s12 = split[11];\n  var s13 = split[12];\n  var s14 = split[13];\n  var s15 = split[14];\n  var s16 = split[15];\n  var s17 = split[16];\n  var s18 = split[17];\n  var s19 = split[18];\n  var s20 = split[19];\n  var s21 = split[20];\n  var s22 = split[21];\n  var s23 = split[22];\n  var s24 = split[23];\n  var s25 = split[24];\n  var s26 = split[25];\n  var s27 = split[26];\n  var s28 = split[27];\n  var s29 = split[28];\n  var s30 = split[29];\n  var s31 = split[30];\n  var s32 = split[31];\n  var s33 = split[32];\n  var s34 = split[33];\n  var s35 = split[34];\n  var s36 = split[35];\n  var s37 = split[36];\n  var s38 = split[37];\n  var s39 = split[38];\n  var s40 = split[39];\n\n  switch (number) {\n    case number <= 6:\n      throw Error('Unsupported number of rows ' + number);\n\n    case 7:\n      parsedLines = {\n        date: date,\n        s7: s7\n      };\n      break;\n\n    case 8:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8\n      };\n      break;\n\n    case 9:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9\n      };\n      break;\n\n    case 10:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10\n      };\n      break;\n\n    case 11:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11\n      };\n      break;\n\n    case 12:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12\n      };\n      break;\n\n    case 13:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13\n      };\n      break;\n\n    case 14:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14\n      };\n      break;\n\n    case 15:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15\n      };\n      break;\n\n    case 16:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16\n      };\n      break;\n\n    case 17:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17\n      };\n      break;\n\n    case 18:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18\n      };\n      break;\n\n    case 19:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19\n      };\n      break;\n\n    case 20:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20\n      };\n      break;\n\n    case 21:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21\n      };\n      break;\n\n    case 22:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22\n      };\n      break;\n\n    case 23:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23\n      };\n      break;\n\n    case 24:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24\n      };\n      break;\n\n    case 25:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25\n      };\n      break;\n\n    case 26:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26\n      };\n      break;\n\n    case 27:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27\n      };\n      break;\n\n    case 28:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28\n      };\n      break;\n\n    case 29:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29\n      };\n      break;\n\n    case 30:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30\n      };\n      break;\n\n    case 31:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31\n      };\n      break;\n\n    case 32:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32\n      };\n      break;\n\n    case 33:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33\n      };\n      break;\n\n    case 34:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34\n      };\n      break;\n\n    case 35:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35\n      };\n      break;\n\n    case 36:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36\n      };\n      break;\n\n    case 37:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37\n      };\n      break;\n\n    case 38:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38\n      };\n      break;\n\n    case 39:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39\n      };\n      break;\n\n    case 40:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39,\n        s40: s40\n      };\n      break;\n  } //console.log(parsedLines)\n\n\n  return parsedLines;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "rows.js"
      ],
      "names": [
        "parsedLines",
        "split",
        "number",
        "date",
        "Date",
        "setFullYear",
        "setHours",
        "s7",
        "s8",
        "s9",
        "s10",
        "s11",
        "s12",
        "s13",
        "s14",
        "s15",
        "s16",
        "s17",
        "s18",
        "s19",
        "s20",
        "s21",
        "s22",
        "s23",
        "s24",
        "s25",
        "s26",
        "s27",
        "s28",
        "s29",
        "s30",
        "s31",
        "s32",
        "s33",
        "s34",
        "s35",
        "s36",
        "s37",
        "s38",
        "s39",
        "s40",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of rows and return split line\nlet parsedLines = [];\nexport default (split,number) => {\n    let date = new Date();\n    date.setFullYear(split[0], (split[1] - 1), split[2]);\n    date.setHours(split[3], split[4], split[5]);\n    let s7 = split[6];\n    let s8 = split[7];\n    let s9 = split[8];\n    let s10 = split[9];\n    let s11 = split[10];\n    let s12 = split[11];\n    let s13 = split[12];\n    let s14 = split[13];\n    let s15 = split[14];\n    let s16 = split[15];\n    let s17 = split[16];\n    let s18 = split[17];\n    let s19 = split[18];\n    let s20 = split[19];\n    let s21 = split[20];\n    let s22 = split[21];\n    let s23 = split[22];\n    let s24 = split[23];\n    let s25 = split[24];\n    let s26 = split[25];\n    let s27 = split[26];\n    let s28 = split[27];\n    let s29 = split[28];\n    let s30 = split[29];\n    let s31 = split[30];\n    let s32 = split[31];\n    let s33 = split[32];\n    let s34 = split[33];\n    let s35 = split[34];\n    let s36 = split[35];\n    let s37 = split[36];\n    let s38 = split[37];\n    let s39 = split[38];\n    let s40 = split[39];\n\n    switch(number){\n        case (number<=6):\n            throw Error('Unsupported number of rows ' + number)\n        case 7:\n            parsedLines = ({date,s7});\n        break;\n        case 8:\n            parsedLines = ({date,s7,s8});\n            break;\n        case 9:\n            parsedLines = ({date,s7,s8,s9});\n            break;\n        case 10:\n            parsedLines = ({date,s7,s8,s9,s10});\n            break;\n        case 11:\n            parsedLines = ({date,s7,s8,s9,s10,s11});\n            break;\n        case 12:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12});\n\n            break;\n        case 13:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13});\n            break;\n        case 14:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14});\n            break;\n        case 15:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15});\n            break;\n        case 16:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16});\n            break;\n        case 17:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17});\n            break;\n        case 18:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18});\n            break;\n        case 19:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19});\n            break;\n        case 20:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20});\n            break;\n        case 21:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21});\n            break;\n        case 22:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22});\n            break;\n        case 23:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23});\n            break;\n        case 24:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24});\n            break;\n        case 25:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25});\n            break;\n        case 26:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26});\n            break;\n        case 27:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27});\n            break;\n        case 28:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28});\n            break;\n        case 29:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29});\n            break;\n        case 30:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30});\n            break;\n        case 31:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31});\n            break;\n        case 32:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32});\n            break;\n        case 33:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33});\n            break;\n        case 34:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34});\n            break;\n        case 35:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35});\n            break;\n        case 36:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36});\n            break;\n        case 37:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37});\n            break;\n        case 38:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38});\n            break;\n        case 39:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39});\n            break;\n        case 40:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40});\n            break;\n\n\n    }\n//console.log(parsedLines)\nreturn parsedLines\n\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1573059286086
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/columns.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "columns.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n// function of rows: throw values to definited +number+ of columns and return split line\nvar _default = function _default(split, number) {\n  var parsedLine = {\n    date: new Date(),\n    columns: []\n  };\n  parsedLine.date.setFullYear(split[0], split[1] - 1, split[2]);\n  parsedLine.date.setHours(split[3], split[4], split[5]);\n\n  if (number <= 6 || number > 40) {\n    throw Error('Unsupported number of rows ' + number);\n  }\n\n  for (var i = 6; i < number; i++) {\n    if (split[i] === undefined) {\n      split[i] = null;\n    }\n\n    if (split[i] === '?') {\n      split[i] = null;\n    }\n\n    parsedLine.columns[i - 6] = split[i];\n  }\n\n  return parsedLine;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbnMuanMiXSwibmFtZXMiOlsic3BsaXQiLCJudW1iZXIiLCJwYXJzZWRMaW5lIiwiZGF0ZSIsIkRhdGUiLCJjb2x1bW5zIiwic2V0RnVsbFllYXIiLCJzZXRIb3VycyIsIkVycm9yIiwiaSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO2VBRWUsa0JBQUNBLEtBQUQsRUFBT0MsTUFBUCxFQUFrQjtBQUM3QixNQUFNQyxVQUFVLEdBQUc7QUFDZkMsSUFBQUEsSUFBSSxFQUFFLElBQUlDLElBQUosRUFEUztBQUVmQyxJQUFBQSxPQUFPLEVBQUU7QUFGTSxHQUFuQjtBQUlESCxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JHLFdBQWhCLENBQTRCTixLQUFLLENBQUMsQ0FBRCxDQUFqQyxFQUF1Q0EsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLENBQWxELEVBQXNEQSxLQUFLLENBQUMsQ0FBRCxDQUEzRDtBQUNBRSxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JJLFFBQWhCLENBQXlCUCxLQUFLLENBQUMsQ0FBRCxDQUE5QixFQUFtQ0EsS0FBSyxDQUFDLENBQUQsQ0FBeEMsRUFBNkNBLEtBQUssQ0FBQyxDQUFELENBQWxEOztBQUNDLE1BQUlDLE1BQU0sSUFBSSxDQUFWLElBQWVBLE1BQU0sR0FBRyxFQUE1QixFQUFnQztBQUM1QixVQUFNTyxLQUFLLENBQUMsZ0NBQWdDUCxNQUFqQyxDQUFYO0FBQ0g7O0FBQ0QsT0FBSyxJQUFJUSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUixNQUFwQixFQUE0QlEsQ0FBQyxFQUE3QixFQUFpQztBQUM3QixRQUFJVCxLQUFLLENBQUNTLENBQUQsQ0FBTCxLQUFhQyxTQUFqQixFQUE0QjtBQUN4QlYsTUFBQUEsS0FBSyxDQUFDUyxDQUFELENBQUwsR0FBVyxJQUFYO0FBQ0g7O0FBQ0QsUUFBSVQsS0FBSyxDQUFDUyxDQUFELENBQUwsS0FBYSxHQUFqQixFQUFzQjtBQUNsQlQsTUFBQUEsS0FBSyxDQUFDUyxDQUFELENBQUwsR0FBVyxJQUFYO0FBQ0g7O0FBQ0RQLElBQUFBLFVBQVUsQ0FBQ0csT0FBWCxDQUFtQkksQ0FBQyxHQUFHLENBQXZCLElBQTRCVCxLQUFLLENBQUNTLENBQUQsQ0FBakM7QUFDSDs7QUFFTCxTQUFPUCxVQUFQO0FBQ0MsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZnVuY3Rpb24gb2Ygcm93czogdGhyb3cgdmFsdWVzIHRvIGRlZmluaXRlZCArbnVtYmVyKyBvZiBjb2x1bW5zIGFuZCByZXR1cm4gc3BsaXQgbGluZVxuXG5leHBvcnQgZGVmYXVsdCAoc3BsaXQsbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcGFyc2VkTGluZSA9IHtcbiAgICAgICAgZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgY29sdW1uczogW11cbiAgICB9O1xuICAgcGFyc2VkTGluZS5kYXRlLnNldEZ1bGxZZWFyKHNwbGl0WzBdLCAoc3BsaXRbMV0gLSAxKSwgc3BsaXRbMl0pO1xuICAgcGFyc2VkTGluZS5kYXRlLnNldEhvdXJzKHNwbGl0WzNdLCBzcGxpdFs0XSwgc3BsaXRbNV0pO1xuICAgIGlmIChudW1iZXIgPD0gNiB8fCBudW1iZXIgPiA0MCkge1xuICAgICAgICB0aHJvdyBFcnJvcignVW5zdXBwb3J0ZWQgbnVtYmVyIG9mIHJvd3MgJyArIG51bWJlcilcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDY7IGkgPCBudW1iZXI7IGkrKykge1xuICAgICAgICBpZiAoc3BsaXRbaV0gPT09IHVuZGVmaW5lZCApe1xuICAgICAgICAgICAgc3BsaXRbaV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzcGxpdFtpXSA9PT0gJz8nICl7XG4gICAgICAgICAgICBzcGxpdFtpXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcGFyc2VkTGluZS5jb2x1bW5zW2kgLSA2XSA9IHNwbGl0W2ldO1xuICAgIH1cblxucmV0dXJuIHBhcnNlZExpbmVcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "columns.js"
      ],
      "names": [
        "split",
        "number",
        "parsedLine",
        "date",
        "Date",
        "columns",
        "setFullYear",
        "setHours",
        "Error",
        "i",
        "undefined"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,kBAACA,KAAD,EAAOC,MAAP,EAAkB;AAC7B,MAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EADS;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAAnB;AAIDH,EAAAA,UAAU,CAACC,IAAX,CAAgBG,WAAhB,CAA4BN,KAAK,CAAC,CAAD,CAAjC,EAAuCA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAlD,EAAsDA,KAAK,CAAC,CAAD,CAA3D;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgBI,QAAhB,CAAyBP,KAAK,CAAC,CAAD,CAA9B,EAAmCA,KAAK,CAAC,CAAD,CAAxC,EAA6CA,KAAK,CAAC,CAAD,CAAlD;;AACC,MAAIC,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,EAA5B,EAAgC;AAC5B,UAAMO,KAAK,CAAC,gCAAgCP,MAAjC,CAAX;AACH;;AACD,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAApB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC7B,QAAIT,KAAK,CAACS,CAAD,CAAL,KAAaC,SAAjB,EAA4B;AACxBV,MAAAA,KAAK,CAACS,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,QAAIT,KAAK,CAACS,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClBT,MAAAA,KAAK,CAACS,CAAD,CAAL,GAAW,IAAX;AACH;;AACDP,IAAAA,UAAU,CAACG,OAAX,CAAmBI,CAAC,GAAG,CAAvB,IAA4BT,KAAK,CAACS,CAAD,CAAjC;AACH;;AAEL,SAAOP,UAAP;AACC,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of columns and return split line\n\nexport default (split,number) => {\n    const parsedLine = {\n        date: new Date(),\n        columns: []\n    };\n   parsedLine.date.setFullYear(split[0], (split[1] - 1), split[2]);\n   parsedLine.date.setHours(split[3], split[4], split[5]);\n    if (number <= 6 || number > 40) {\n        throw Error('Unsupported number of rows ' + number)\n    }\n    for (let i = 6; i < number; i++) {\n        if (split[i] === undefined ){\n            split[i] = null;\n        }\n        if (split[i] === '?' ){\n            split[i] = null;\n        }\n        parsedLine.columns[i - 6] = split[i];\n    }\n\nreturn parsedLine\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575236643460
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/connection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "connection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//connecting to db\nvar _default = function _default() {\n  var connection = _mysql[\"default\"].createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'Luckas.11995544',\n    database: 'data'\n  });\n\n  connection.connect(function (err) {\n    if (!err) {\n      console.log(\"Connected\");\n    } else {\n      console.log(\"Connection Failed\");\n    }\n  });\n  return connection;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3Rpb24uanMiXSwibmFtZXMiOlsiY29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtlQUVlLG9CQUFLO0FBQ1osTUFBTUEsVUFBVSxHQUFHQyxrQkFBTUMsZ0JBQU4sQ0FBdUI7QUFDdENDLElBQUFBLElBQUksRUFBRSxXQURnQztBQUV0Q0MsSUFBQUEsSUFBSSxFQUFFLE1BRmdDO0FBR3RDQyxJQUFBQSxRQUFRLEVBQUUsaUJBSDRCO0FBSXRDQyxJQUFBQSxRQUFRLEVBQUU7QUFKNEIsR0FBdkIsQ0FBbkI7O0FBT0FOLEVBQUFBLFVBQVUsQ0FBQ08sT0FBWCxDQUFtQixVQUFDQyxHQUFELEVBQVM7QUFDeEIsUUFBSSxDQUFDQSxHQUFMLEVBQVU7QUFDTkMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNILEtBRkQsTUFFTztBQUNIRCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWjtBQUNIO0FBRUosR0FQRDtBQVFSLFNBQU9WLFVBQVA7QUFDQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMvZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyIvL2Nvbm5lY3RpbmcgdG8gZGJcbmltcG9ydCBteXNxbCBmcm9tICdteXNxbCc7XG5leHBvcnQgZGVmYXVsdCAoKT0+IHtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgICAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgICAgICAgICB1c2VyOiAncm9vdCcsXG4gICAgICAgICAgICBwYXNzd29yZDogJ0x1Y2thcy4xMTk5NTU0NCcsXG4gICAgICAgICAgICBkYXRhYmFzZTogJ2RhdGEnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkXCIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3Rpb24gRmFpbGVkXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xucmV0dXJuIGNvbm5lY3Rpb25cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "connection.js"
      ],
      "names": [
        "connection",
        "mysql",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;eAEe,oBAAK;AACZ,MAAMA,UAAU,GAAGC,kBAAMC,gBAAN,CAAuB;AACtCC,IAAAA,IAAI,EAAE,WADgC;AAEtCC,IAAAA,IAAI,EAAE,MAFgC;AAGtCC,IAAAA,QAAQ,EAAE,iBAH4B;AAItCC,IAAAA,QAAQ,EAAE;AAJ4B,GAAvB,CAAnB;;AAOAN,EAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,GAAD,EAAS;AACxB,QAAI,CAACA,GAAL,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AAEJ,GAPD;AAQR,SAAOV,UAAP;AACC,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//connecting to db\nimport mysql from 'mysql';\nexport default ()=> {\n        const connection = mysql.createConnection({\n            host: 'localhost',\n            user: 'root',\n            password: 'Luckas.11995544',\n            database: 'data'\n        });\n\n        connection.connect((err) => {\n            if (!err) {\n                console.log(\"Connected\");\n            } else {\n                console.log(\"Connection Failed\");\n            }\n\n        });\nreturn connection\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1575282747194
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "createtable.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createtable;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nfunction createtable() {\n  var connection = (0, _connection[\"default\"])();\n  var sql = \"CREATE TABLE IF NOT EXISTS txt_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS all_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS mol_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS bud_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS vlh_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n  connection.query(sql);\n  var sql = \"CREATE TABLE IF NOT EXISTS filename ( s1 VARCHAR(25))\";\n  connection.query(sql);\n}\n\ncreatetable();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZXRhYmxlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZXRhYmxlIiwiY29ubmVjdGlvbiIsInNxbCIsInF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFGQTtBQUNBO0FBRWUsU0FBU0EsV0FBVCxHQUF1QjtBQUM5QixNQUFJQyxVQUFVLEdBQUcsNkJBQWpCO0FBQ1EsTUFBSUMsR0FBRyxHQUFHLHVNQUFWO0FBQ0FELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDUixNQUFJQSxHQUFHLEdBQUcsdU1BQVY7QUFDQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FBRyx1TUFBVjtBQUNBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBQ0EsTUFBSUEsR0FBRyxHQUFHLHVNQUFWO0FBQ0FELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQUcsdU1BQVY7QUFDQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FBRyx1REFBVjtBQUNBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBSVA7O0FBQ0RGLFdBQVciLCJzb3VyY2VSb290IjoiL2hvbWUvbHVja2F5cy9XZWJzdG9ybVByb2plY3RzL3JlYWx0aW1lc3FsL3NyYy9kYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1ha2UgbmV3IHRhYmxlLCBvciBhZGQgY29sdW1uOiBFWEFNUExFIHZhciBzcWw9IFwiQUxURVIgVEFCTEUgdHh0X3RhYmxlICBBREQgKHM5IFZBUkNIQVIoMjUpKVwiOywgcnVuIHNlcGFyYXRlbHlcbi8vIGlzIG5lY2Vzc2FyeSBoYXZlIHNhbWUgbnVtYmVyIG9mIGNvbHVtbiBpbiBkYXRhYmFzZSBhbmQgaW4gcGFyc2VGaWxlXG5pbXBvcnQgY3JlYXRlQ29ubmVjdGlvbiBmcm9tIFwiLi9jb25uZWN0aW9uXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGV0YWJsZSgpIHtcbiAgICAgICAgbGV0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgdmFyIHNxbCA9IFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgdHh0X3RhYmxlICggZGF0dW0gVkFSQ0hBUigyNTUpLHMxIFZBUkNIQVIoMjUpLCBzMiBWQVJDSEFSKDI1KSwgczMgVkFSQ0hBUigyNSksczQgVkFSQ0hBUigyNSksczUgVkFSQ0hBUigyNSksczYgVkFSQ0hBUigyNSksIHM3IFZBUkNIQVIoMjUpLHM4IFZBUkNIQVIoMjUpLCBzOSBWQVJDSEFSKDI1KSlcIjtcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgICAgIHZhciBzcWwgPSBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGFsbF90YWJsZSAoIGRhdHVtIFZBUkNIQVIoMjU1KSxzMSBWQVJDSEFSKDI1KSwgczIgVkFSQ0hBUigyNSksIHMzIFZBUkNIQVIoMjUpLHM0IFZBUkNIQVIoMjUpLHM1IFZBUkNIQVIoMjUpLHM2IFZBUkNIQVIoMjUpLCBzNyBWQVJDSEFSKDI1KSxzOCBWQVJDSEFSKDI1KSwgczkgVkFSQ0hBUigyNSkpXCI7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsKTtcbiAgICAgICAgdmFyIHNxbCA9IFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgbW9sX3RhYmxlICggZGF0dW0gVkFSQ0hBUigyNTUpLHMxIFZBUkNIQVIoMjUpLCBzMiBWQVJDSEFSKDI1KSwgczMgVkFSQ0hBUigyNSksczQgVkFSQ0hBUigyNSksczUgVkFSQ0hBUigyNSksczYgVkFSQ0hBUigyNSksIHM3IFZBUkNIQVIoMjUpLHM4IFZBUkNIQVIoMjUpLCBzOSBWQVJDSEFSKDI1KSlcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuICAgICAgICB2YXIgc3FsID0gXCJDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBidWRfdGFibGUgKCBkYXR1bSBWQVJDSEFSKDI1NSksczEgVkFSQ0hBUigyNSksIHMyIFZBUkNIQVIoMjUpLCBzMyBWQVJDSEFSKDI1KSxzNCBWQVJDSEFSKDI1KSxzNSBWQVJDSEFSKDI1KSxzNiBWQVJDSEFSKDI1KSwgczcgVkFSQ0hBUigyNSksczggVkFSQ0hBUigyNSksIHM5IFZBUkNIQVIoMjUpKVwiO1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgICAgIHZhciBzcWwgPSBcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHZsaF90YWJsZSAoIGRhdHVtIFZBUkNIQVIoMjU1KSxzMSBWQVJDSEFSKDI1KSwgczIgVkFSQ0hBUigyNSksIHMzIFZBUkNIQVIoMjUpLHM0IFZBUkNIQVIoMjUpLHM1IFZBUkNIQVIoMjUpLHM2IFZBUkNIQVIoMjUpLCBzNyBWQVJDSEFSKDI1KSxzOCBWQVJDSEFSKDI1KSwgczkgVkFSQ0hBUigyNSkpXCI7XG4gICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsKTtcbiAgICAgICAgdmFyIHNxbCA9IFwiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZmlsZW5hbWUgKCBzMSBWQVJDSEFSKDI1KSlcIjtcbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuXG5cblxufVxuY3JlYXRldGFibGUoKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "createtable.js"
      ],
      "names": [
        "createtable",
        "connection",
        "sql",
        "query"
      ],
      "mappings": ";;;;;;;AAEA;;;;AAFA;AACA;AAEe,SAASA,WAAT,GAAuB;AAC9B,MAAIC,UAAU,GAAG,6BAAjB;AACQ,MAAIC,GAAG,GAAG,uMAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACR,MAAIA,GAAG,GAAG,uMAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uMAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uMAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uMAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GAAG,uDAAV;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AAIP;;AACDF,WAAW",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nimport createConnection from \"./connection\";\nexport default function createtable() {\n        let connection = createConnection();\n                var sql = \"CREATE TABLE IF NOT EXISTS txt_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n                connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS all_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS mol_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS bud_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS vlh_table ( datum VARCHAR(255),s1 VARCHAR(25), s2 VARCHAR(25), s3 VARCHAR(25),s4 VARCHAR(25),s5 VARCHAR(25),s6 VARCHAR(25), s7 VARCHAR(25),s8 VARCHAR(25), s9 VARCHAR(25))\";\n        connection.query(sql);\n        var sql = \"CREATE TABLE IF NOT EXISTS filename ( s1 VARCHAR(25))\";\n        connection.query(sql);\n\n\n\n}\ncreatetable();"
      ]
    },
    "sourceType": "script",
    "mtime": 1575396928176
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "savetodatabase.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar connection = (0, _connection[\"default\"])();\n\nvar getDates = function getDates(fields) {\n  return fields.map(function (field) {\n    return field.date;\n  });\n};\n\nvar getColumns = function getColumns(fields) {\n  return fields.map(function (field) {\n    return field.columns;\n  });\n};\n\nvar getAll = function getAll(fields) {\n  return fields.map(function (field) {\n    return field;\n  });\n};\n\nvar toOneArray = function toOneArray(A) {\n  var todb = [];\n\n  for (var i = 0; i < A.length; i++) {\n    var k = [A[i].date].concat(_toConsumableArray(A[i].columns));\n    todb.push(k);\n  }\n\n  return todb;\n};\n\nvar _default = function _default(A, filename) {\n  var sqlfilename = \"INSERT INTO filename VALUES ('\" + filename + \"')\";\n  connection.query(sqlfilename);\n  var c = getColumns(A);\n  var d = getDates(A);\n  var values = toOneArray(A);\n\n  var extension = _path[\"default\"].extname(filename).split('.')[1].toLocaleLowerCase();\n\n  switch (extension) {\n    case 'txt':\n      var sql = \"INSERT INTO txt_table VALUES ?\";\n      connection.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n      });\n      break;\n\n    case 'all':\n      var sql = \"INSERT INTO all_table VALUES ?\";\n      connection.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n      });\n      break;\n\n    case 'mol':\n      var sql = \"INSERT INTO mol_table VALUES ?\";\n      connection.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n      });\n      break;\n\n    case 'bud':\n      var sql = \"INSERT INTO bud_table VALUES ?\";\n      connection.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n      });\n      break;\n\n    case 'vlh':\n      var sql = \"INSERT INTO vlh_table VALUES ?\";\n      connection.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n      });\n      break;\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmV0b2RhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb24iLCJnZXREYXRlcyIsImZpZWxkcyIsIm1hcCIsImZpZWxkIiwiZGF0ZSIsImdldENvbHVtbnMiLCJjb2x1bW5zIiwiZ2V0QWxsIiwidG9PbmVBcnJheSIsIkEiLCJ0b2RiIiwiaSIsImxlbmd0aCIsImsiLCJwdXNoIiwiZmlsZW5hbWUiLCJzcWxmaWxlbmFtZSIsInF1ZXJ5IiwiYyIsImQiLCJ2YWx1ZXMiLCJleHRlbnNpb24iLCJwYXRoIiwiZXh0bmFtZSIsInNwbGl0IiwidG9Mb2NhbGVMb3dlckNhc2UiLCJzcWwiLCJlcnIiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwiYWZmZWN0ZWRSb3dzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUNBLElBQUlBLFVBQVUsR0FBRyw2QkFBakI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQUMsTUFBTTtBQUFBLFNBQUdBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFVBQUFDLEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNDLElBQVY7QUFBQSxHQUFoQixDQUFIO0FBQUEsQ0FBdkI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQUosTUFBTTtBQUFBLFNBQUdBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFVBQUFDLEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNHLE9BQVY7QUFBQSxHQUFoQixDQUFIO0FBQUEsQ0FBekI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQU4sTUFBTTtBQUFBLFNBQUdBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFVBQUFDLEtBQUs7QUFBQSxXQUFJQSxLQUFKO0FBQUEsR0FBaEIsQ0FBSDtBQUFBLENBQXJCOztBQUVBLElBQUlLLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQVNDLENBQVQsRUFBWTtBQUN6QixNQUFJQyxJQUFJLEdBQUcs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LEVBQVMsTUFBTUEsR0FBTjtBQUNURSxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBaUNGLE1BQU0sQ0FBQ0csWUFBcEQ7QUFDSCxPQUhEO0FBSUE7QUFyQ1I7QUE4Q0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjL2RhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiLy9zYXZpbmcgdG8gZGJcbmltcG9ydCBjcmVhdGVDb25uZWN0aW9uIGZyb20gXCIuL2Nvbm5lY3Rpb25cIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5sZXQgY29ubmVjdGlvbiA9IGNyZWF0ZUNvbm5lY3Rpb24oKTtcblxuY29uc3QgZ2V0RGF0ZXMgPSBmaWVsZHMgPT5maWVsZHMubWFwKGZpZWxkID0+IGZpZWxkLmRhdGUpXG5jb25zdCBnZXRDb2x1bW5zID0gZmllbGRzID0+ZmllbGRzLm1hcChmaWVsZCA9PiBmaWVsZC5jb2x1bW5zKVxuY29uc3QgZ2V0QWxsID0gZmllbGRzID0+ZmllbGRzLm1hcChmaWVsZCA9PiBmaWVsZClcblxudmFyIHRvT25lQXJyYXkgPSBmdW5jdGlvbihBKSB7XG4gICAgbGV0IHRvZGIgPSBbXTtcbmZvcihsZXQgaSA9IDA7aTxBLmxlbmd0aDtpKyspe1xuICAgIGxldCBrID0gKFtBW2ldLmRhdGUsIC4uLkFbaV0uY29sdW1uc10pO1xuICAgIHRvZGIucHVzaChrKVxuXG59XG4gICAgcmV0dXJuIHRvZGJcbn1cblxuZXhwb3J0IGRlZmF1bHQgKEEsZmlsZW5hbWUpID0+IHtcblxuXG4gICAgdmFyIHNxbGZpbGVuYW1lID0gXCJJTlNFUlQgSU5UTyBmaWxlbmFtZSBWQUxVRVMgKCdcIitmaWxlbmFtZStcIicpXCI7XG4gICAgY29ubmVjdGlvbi5xdWVyeShzcWxmaWxlbmFtZSk7XG4gICAgbGV0IGMgPSBnZXRDb2x1bW5zKEEpXG4gICAgbGV0IGQgPSBnZXREYXRlcyhBKVxuICAgIGxldCB2YWx1ZXMgPSAgdG9PbmVBcnJheShBKVxuICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlbmFtZSkuc3BsaXQoJy4nKVsxXS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIHN3aXRjaChleHRlbnNpb24pIHtcbiAgICAgICAgY2FzZSAndHh0JzpcbiAgICAgICAgICAgIHZhciBzcWwgPSBcIklOU0VSVCBJTlRPIHR4dF90YWJsZSBWQUxVRVMgP1wiO1xuICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBbdmFsdWVzXSxmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk51bWJlciBvZiByZWNvcmRzIGluc2VydGVkOiBcIiArIHJlc3VsdC5hZmZlY3RlZFJvd3MpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2FsbCc6XG4gICAgICAgICAgICB2YXIgc3FsID0gXCJJTlNFUlQgSU5UTyBhbGxfdGFibGUgVkFMVUVTID9cIjtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBbdmFsdWVzXSxmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJOdW1iZXIgb2YgcmVjb3JkcyBpbnNlcnRlZDogXCIgKyByZXN1bHQuYWZmZWN0ZWRSb3dzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ21vbCc6XG4gICAgICAgICAgICB2YXIgc3FsID0gXCJJTlNFUlQgSU5UTyBtb2xfdGFibGUgVkFMVUVTID9cIjtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBbdmFsdWVzXSxmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJOdW1iZXIgb2YgcmVjb3JkcyBpbnNlcnRlZDogXCIgKyByZXN1bHQuYWZmZWN0ZWRSb3dzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2J1ZCc6XG4gICAgICAgICAgICB2YXIgc3FsID0gXCJJTlNFUlQgSU5UTyBidWRfdGFibGUgVkFMVUVTID9cIjtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsLCBbdmFsdWVzXSxmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJOdW1iZXIgb2YgcmVjb3JkcyBpbnNlcnRlZDogXCIgKyByZXN1bHQuYWZmZWN0ZWRSb3dzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG5cblxuICAgICAgICBjYXNlICd2bGgnOlxuICAgICAgICAgICAgdmFyIHNxbCA9IFwiSU5TRVJUIElOVE8gdmxoX3RhYmxlIFZBTFVFUyA/XCI7XG4gICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCwgW3ZhbHVlc10sZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTnVtYmVyIG9mIHJlY29yZHMgaW5zZXJ0ZWQ6IFwiICsgcmVzdWx0LmFmZmVjdGVkUm93cyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgfVxuXG5cblxuXG5cblxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "savetodatabase.js"
      ],
      "names": [
        "connection",
        "getDates",
        "fields",
        "map",
        "field",
        "date",
        "getColumns",
        "columns",
        "getAll",
        "toOneArray",
        "A",
        "todb",
        "i",
        "length",
        "k",
        "push",
        "filename",
        "sqlfilename",
        "query",
        "c",
        "d",
        "values",
        "extension",
        "path",
        "extname",
        "split",
        "toLocaleLowerCase",
        "sql",
        "err",
        "result",
        "console",
        "log",
        "affectedRows"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//saving to db\nimport createConnection from \"./connection\";\nimport path from \"path\";\nlet connection = createConnection();\n\nconst getDates = fields =>fields.map(field => field.date)\nconst getColumns = fields =>fields.map(field => field.columns)\nconst getAll = fields =>fields.map(field => field)\n\nvar toOneArray = function(A) {\n    let todb = [];\nfor(let i = 0;i<A.length;i++){\n    let k = ([A[i].date, ...A[i].columns]);\n    todb.push(k)\n\n}\n    return todb\n}\n\nexport default (A,filename) => {\n\n\n    var sqlfilename = \"INSERT INTO filename VALUES ('\"+filename+\"')\";\n    connection.query(sqlfilename);\n    let c = getColumns(A)\n    let d = getDates(A)\n    let values =  toOneArray(A)\n    const extension = path.extname(filename).split('.')[1].toLocaleLowerCase();\n    switch(extension) {\n        case 'txt':\n            var sql = \"INSERT INTO txt_table VALUES ?\";\n                connection.query(sql, [values],function (err, result) {\n                    if (err) throw err;\n                    console.log(\"Number of records inserted: \" + result.affectedRows);\n                });\n            break;\n        case 'all':\n            var sql = \"INSERT INTO all_table VALUES ?\";\n            connection.query(sql, [values],function (err, result) {\n                if (err) throw err;\n                console.log(\"Number of records inserted: \" + result.affectedRows);\n            });\n            break;\n        case 'mol':\n            var sql = \"INSERT INTO mol_table VALUES ?\";\n            connection.query(sql, [values],function (err, result) {\n                if (err) throw err;\n                console.log(\"Number of records inserted: \" + result.affectedRows);\n            });\n            break;\n        case 'bud':\n            var sql = \"INSERT INTO bud_table VALUES ?\";\n            connection.query(sql, [values],function (err, result) {\n                if (err) throw err;\n                console.log(\"Number of records inserted: \" + result.affectedRows);\n            });\n            break;\n\n\n        case 'vlh':\n            var sql = \"INSERT INTO vlh_table VALUES ?\";\n            connection.query(sql, [values],function (err, result) {\n                if (err) throw err;\n                console.log(\"Number of records inserted: \" + result.affectedRows);\n            });\n            break;\n\n    }\n\n\n\n\n\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575463941579
  }
}