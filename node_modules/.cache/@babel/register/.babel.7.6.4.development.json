{
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _openFolder = _interopRequireDefault(require(\"./src/openFolder\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _getFromDB = _interopRequireDefault(require(\"./src/api/getFromDB\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar loadFoldersData =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var minutes, the_interval;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _openFolder[\"default\"])('slozka1');\n\n          case 2:\n            _context.next = 4;\n            return (0, _openFolder[\"default\"])('slozka2');\n\n          case 4:\n            minutes = 1, the_interval = minutes * 60 * 1000;\n            setInterval(function () {\n              var datetime = new Date();\n              console.log(\"I am doing my 1 minutes check\");\n              console.log(\"TIME: \" + datetime);\n              (0, _openFolder[\"default\"])('slozka1');\n              (0, _openFolder[\"default\"])('slozka2');\n            }, the_interval);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadFoldersData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nloadFoldersData();\n(0, _getFromDB[\"default\"])();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxvYWRGb2xkZXJzRGF0YSIsIm1pbnV0ZXMiLCJ0aGVfaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImRhdGV0aW1lIiwiRGF0ZSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBR0EsSUFBTUEsZUFBZTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFZCw0QkFBVyxTQUFYLENBRmM7O0FBQUE7QUFBQTtBQUFBLG1CQUdkLDRCQUFXLFNBQVgsQ0FIYzs7QUFBQTtBQUlaQyxZQUFBQSxPQUpZLEdBSUYsQ0FKRSxFQUlDQyxZQUpELEdBSWdCRCxPQUFPLEdBQUcsRUFBVixHQUFlLElBSi9CO0FBS3BCRSxZQUFBQSxXQUFXLENBQUMsWUFBWTtBQUNwQixrQkFBSUMsUUFBUSxHQUFHLElBQUlDLElBQUosRUFBZjtBQUVBQyxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBWjtBQUNBRCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFTSCxRQUFyQjtBQUNBLDBDQUFXLFNBQVg7QUFDQSwwQ0FBVyxTQUFYO0FBRUgsYUFSVSxFQVFSRixZQVJRLENBQVg7O0FBTG9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWZGLGVBQWU7QUFBQTtBQUFBO0FBQUEsR0FBckI7O0FBa0JBQSxlQUFlO0FBQ2YiLCJzb3VyY2VSb290IjoiL2hvbWUvbHVja2F5cy9XZWJzdG9ybVByb2plY3RzL3JlYWx0aW1lc3FsIiwic291cmNlc0NvbnRlbnQiOlsiLy9mdW5jdGlvbiBvZiBpbmRleCBzZXQgbmFtZSBvZiBmb2xkZXIsIGV4Y2VycHQgZGF0YSwgc3RhcnQgb3BlbkZvbGRlclxuLy9mdW5jdGlvbiBsb2FkRm9sZGVyRGF0YSBmaXJzdCBsb2FkIGFsbCBkYXRhIGZyb20gZm9sZGVycyB5b3UgZGVmaW5lXG4vL2Z1bmN0aW9uIGdldEZyb21EQiBnZXQgZGF0YSBmcm9tIGRhdGFiYXNlIHRvIGFwcGxpY2F0aW9uXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IG9wZW5Gb2xkZXIgZnJvbSBcIi4vc3JjL29wZW5Gb2xkZXJcIjtcbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiO1xuaW1wb3J0IGdldEZyb21EQiBmcm9tIFwiLi9zcmMvYXBpL2dldEZyb21EQlwiO1xuXG5cbmNvbnN0IGxvYWRGb2xkZXJzRGF0YSA9IGFzeW5jICgpID0+IHtcblxuICAgIGF3YWl0IG9wZW5Gb2xkZXIoJ3Nsb3prYTEnKVxuICAgIGF3YWl0IG9wZW5Gb2xkZXIoJ3Nsb3prYTInKVxuICAgICAgICB2YXIgbWludXRlcyA9IDEsIHRoZV9pbnRlcnZhbCA9IG1pbnV0ZXMgKiA2MCAqIDEwMDA7XG4gICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGF0ZXRpbWUgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiSSBhbSBkb2luZyBteSAxIG1pbnV0ZXMgY2hlY2tcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVElNRTogXCIrZGF0ZXRpbWUpXG4gICAgICAgIG9wZW5Gb2xkZXIoJ3Nsb3prYTEnKVxuICAgICAgICBvcGVuRm9sZGVyKCdzbG96a2EyJylcblxuICAgIH0sIHRoZV9pbnRlcnZhbClcblxufTtcblxuXG5sb2FkRm9sZGVyc0RhdGEoKTtcbmdldEZyb21EQigpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "loadFoldersData",
        "minutes",
        "the_interval",
        "setInterval",
        "datetime",
        "Date",
        "console",
        "log"
      ],
      "mappings": ";;AAGA;;AACA;;AACA;;AACA;;;;;;;;AAGA,IAAMA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEd,4BAAW,SAAX,CAFc;;AAAA;AAAA;AAAA,mBAGd,4BAAW,SAAX,CAHc;;AAAA;AAIZC,YAAAA,OAJY,GAIF,CAJE,EAICC,YAJD,GAIgBD,OAAO,GAAG,EAAV,GAAe,IAJ/B;AAKpBE,YAAAA,WAAW,CAAC,YAAY;AACpB,kBAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,WAASH,QAArB;AACA,0CAAW,SAAX;AACA,0CAAW,SAAX;AAEH,aARU,EAQRF,YARQ,CAAX;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfF,eAAe;AAAA;AAAA;AAAA,GAArB;;AAkBAA,eAAe;AACf",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql",
      "sourcesContent": [
        "//function of index set name of folder, excerpt data, start openFolder\n//function loadFolderData first load all data from folders you define\n//function getFromDB get data from database to application\nimport express from 'express'\nimport openFolder from \"./src/openFolder\";\nimport moment from \"moment\";\nimport getFromDB from \"./src/api/getFromDB\";\n\n\nconst loadFoldersData = async () => {\n\n    await openFolder('slozka1')\n    await openFolder('slozka2')\n        var minutes = 1, the_interval = minutes * 60 * 1000;\n    setInterval(function () {\n        var datetime = new Date();\n\n        console.log(\"I am doing my 1 minutes check\");\n        console.log(\"TIME: \"+datetime)\n        openFolder('slozka1')\n        openFolder('slozka2')\n\n    }, the_interval)\n\n};\n\n\nloadFoldersData();\ngetFromDB();"
      ]
    },
    "sourceType": "script",
    "mtime": 1577557366288
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/openFolder.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/openFolder.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "openFolder.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _loadFile = _interopRequireDefault(require(\"./loadFile\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nvar _updatefilesize = _interopRequireDefault(require(\"./database/updatefilesize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getFilenameRow = function getFilenameRow(file_name, folder_name) {\n  var name = [folder_name, file_name].join('/');\n  var connection = (0, _connection[\"default\"])();\n  return new Promise(function (resolve) {\n    var sql = \"SELECT * FROM filename WHERE fname = ?\";\n    connection.query(sql, [name], function (error, results) {\n      connection.end();\n      results.length === 0 ? resolve(null) : resolve(results[0]);\n    });\n  });\n};\n\nvar saveToFilename =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(filename, fileSizeInBytes, foldername) {\n    var connection, sqlfilename;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            connection = (0, _connection[\"default\"])();\n            sqlfilename = \"INSERT IGNORE INTO filename VALUES ('\" + foldername + \"' '/' '\" + filename + \"','\" + fileSizeInBytes + \"')\";\n            connection.query(sqlfilename);\n            connection.end();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function saveToFilename(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = function _default(foldername) {\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      var filenames, filename, row, fileSizeInBytes;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              filenames = _fs[\"default\"].readdirSync(foldername);\n\n            case 1:\n              if (!(filenames.length > 0)) {\n                _context2.next = 17;\n                break;\n              }\n\n              filename = filenames.shift();\n              _context2.next = 5;\n              return getFilenameRow(filename, foldername);\n\n            case 5:\n              row = _context2.sent;\n              fileSizeInBytes = _fs[\"default\"].statSync([foldername, filename].join('/')).size;\n              resolve(true);\n\n              if (!(row === null || row.filesize < fileSizeInBytes)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 11;\n              return (0, _loadFile[\"default\"])(filename, foldername);\n\n            case 11:\n              if (row === null) {\n                saveToFilename(filename, fileSizeInBytes, foldername);\n              }\n\n              if (!(row != null && row.filesize < fileSizeInBytes)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 15;\n              return (0, _updatefilesize[\"default\"])(filename, fileSizeInBytes, foldername);\n\n            case 15:\n              _context2.next = 1;\n              break;\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZW5Gb2xkZXIuanMiXSwibmFtZXMiOlsiZ2V0RmlsZW5hbWVSb3ciLCJmaWxlX25hbWUiLCJmb2xkZXJfbmFtZSIsIm5hbWUiLCJqb2luIiwiY29ubmVjdGlvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwic3FsIiwicXVlcnkiLCJlcnJvciIsInJlc3VsdHMiLCJlbmQiLCJsZW5ndGgiLCJzYXZlVG9GaWxlbmFtZSIsImZpbGVuYW1lIiwiZmlsZVNpemVJbkJ5dGVzIiwiZm9sZGVybmFtZSIsInNxbGZpbGVuYW1lIiwicmVqZWN0IiwiZmlsZW5hbWVzIiwiZnMiLCJyZWFkZGlyU3luYyIsInNoaWZ0Iiwicm93Iiwic3RhdFN5bmMiLCJzaXplIiwiZmlsZXNpemUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLFNBQUQsRUFBV0MsV0FBWCxFQUEyQjtBQUM5QyxNQUFJQyxJQUFJLEdBQUcsQ0FBQ0QsV0FBRCxFQUFhRCxTQUFiLEVBQXdCRyxJQUF4QixDQUE2QixHQUE3QixDQUFYO0FBQ0EsTUFBSUMsVUFBVSxHQUFHLDZCQUFqQjtBQUNBLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUFDLE9BQU8sRUFBSTtBQUUxQixRQUFJQyxHQUFHLEdBQUcsd0NBQVY7QUFHQUgsSUFBQUEsVUFBVSxDQUFDSSxLQUFYLENBQWlCRCxHQUFqQixFQUFzQixDQUFDTCxJQUFELENBQXRCLEVBQThCLFVBQVNPLEtBQVQsRUFBZ0JDLE9BQWhCLEVBQXlCO0FBQ25ETixNQUFBQSxVQUFVLENBQUNPLEdBQVg7QUFDQUQsTUFBQUEsT0FBTyxDQUFDRSxNQUFSLEtBQW1CLENBQW5CLEdBQ01OLE9BQU8sQ0FBQyxJQUFELENBRGIsR0FFTUEsT0FBTyxDQUFDSSxPQUFPLENBQUMsQ0FBRCxDQUFSLENBRmI7QUFLSCxLQVBEO0FBUUgsR0FiTSxDQUFQO0FBY0gsQ0FqQkQ7O0FBbUJBLElBQU1HLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxRQUFQLEVBQWtCQyxlQUFsQixFQUFrQ0MsVUFBbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2ZaLFlBQUFBLFVBRGUsR0FDRiw2QkFERTtBQUVmYSxZQUFBQSxXQUZlLEdBRUQsMENBQXdDRCxVQUF4QyxHQUFtRCxTQUFuRCxHQUE4REYsUUFBOUQsR0FBeUUsS0FBekUsR0FBaUZDLGVBQWpGLEdBQW1HLElBRmxHO0FBS2xCWCxZQUFBQSxVQUFVLENBQUNJLEtBQVgsQ0FBaUJTLFdBQWpCO0FBQ0RiLFlBQUFBLFVBQVUsQ0FBQ08sR0FBWDs7QUFObUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBZEUsY0FBYztBQUFBO0FBQUE7QUFBQSxHQUFwQjs7ZUFVZSxrQkFBQUcsVUFBVSxFQUFJO0FBQ3pCLFNBQU8sSUFBSVgsT0FBSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNEJBQVksa0JBQU9DLE9BQVAsRUFBZ0JZLE1BQWhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNUQyxjQUFBQSxTQURTLEdBQ0dDLGVBQUdDLFdBQUgsQ0FBZUwsVUFBZixDQURIOztBQUFBO0FBQUEsb0JBRVJHLFNBQVMsQ0FBQ1AsTUFBVixHQUFtQixDQUZYO0FBQUE7QUFBQTtBQUFBOztBQUdMRSxjQUFBQSxRQUhLLEdBR01LLFNBQVMsQ0FBQ0csS0FBVixFQUhOO0FBQUE7QUFBQSxxQkFJT3ZCLGNBQWMsQ0FBQ2UsUUFBRCxFQUFVRSxVQUFWLENBSnJCOztBQUFBO0FBSUxPLGNBQUFBLEdBSks7QUFLTFIsY0FBQUEsZUFMSyxHQUthSyxlQUFHSSxRQUFILENBQVksQ0FBQ1IsVUFBRCxFQUFhRixRQUFiLEVBQXVCWCxJQUF2QixDQUE0QixHQUE1QixDQUFaLEVBQThDc0IsSUFMM0Q7QUFNWG5CLGNBQUFBLE9BQU8sQ0FBQyxJQUFELENBQVA7O0FBTlcsb0JBU1BpQixHQUFHLEtBQU0sSUFBVCxJQUFpQkEsR0FBRyxDQUFDRyxRQUFKLEdBQWVYLGVBVHpCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBVUQsMEJBQVNELFFBQVQsRUFBa0JFLFVBQWxCLENBVkM7O0FBQUE7QUFXUCxrQkFBR08sR0FBRyxLQUFLLElBQVgsRUFBaUI7QUFDN0JWLGdCQUFBQSxjQUFjLENBQUNDLFFBQUQsRUFBV0MsZUFBWCxFQUEyQkMsVUFBM0IsQ0FBZDtBQUNIOztBQWJzQixvQkFjSk8sR0FBRyxJQUFJLElBQVAsSUFBZUEsR0FBRyxDQUFDRyxRQUFKLEdBQWVYLGVBZDFCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEscUJBZUUsZ0NBQWVELFFBQWYsRUFBd0JDLGVBQXhCLEVBQXdDQyxVQUF4QyxDQWZGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFaOztBQUFBO0FBQUE7QUFBQTtBQUFBLE1BQVA7QUF1QkgsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZnVuY3Rpb24gb2Ygb3BlbkZvbGRlcjogcmVhZCBmaWxlbmFtZSBmcm9tIGZvbGRlciwgc2F2ZSBmaWxlbmFtZSwgc3RhcnQgbG9hZEZpbGVcbi8vIGZ1bmN0aW9uIGdldEZpbGVuYW1lUm93IGxvb2tpbmcgaW4gZGF0YWJhc2UgaWYgZmlsZW5hbWUgaXMgYWxyZWFkeSBpbiBkYiBvciBub3Rcbi8vIGZ1bmN0aW9uIHNhdmVUb0ZpbGVuYW1lLCBzYXZpbmcgZmlsZW5hbWUgaWYgbm90IGV4aXN0XG4vLyBmdW5jdGlvbiB1cGRhdGVmaWxlc2l6ZSwgdXBkYXRpbmcgc2l6ZSB0byBleGlzdGluZyBmaWxlbmFtZVxuXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IGxvYWRGaWxlIGZyb20gJy4vbG9hZEZpbGUnO1xuaW1wb3J0IGNyZWF0ZUNvbm5lY3Rpb24gZnJvbSAnLi9kYXRhYmFzZS9jb25uZWN0aW9uJztcbmltcG9ydCB1cGRhdGVmaWxlc2l6ZSBmcm9tICcuL2RhdGFiYXNlL3VwZGF0ZWZpbGVzaXplJztcblxuY29uc3QgZ2V0RmlsZW5hbWVSb3cgPSAoZmlsZV9uYW1lLGZvbGRlcl9uYW1lKSA9PiB7XG4gICAgdmFyIG5hbWUgPSBbZm9sZGVyX25hbWUsZmlsZV9uYW1lXS5qb2luKCcvJyk7XG4gICAgbGV0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuXG4gICAgICAgIHZhciBzcWwgPSBcIlNFTEVDVCAqIEZST00gZmlsZW5hbWUgV0hFUkUgZm5hbWUgPSA/XCI7XG5cblxuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCwgW25hbWVdLCBmdW5jdGlvbihlcnJvciwgcmVzdWx0cykge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5lbmQoKTtcbiAgICAgICAgICAgIHJlc3VsdHMubGVuZ3RoID09PSAwXG4gICAgICAgICAgICAgICAgPyByZXNvbHZlKG51bGwpXG4gICAgICAgICAgICAgICAgOiByZXNvbHZlKHJlc3VsdHNbMF0pO1xuXG5cbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG5jb25zdCBzYXZlVG9GaWxlbmFtZSA9IGFzeW5jIChmaWxlbmFtZSAsIGZpbGVTaXplSW5CeXRlcyxmb2xkZXJuYW1lKSA9PiB7XG4gICAgbGV0IGNvbm5lY3Rpb24gPSBjcmVhdGVDb25uZWN0aW9uKCk7XG4gICAgdmFyIHNxbGZpbGVuYW1lID0gXCJJTlNFUlQgSUdOT1JFIElOVE8gZmlsZW5hbWUgVkFMVUVTICgnXCIrZm9sZGVybmFtZStcIicgJy8nICdcIisgZmlsZW5hbWUgKyBcIicsJ1wiICsgZmlsZVNpemVJbkJ5dGVzICsgXCInKVwiO1xuXG5cbiAgICAgY29ubmVjdGlvbi5xdWVyeShzcWxmaWxlbmFtZSk7XG4gICAgY29ubmVjdGlvbi5lbmQoKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBmb2xkZXJuYW1lID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCBmaWxlbmFtZXMgPSBmcy5yZWFkZGlyU3luYyhmb2xkZXJuYW1lKTtcbiAgICAgICAgd2hpbGUgKGZpbGVuYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlbmFtZSA9IGZpbGVuYW1lcy5zaGlmdCgpO1xuICAgICAgICAgICAgY29uc3Qgcm93ID0gYXdhaXQgZ2V0RmlsZW5hbWVSb3coZmlsZW5hbWUsZm9sZGVybmFtZSk7XG4gICAgICAgICAgICBjb25zdCBmaWxlU2l6ZUluQnl0ZXMgPSBmcy5zdGF0U3luYyhbZm9sZGVybmFtZSwgZmlsZW5hbWVdLmpvaW4oJy8nKSkuc2l6ZTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSlcblxuXG4gICAgICAgICAgICBpZiAocm93ID09PSAgbnVsbCB8fCByb3cuZmlsZXNpemUgPCBmaWxlU2l6ZUluQnl0ZXMpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBsb2FkRmlsZShmaWxlbmFtZSxmb2xkZXJuYW1lKTtcbiAgICAgICAgICAgICAgICBpZihyb3cgPT09IG51bGwpIHtcbiAgICBzYXZlVG9GaWxlbmFtZShmaWxlbmFtZSwgZmlsZVNpemVJbkJ5dGVzLGZvbGRlcm5hbWUpXG59XG4gICAgICAgICAgICAgICBpZiAocm93ICE9IG51bGwgJiYgcm93LmZpbGVzaXplIDwgZmlsZVNpemVJbkJ5dGVzKSB7XG4gICAgICAgICAgICAgICAgICAgYXdhaXQgdXBkYXRlZmlsZXNpemUoZmlsZW5hbWUsZmlsZVNpemVJbkJ5dGVzLGZvbGRlcm5hbWUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgfVxuICAgIH0pXG5cbn1cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "openFolder.js"
      ],
      "names": [
        "getFilenameRow",
        "file_name",
        "folder_name",
        "name",
        "join",
        "connection",
        "Promise",
        "resolve",
        "sql",
        "query",
        "error",
        "results",
        "end",
        "length",
        "saveToFilename",
        "filename",
        "fileSizeInBytes",
        "foldername",
        "sqlfilename",
        "reject",
        "filenames",
        "fs",
        "readdirSync",
        "shift",
        "row",
        "statSync",
        "size",
        "filesize"
      ],
      "mappings": ";;;;;;;AAKA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAWC,WAAX,EAA2B;AAC9C,MAAIC,IAAI,GAAG,CAACD,WAAD,EAAaD,SAAb,EAAwBG,IAAxB,CAA6B,GAA7B,CAAX;AACA,MAAIC,UAAU,GAAG,6BAAjB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAE1B,QAAIC,GAAG,GAAG,wCAAV;AAGAH,IAAAA,UAAU,CAACI,KAAX,CAAiBD,GAAjB,EAAsB,CAACL,IAAD,CAAtB,EAA8B,UAASO,KAAT,EAAgBC,OAAhB,EAAyB;AACnDN,MAAAA,UAAU,CAACO,GAAX;AACAD,MAAAA,OAAO,CAACE,MAAR,KAAmB,CAAnB,GACMN,OAAO,CAAC,IAAD,CADb,GAEMA,OAAO,CAACI,OAAO,CAAC,CAAD,CAAR,CAFb;AAKH,KAPD;AAQH,GAbM,CAAP;AAcH,CAjBD;;AAmBA,IAAMG,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,QAAP,EAAkBC,eAAlB,EAAkCC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACfZ,YAAAA,UADe,GACF,6BADE;AAEfa,YAAAA,WAFe,GAED,0CAAwCD,UAAxC,GAAmD,SAAnD,GAA8DF,QAA9D,GAAyE,KAAzE,GAAiFC,eAAjF,GAAmG,IAFlG;AAKlBX,YAAAA,UAAU,CAACI,KAAX,CAAiBS,WAAjB;AACDb,YAAAA,UAAU,CAACO,GAAX;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;eAUe,kBAAAG,UAAU,EAAI;AACzB,SAAO,IAAIX,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAY,kBAAOC,OAAP,EAAgBY,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,SADS,GACGC,eAAGC,WAAH,CAAeL,UAAf,CADH;;AAAA;AAAA,oBAERG,SAAS,CAACP,MAAV,GAAmB,CAFX;AAAA;AAAA;AAAA;;AAGLE,cAAAA,QAHK,GAGMK,SAAS,CAACG,KAAV,EAHN;AAAA;AAAA,qBAIOvB,cAAc,CAACe,QAAD,EAAUE,UAAV,CAJrB;;AAAA;AAILO,cAAAA,GAJK;AAKLR,cAAAA,eALK,GAKaK,eAAGI,QAAH,CAAY,CAACR,UAAD,EAAaF,QAAb,EAAuBX,IAAvB,CAA4B,GAA5B,CAAZ,EAA8CsB,IAL3D;AAMXnB,cAAAA,OAAO,CAAC,IAAD,CAAP;;AANW,oBASPiB,GAAG,KAAM,IAAT,IAAiBA,GAAG,CAACG,QAAJ,GAAeX,eATzB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUD,0BAASD,QAAT,EAAkBE,UAAlB,CAVC;;AAAA;AAWP,kBAAGO,GAAG,KAAK,IAAX,EAAiB;AAC7BV,gBAAAA,cAAc,CAACC,QAAD,EAAWC,eAAX,EAA2BC,UAA3B,CAAd;AACH;;AAbsB,oBAcJO,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACG,QAAJ,GAAeX,eAd1B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAeE,gCAAeD,QAAf,EAAwBC,eAAxB,EAAwCC,UAAxC,CAfF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAuBH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of openFolder: read filename from folder, save filename, start loadFile\n// function getFilenameRow looking in database if filename is already in db or not\n// function saveToFilename, saving filename if not exist\n// function updatefilesize, updating size to existing filename\n\nimport fs from 'fs';\nimport loadFile from './loadFile';\nimport createConnection from './database/connection';\nimport updatefilesize from './database/updatefilesize';\n\nconst getFilenameRow = (file_name,folder_name) => {\n    var name = [folder_name,file_name].join('/');\n    let connection = createConnection();\n    return new Promise(resolve => {\n\n        var sql = \"SELECT * FROM filename WHERE fname = ?\";\n\n\n        connection.query(sql, [name], function(error, results) {\n            connection.end();\n            results.length === 0\n                ? resolve(null)\n                : resolve(results[0]);\n\n\n        });\n    });\n};\n\nconst saveToFilename = async (filename , fileSizeInBytes,foldername) => {\n    let connection = createConnection();\n    var sqlfilename = \"INSERT IGNORE INTO filename VALUES ('\"+foldername+\"' '/' '\"+ filename + \"','\" + fileSizeInBytes + \"')\";\n\n\n     connection.query(sqlfilename);\n    connection.end();\n\n}\n\nexport default foldername => {\n    return new Promise(async (resolve, reject) => {\n        const filenames = fs.readdirSync(foldername);\n        while (filenames.length > 0) {\n            const filename = filenames.shift();\n            const row = await getFilenameRow(filename,foldername);\n            const fileSizeInBytes = fs.statSync([foldername, filename].join('/')).size;\n            resolve(true)\n\n\n            if (row ===  null || row.filesize < fileSizeInBytes) {\n                await loadFile(filename,foldername);\n                if(row === null) {\n    saveToFilename(filename, fileSizeInBytes,foldername)\n}\n               if (row != null && row.filesize < fileSizeInBytes) {\n                   await updatefilesize(filename,fileSizeInBytes,foldername)\n                }\n            }\n\n\n        }\n    })\n\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578161484760
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/parseFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/parseFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "parseFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1573058656476
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/loadFile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/loadFile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "loadFile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _columns = _interopRequireDefault(require(\"./columns\"));\n\nvar _connection = _interopRequireDefault(require(\"./database/connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//set number of columns\nvar r_all = 17;\nvar r_txt = 15;\nvar r_mol = 15;\nvar r_bud = 15;\nvar r_vlh = 15;\nvar r2_all = 17;\n\nvar saveToDB =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(table, rows) {\n    var formattedRows, connection, sql;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formattedRows = rows.map(function (item) {\n              return [(0, _moment[\"default\"])(item.date).format('YYYY-MM-DD HH:mm:ss')].concat(_toConsumableArray(item.columns));\n            });\n            connection = (0, _connection[\"default\"])();\n            sql = \"INSERT IGNORE INTO \".concat(table, \" VALUES ? \");\n            connection.query(sql, [formattedRows], function (err, result) {\n              if (err) throw err;\n              console.log('Number of records inserted: ' + result.affectedRows);\n              connection.end();\n              return Promise.resolve(result.affectedRows);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function saveToDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = function _default(filename, foldername) {\n  return new Promise(function (resolve, reject) {\n    var readInterface = _readline[\"default\"].createInterface({\n      input: _fs[\"default\"].createReadStream(_path[\"default\"].join(__dirname, '../', foldername, '/', filename)),\n      output: process.stdout,\n      console: false\n    });\n\n    var extension = _path[\"default\"].extname(filename).split('.')[1].toLocaleLowerCase();\n\n    var output = [];\n    var i = 0;\n    var table;\n    readInterface.on('line',\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(line) {\n        var split;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                split = line.split(' ').filter(function (item) {\n                  return item !== '';\n                });\n                _context2.t0 = foldername;\n                _context2.next = _context2.t0 === 'slozka1' ? 4 : _context2.t0 === 'slozka2' ? 26 : 33;\n                break;\n\n              case 4:\n                _context2.t1 = extension;\n                _context2.next = _context2.t1 === 'all' ? 7 : _context2.t1 === 'txt' ? 10 : _context2.t1 === 'mol' ? 16 : _context2.t1 === 'bud' ? 19 : _context2.t1 === 'vlh' ? 22 : 25;\n                break;\n\n              case 7:\n                output.push((0, _columns[\"default\"])(split, r_all));\n                table = 'all_table';\n                return _context2.abrupt(\"break\", 25);\n\n              case 10:\n                i++;\n\n                if (!(i === 1)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                output.push((0, _columns[\"default\"])(split, r_txt));\n                table = 'txt_table';\n                return _context2.abrupt(\"break\", 25);\n\n              case 16:\n                output.push((0, _columns[\"default\"])(split, r_mol));\n                table = 'mol_table';\n                return _context2.abrupt(\"break\", 25);\n\n              case 19:\n                output.push((0, _columns[\"default\"])(split, r_bud));\n                table = 'bud_table';\n                return _context2.abrupt(\"break\", 25);\n\n              case 22:\n                output.push((0, _columns[\"default\"])(split, r_vlh));\n                table = 'vlh_table';\n                return _context2.abrupt(\"break\", 25);\n\n              case 25:\n                return _context2.abrupt(\"break\", 33);\n\n              case 26:\n                _context2.t2 = extension;\n                _context2.next = _context2.t2 === 'all' ? 29 : 32;\n                break;\n\n              case 29:\n                output.push((0, _columns[\"default\"])(split, r2_all));\n                table = 'all_table2';\n                return _context2.abrupt(\"break\", 32);\n\n              case 32:\n                return _context2.abrupt(\"break\", 33);\n\n              case 33:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    readInterface.on('close',\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return saveToDB(table, output);\n\n            case 2:\n              output = [];\n              resolve(true);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "loadFile.js"
      ],
      "names": [
        "r_all",
        "r_txt",
        "r_mol",
        "r_bud",
        "r_vlh",
        "r2_all",
        "saveToDB",
        "table",
        "rows",
        "formattedRows",
        "map",
        "item",
        "date",
        "format",
        "columns",
        "connection",
        "sql",
        "query",
        "err",
        "result",
        "console",
        "log",
        "affectedRows",
        "end",
        "Promise",
        "resolve",
        "filename",
        "foldername",
        "reject",
        "readInterface",
        "readline",
        "createInterface",
        "input",
        "fs",
        "createReadStream",
        "path",
        "join",
        "__dirname",
        "output",
        "process",
        "stdout",
        "extension",
        "extname",
        "split",
        "toLocaleLowerCase",
        "i",
        "on",
        "line",
        "filter",
        "push"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of loadFile: separate files dependent on extension, start columns\n//function saveToDB saving data to db\nimport readline from 'readline';\nimport path from 'path';\nimport fs from 'fs';\nimport moment from 'moment';\n//set number of columns\nlet r_all = 17;\nlet r_txt = 15;\nlet r_mol = 15;\nlet r_bud = 15;\nlet r_vlh = 15;\nlet r2_all = 17;\nimport columns from './columns';\nimport createConnection from './database/connection';\n\n\n\nconst saveToDB = async (table, rows) => {\n\n\n\n\n    const formattedRows = rows.map(item => {\n        return [\n            moment(item.date).format('YYYY-MM-DD HH:mm:ss'),\n            ...item.columns\n        ];\n    });\n\n    const connection = createConnection();\n    const sql = `INSERT IGNORE INTO ${table} VALUES ? `;\n    connection.query(sql, [formattedRows], function(err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection.end();\n        return Promise.resolve(result.affectedRows);\n    });\n};\n\nexport default (filename,foldername) => {\n    return new Promise((resolve, reject) => {\n        const readInterface = readline.createInterface({\n            input: fs.createReadStream(\n                path.join(__dirname, '../',foldername,'/', filename)\n            ),\n            output: process.stdout,\n            console: false\n        });\n\n        const extension = path\n            .extname(filename)\n            .split('.')[1]\n            .toLocaleLowerCase();\n        let output = [];\n        let i = 0;\n        let table;\n\n\n\n        readInterface.on('line', async line => {\n            let split = line.split(' ').filter(item => item !== '');\n            switch (foldername) {\n                case 'slozka1':\n\n                    switch (extension) {\n                        case 'all':\n                            output.push(columns(split, r_all));\n                            table = 'all_table';\n                            break;\n\n                        case 'txt':\n                            i++;\n                            if (i === 1) return;\n                            output.push(columns(split, r_txt));\n                            table = 'txt_table';\n                            break;\n\n                        case 'mol':\n                            output.push(columns(split, r_mol));\n                            table = 'mol_table';\n                            break;\n\n                        case 'bud':\n                            output.push(columns(split, r_bud));\n                            table = 'bud_table';\n                            break;\n\n                        case 'vlh':\n                            output.push(columns(split, r_vlh));\n                            table = 'vlh_table';\n                            break;\n                    }\n                    break;\n\n                case 'slozka2':\n                    switch (extension) {\n                        case 'all':\n                            output.push(columns(split, r2_all));\n                            table = 'all_table2';\n                            break;\n\n\n                    }\n                    break;\n            }\n        });\n\n        readInterface.on('close', async () => {\n\n            await saveToDB(table, output);\n            output = [];\n            resolve(true);\n        });\n\n\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578163171457
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/rows.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/rows.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "rows.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// function of rows: throw values to definited +number+ of rows and return split line\nvar parsedLines = [];\n\nvar _default = function _default(split, number) {\n  var date = new Date();\n  date.setFullYear(split[0], split[1] - 1, split[2]);\n  date.setHours(split[3], split[4], split[5]);\n  var s7 = split[6];\n  var s8 = split[7];\n  var s9 = split[8];\n  var s10 = split[9];\n  var s11 = split[10];\n  var s12 = split[11];\n  var s13 = split[12];\n  var s14 = split[13];\n  var s15 = split[14];\n  var s16 = split[15];\n  var s17 = split[16];\n  var s18 = split[17];\n  var s19 = split[18];\n  var s20 = split[19];\n  var s21 = split[20];\n  var s22 = split[21];\n  var s23 = split[22];\n  var s24 = split[23];\n  var s25 = split[24];\n  var s26 = split[25];\n  var s27 = split[26];\n  var s28 = split[27];\n  var s29 = split[28];\n  var s30 = split[29];\n  var s31 = split[30];\n  var s32 = split[31];\n  var s33 = split[32];\n  var s34 = split[33];\n  var s35 = split[34];\n  var s36 = split[35];\n  var s37 = split[36];\n  var s38 = split[37];\n  var s39 = split[38];\n  var s40 = split[39];\n\n  switch (number) {\n    case number <= 6:\n      throw Error('Unsupported number of rows ' + number);\n\n    case 7:\n      parsedLines = {\n        date: date,\n        s7: s7\n      };\n      break;\n\n    case 8:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8\n      };\n      break;\n\n    case 9:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9\n      };\n      break;\n\n    case 10:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10\n      };\n      break;\n\n    case 11:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11\n      };\n      break;\n\n    case 12:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12\n      };\n      break;\n\n    case 13:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13\n      };\n      break;\n\n    case 14:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14\n      };\n      break;\n\n    case 15:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15\n      };\n      break;\n\n    case 16:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16\n      };\n      break;\n\n    case 17:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17\n      };\n      break;\n\n    case 18:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18\n      };\n      break;\n\n    case 19:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19\n      };\n      break;\n\n    case 20:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20\n      };\n      break;\n\n    case 21:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21\n      };\n      break;\n\n    case 22:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22\n      };\n      break;\n\n    case 23:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23\n      };\n      break;\n\n    case 24:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24\n      };\n      break;\n\n    case 25:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25\n      };\n      break;\n\n    case 26:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26\n      };\n      break;\n\n    case 27:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27\n      };\n      break;\n\n    case 28:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28\n      };\n      break;\n\n    case 29:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29\n      };\n      break;\n\n    case 30:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30\n      };\n      break;\n\n    case 31:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31\n      };\n      break;\n\n    case 32:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32\n      };\n      break;\n\n    case 33:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33\n      };\n      break;\n\n    case 34:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34\n      };\n      break;\n\n    case 35:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35\n      };\n      break;\n\n    case 36:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36\n      };\n      break;\n\n    case 37:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37\n      };\n      break;\n\n    case 38:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38\n      };\n      break;\n\n    case 39:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39\n      };\n      break;\n\n    case 40:\n      parsedLines = {\n        date: date,\n        s7: s7,\n        s8: s8,\n        s9: s9,\n        s10: s10,\n        s11: s11,\n        s12: s12,\n        s13: s13,\n        s14: s14,\n        s15: s15,\n        s16: s16,\n        s17: s17,\n        s18: s18,\n        s19: s19,\n        s20: s20,\n        s21: s21,\n        s22: s22,\n        s23: s23,\n        s24: s24,\n        s25: s25,\n        s26: s26,\n        s27: s27,\n        s28: s28,\n        s29: s29,\n        s30: s30,\n        s31: s31,\n        s32: s32,\n        s33: s33,\n        s34: s34,\n        s35: s35,\n        s36: s36,\n        s37: s37,\n        s38: s38,\n        s39: s39,\n        s40: s40\n      };\n      break;\n  } //console.log(parsedLines)\n\n\n  return parsedLines;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "rows.js"
      ],
      "names": [
        "parsedLines",
        "split",
        "number",
        "date",
        "Date",
        "setFullYear",
        "setHours",
        "s7",
        "s8",
        "s9",
        "s10",
        "s11",
        "s12",
        "s13",
        "s14",
        "s15",
        "s16",
        "s17",
        "s18",
        "s19",
        "s20",
        "s21",
        "s22",
        "s23",
        "s24",
        "s25",
        "s26",
        "s27",
        "s28",
        "s29",
        "s30",
        "s31",
        "s32",
        "s33",
        "s34",
        "s35",
        "s36",
        "s37",
        "s38",
        "s39",
        "s40",
        "Error"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of rows and return split line\nlet parsedLines = [];\nexport default (split,number) => {\n    let date = new Date();\n    date.setFullYear(split[0], (split[1] - 1), split[2]);\n    date.setHours(split[3], split[4], split[5]);\n    let s7 = split[6];\n    let s8 = split[7];\n    let s9 = split[8];\n    let s10 = split[9];\n    let s11 = split[10];\n    let s12 = split[11];\n    let s13 = split[12];\n    let s14 = split[13];\n    let s15 = split[14];\n    let s16 = split[15];\n    let s17 = split[16];\n    let s18 = split[17];\n    let s19 = split[18];\n    let s20 = split[19];\n    let s21 = split[20];\n    let s22 = split[21];\n    let s23 = split[22];\n    let s24 = split[23];\n    let s25 = split[24];\n    let s26 = split[25];\n    let s27 = split[26];\n    let s28 = split[27];\n    let s29 = split[28];\n    let s30 = split[29];\n    let s31 = split[30];\n    let s32 = split[31];\n    let s33 = split[32];\n    let s34 = split[33];\n    let s35 = split[34];\n    let s36 = split[35];\n    let s37 = split[36];\n    let s38 = split[37];\n    let s39 = split[38];\n    let s40 = split[39];\n\n    switch(number){\n        case (number<=6):\n            throw Error('Unsupported number of rows ' + number)\n        case 7:\n            parsedLines = ({date,s7});\n        break;\n        case 8:\n            parsedLines = ({date,s7,s8});\n            break;\n        case 9:\n            parsedLines = ({date,s7,s8,s9});\n            break;\n        case 10:\n            parsedLines = ({date,s7,s8,s9,s10});\n            break;\n        case 11:\n            parsedLines = ({date,s7,s8,s9,s10,s11});\n            break;\n        case 12:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12});\n\n            break;\n        case 13:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13});\n            break;\n        case 14:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14});\n            break;\n        case 15:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15});\n            break;\n        case 16:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16});\n            break;\n        case 17:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17});\n            break;\n        case 18:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18});\n            break;\n        case 19:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19});\n            break;\n        case 20:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20});\n            break;\n        case 21:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21});\n            break;\n        case 22:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22});\n            break;\n        case 23:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23});\n            break;\n        case 24:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24});\n            break;\n        case 25:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25});\n            break;\n        case 26:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26});\n            break;\n        case 27:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27});\n            break;\n        case 28:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28});\n            break;\n        case 29:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29});\n            break;\n        case 30:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30});\n            break;\n        case 31:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31});\n            break;\n        case 32:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32});\n            break;\n        case 33:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33});\n            break;\n        case 34:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34});\n            break;\n        case 35:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35});\n            break;\n        case 36:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36});\n            break;\n        case 37:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37});\n            break;\n        case 38:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38});\n            break;\n        case 39:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39});\n            break;\n        case 40:\n            parsedLines = ({date,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40});\n            break;\n\n\n    }\n//console.log(parsedLines)\nreturn parsedLines\n\n\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1573059286086
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/columns.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/columns.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
        "sourceFileName": "columns.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n// function of rows: throw values to definited +number+ of columns and return split line\nvar _default = function _default(split, number) {\n  var parsedLine = {\n    date: new Date(),\n    columns: []\n  };\n  parsedLine.date.setFullYear(split[0], split[1] - 1, split[2]);\n  parsedLine.date.setHours(split[3], split[4], split[5]);\n  parsedLine.date.setMilliseconds(0);\n\n  if (number <= 6 || number > 40) {\n    throw Error('Unsupported number of rows ' + number);\n  }\n\n  for (var i = 6; i < number; i++) {\n    if (split[i] === undefined) {\n      split[i] = null;\n    }\n\n    if (split[i] === '?') {\n      split[i] = null;\n    }\n\n    parsedLine.columns[i - 6] = split[i];\n  }\n\n  return parsedLine;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbnMuanMiXSwibmFtZXMiOlsic3BsaXQiLCJudW1iZXIiLCJwYXJzZWRMaW5lIiwiZGF0ZSIsIkRhdGUiLCJjb2x1bW5zIiwic2V0RnVsbFllYXIiLCJzZXRIb3VycyIsInNldE1pbGxpc2Vjb25kcyIsIkVycm9yIiwiaSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO2VBRWUsa0JBQUNBLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUM5QixNQUFNQyxVQUFVLEdBQUc7QUFDZkMsSUFBQUEsSUFBSSxFQUFFLElBQUlDLElBQUosRUFEUztBQUVmQyxJQUFBQSxPQUFPLEVBQUU7QUFGTSxHQUFuQjtBQUlBSCxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JHLFdBQWhCLENBQTRCTixLQUFLLENBQUMsQ0FBRCxDQUFqQyxFQUFzQ0EsS0FBSyxDQUFDLENBQUQsQ0FBTCxHQUFXLENBQWpELEVBQW9EQSxLQUFLLENBQUMsQ0FBRCxDQUF6RDtBQUNBRSxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0JJLFFBQWhCLENBQXlCUCxLQUFLLENBQUMsQ0FBRCxDQUE5QixFQUFtQ0EsS0FBSyxDQUFDLENBQUQsQ0FBeEMsRUFBNkNBLEtBQUssQ0FBQyxDQUFELENBQWxEO0FBQ0FFLEVBQUFBLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQkssZUFBaEIsQ0FBZ0MsQ0FBaEM7O0FBQ0EsTUFBSVAsTUFBTSxJQUFJLENBQVYsSUFBZUEsTUFBTSxHQUFHLEVBQTVCLEVBQWdDO0FBQzVCLFVBQU1RLEtBQUssQ0FBQyxnQ0FBZ0NSLE1BQWpDLENBQVg7QUFDSDs7QUFDRCxPQUFLLElBQUlTLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdULE1BQXBCLEVBQTRCUyxDQUFDLEVBQTdCLEVBQWlDO0FBQzdCLFFBQUlWLEtBQUssQ0FBQ1UsQ0FBRCxDQUFMLEtBQWFDLFNBQWpCLEVBQTRCO0FBQ3hCWCxNQUFBQSxLQUFLLENBQUNVLENBQUQsQ0FBTCxHQUFXLElBQVg7QUFDSDs7QUFDRCxRQUFJVixLQUFLLENBQUNVLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQ2xCVixNQUFBQSxLQUFLLENBQUNVLENBQUQsQ0FBTCxHQUFXLElBQVg7QUFDSDs7QUFDRFIsSUFBQUEsVUFBVSxDQUFDRyxPQUFYLENBQW1CSyxDQUFDLEdBQUcsQ0FBdkIsSUFBNEJWLEtBQUssQ0FBQ1UsQ0FBRCxDQUFqQztBQUNIOztBQUVELFNBQU9SLFVBQVA7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmdW5jdGlvbiBvZiByb3dzOiB0aHJvdyB2YWx1ZXMgdG8gZGVmaW5pdGVkICtudW1iZXIrIG9mIGNvbHVtbnMgYW5kIHJldHVybiBzcGxpdCBsaW5lXG5cbmV4cG9ydCBkZWZhdWx0IChzcGxpdCwgbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgcGFyc2VkTGluZSA9IHtcbiAgICAgICAgZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgY29sdW1uczogW11cbiAgICB9O1xuICAgIHBhcnNlZExpbmUuZGF0ZS5zZXRGdWxsWWVhcihzcGxpdFswXSwgc3BsaXRbMV0gLSAxLCBzcGxpdFsyXSk7XG4gICAgcGFyc2VkTGluZS5kYXRlLnNldEhvdXJzKHNwbGl0WzNdLCBzcGxpdFs0XSwgc3BsaXRbNV0pO1xuICAgIHBhcnNlZExpbmUuZGF0ZS5zZXRNaWxsaXNlY29uZHMoMCk7XG4gICAgaWYgKG51bWJlciA8PSA2IHx8IG51bWJlciA+IDQwKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdVbnN1cHBvcnRlZCBudW1iZXIgb2Ygcm93cyAnICsgbnVtYmVyKTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDY7IGkgPCBudW1iZXI7IGkrKykge1xuICAgICAgICBpZiAoc3BsaXRbaV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3BsaXRbaV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzcGxpdFtpXSA9PT0gJz8nKSB7XG4gICAgICAgICAgICBzcGxpdFtpXSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcGFyc2VkTGluZS5jb2x1bW5zW2kgLSA2XSA9IHNwbGl0W2ldO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZWRMaW5lO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "columns.js"
      ],
      "names": [
        "split",
        "number",
        "parsedLine",
        "date",
        "Date",
        "columns",
        "setFullYear",
        "setHours",
        "setMilliseconds",
        "Error",
        "i",
        "undefined"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,kBAACA,KAAD,EAAQC,MAAR,EAAmB;AAC9B,MAAMC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EADS;AAEfC,IAAAA,OAAO,EAAE;AAFM,GAAnB;AAIAH,EAAAA,UAAU,CAACC,IAAX,CAAgBG,WAAhB,CAA4BN,KAAK,CAAC,CAAD,CAAjC,EAAsCA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAjD,EAAoDA,KAAK,CAAC,CAAD,CAAzD;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgBI,QAAhB,CAAyBP,KAAK,CAAC,CAAD,CAA9B,EAAmCA,KAAK,CAAC,CAAD,CAAxC,EAA6CA,KAAK,CAAC,CAAD,CAAlD;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgBK,eAAhB,CAAgC,CAAhC;;AACA,MAAIP,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,EAA5B,EAAgC;AAC5B,UAAMQ,KAAK,CAAC,gCAAgCR,MAAjC,CAAX;AACH;;AACD,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAApB,EAA4BS,CAAC,EAA7B,EAAiC;AAC7B,QAAIV,KAAK,CAACU,CAAD,CAAL,KAAaC,SAAjB,EAA4B;AACxBX,MAAAA,KAAK,CAACU,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,QAAIV,KAAK,CAACU,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAClBV,MAAAA,KAAK,CAACU,CAAD,CAAL,GAAW,IAAX;AACH;;AACDR,IAAAA,UAAU,CAACG,OAAX,CAAmBK,CAAC,GAAG,CAAvB,IAA4BV,KAAK,CAACU,CAAD,CAAjC;AACH;;AAED,SAAOR,UAAP;AACH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src",
      "sourcesContent": [
        "// function of rows: throw values to definited +number+ of columns and return split line\n\nexport default (split, number) => {\n    const parsedLine = {\n        date: new Date(),\n        columns: []\n    };\n    parsedLine.date.setFullYear(split[0], split[1] - 1, split[2]);\n    parsedLine.date.setHours(split[3], split[4], split[5]);\n    parsedLine.date.setMilliseconds(0);\n    if (number <= 6 || number > 40) {\n        throw Error('Unsupported number of rows ' + number);\n    }\n    for (let i = 6; i < number; i++) {\n        if (split[i] === undefined) {\n            split[i] = null;\n        }\n        if (split[i] === '?') {\n            split[i] = null;\n        }\n        parsedLine.columns[i - 6] = split[i];\n    }\n\n    return parsedLine;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576782630237
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/connection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/connection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "connection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//connecting to db\nvar _default = function _default() {\n  var connection = _mysql[\"default\"].createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'Luckas.11995544',\n    database: 'data'\n  });\n\n  connection.connect(function (err) {\n    if (!err) {// console.log(\"Connected\");\n    } else {\n      console.log('Connection Failed');\n    }\n  });\n  return connection;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3Rpb24uanMiXSwibmFtZXMiOlsiY29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtlQUVlLG9CQUFNO0FBQ2pCLE1BQU1BLFVBQVUsR0FBR0Msa0JBQU1DLGdCQUFOLENBQXVCO0FBQ3RDQyxJQUFBQSxJQUFJLEVBQUUsV0FEZ0M7QUFFdENDLElBQUFBLElBQUksRUFBRSxNQUZnQztBQUd0Q0MsSUFBQUEsUUFBUSxFQUFFLGlCQUg0QjtBQUl0Q0MsSUFBQUEsUUFBUSxFQUFFO0FBSjRCLEdBQXZCLENBQW5COztBQU9BTixFQUFBQSxVQUFVLENBQUNPLE9BQVgsQ0FBbUIsVUFBQUMsR0FBRyxFQUFJO0FBQ3RCLFFBQUksQ0FBQ0EsR0FBTCxFQUFVLENBQ047QUFDSCxLQUZELE1BRU87QUFDSEMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVo7QUFDSDtBQUNKLEdBTkQ7QUFPQSxTQUFPVixVQUFQO0FBQ0gsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjL2RhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiLy9jb25uZWN0aW5nIHRvIGRiXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnO1xuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcbiAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgICAgIHVzZXI6ICdyb290JyxcbiAgICAgICAgcGFzc3dvcmQ6ICdMdWNrYXMuMTE5OTU1NDQnLFxuICAgICAgICBkYXRhYmFzZTogJ2RhdGEnXG4gICAgfSk7XG5cbiAgICBjb25uZWN0aW9uLmNvbm5lY3QoZXJyID0+IHtcbiAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gRmFpbGVkJyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY29ubmVjdGlvbjtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "connection.js"
      ],
      "names": [
        "connection",
        "mysql",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;eAEe,oBAAM;AACjB,MAAMA,UAAU,GAAGC,kBAAMC,gBAAN,CAAuB;AACtCC,IAAAA,IAAI,EAAE,WADgC;AAEtCC,IAAAA,IAAI,EAAE,MAFgC;AAGtCC,IAAAA,QAAQ,EAAE,iBAH4B;AAItCC,IAAAA,QAAQ,EAAE;AAJ4B,GAAvB,CAAnB;;AAOAN,EAAAA,UAAU,CAACO,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtB,QAAI,CAACA,GAAL,EAAU,CACN;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GAND;AAOA,SAAOV,UAAP;AACH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//connecting to db\nimport mysql from 'mysql';\nexport default () => {\n    const connection = mysql.createConnection({\n        host: 'localhost',\n        user: 'root',\n        password: 'Luckas.11995544',\n        database: 'data'\n    });\n\n    connection.connect(err => {\n        if (!err) {\n            // console.log(\"Connected\");\n        } else {\n            console.log('Connection Failed');\n        }\n    });\n    return connection;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576782630237
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/createtable.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "createtable.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createtable;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nfunction createtable() {\n  var connection = (0, _connection[\"default\"])();\n  var sql = 'CREATE TABLE IF NOT EXISTS txt_table ( datum timestamp PRIMARY KEY NOT NULL ,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS all_table ( datum timestamp PRIMARY KEY NOT NULL, s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS mol_table (datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS bud_table (datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS vlh_table ( datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS filename (fname VARCHAR(255) PRIMARY KEY,filesize double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS all_table2 ( datum timestamp PRIMARY KEY NOT NULL, s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)';\n  connection.query(sql);\n  var sql = 'CREATE TABLE IF NOT EXISTS selectable_tables ( name_table varchar(255)PRIMARY KEY NOT NULL, title varchar (255))';\n  connection.query(sql);\n  var sql = \"INSERT IGNORE INTO selectable_tables VALUES ('all_table2', 'Data 1'),('mol_table','Data 2'),('all_table','Data 3'),('bud_table','Data 4'),('txt_table','Data 5'),('vlh_table','Data 6')\";\n  connection.query(sql);\n  /* var sql= \"ALTER TABLE all_table  ADD (s11 double)\"\n      connection.query(sql);*/\n}\n\ncreatetable();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZXRhYmxlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZXRhYmxlIiwiY29ubmVjdGlvbiIsInNxbCIsInF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFGQTtBQUNBO0FBRWUsU0FBU0EsV0FBVCxHQUF1QjtBQUNsQyxNQUFJQyxVQUFVLEdBQUcsNkJBQWpCO0FBQ0EsTUFBSUMsR0FBRyxHQUNILDZLQURKO0FBRUFELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQ0gsbU1BREo7QUFFQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FDSCwyS0FESjtBQUVBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBQ0EsTUFBSUEsR0FBRyxHQUNILDJLQURKO0FBRUFELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQ0gsNEtBREo7QUFFQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBLE1BQUlBLEdBQUcsR0FDSCxzRkFESjtBQUVBRCxFQUFBQSxVQUFVLENBQUNFLEtBQVgsQ0FBaUJELEdBQWpCO0FBQ0ksTUFBSUEsR0FBRyxHQUNQLG9NQURBO0FBRUpELEVBQUFBLFVBQVUsQ0FBQ0UsS0FBWCxDQUFpQkQsR0FBakI7QUFDQSxNQUFJQSxHQUFHLEdBQ0gsa0hBREo7QUFFQUQsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNELE1BQUlBLEdBQUcsNExBQVA7QUFDQ0QsRUFBQUEsVUFBVSxDQUFDRSxLQUFYLENBQWlCRCxHQUFqQjtBQUNBOztBQUVIOztBQUNERixXQUFXIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMvZGF0YWJhc2UiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYWtlIG5ldyB0YWJsZSwgb3IgYWRkIGNvbHVtbjogRVhBTVBMRSB2YXIgc3FsPSBcIkFMVEVSIFRBQkxFIHR4dF90YWJsZSAgQUREIChzOSBWQVJDSEFSKDI1KSlcIjssIHJ1biBzZXBhcmF0ZWx5XG4vLyBpcyBuZWNlc3NhcnkgaGF2ZSBzYW1lIG51bWJlciBvZiBjb2x1bW4gaW4gZGF0YWJhc2UgYW5kIGluIHBhcnNlRmlsZVxuaW1wb3J0IGNyZWF0ZUNvbm5lY3Rpb24gZnJvbSAnLi9jb25uZWN0aW9uJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZXRhYmxlKCkge1xuICAgIGxldCBjb25uZWN0aW9uID0gY3JlYXRlQ29ubmVjdGlvbigpO1xuICAgIHZhciBzcWwgPVxuICAgICAgICAnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgdHh0X3RhYmxlICggZGF0dW0gdGltZXN0YW1wIFBSSU1BUlkgS0VZIE5PVCBOVUxMICxzMSBkb3VibGUsIHMyIGRvdWJsZSwgczMgZG91YmxlLHM0IGRvdWJsZSxzNSBkb3VibGUsczYgZG91YmxlLCBzNyBkb3VibGUsczggZG91YmxlLCBzOSBkb3VibGUpJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgdmFyIHNxbCA9XG4gICAgICAgICdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhbGxfdGFibGUgKCBkYXR1bSB0aW1lc3RhbXAgUFJJTUFSWSBLRVkgTk9UIE5VTEwsIHMxIGRvdWJsZSwgczIgZG91YmxlLCBzMyBkb3VibGUsczQgZG91YmxlLHM1IGRvdWJsZSxzNiBkb3VibGUsIHM3IGRvdWJsZSxzOCBkb3VibGUsIHM5IGRvdWJsZSxzMTAgZG91YmxlLHMxMSBkb3VibGUpJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgdmFyIHNxbCA9XG4gICAgICAgICdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBtb2xfdGFibGUgKGRhdHVtIHRpbWVzdGFtcCBQUklNQVJZIEtFWSBOT1QgTlVMTCxzMSBkb3VibGUsIHMyIGRvdWJsZSwgczMgZG91YmxlLHM0IGRvdWJsZSxzNSBkb3VibGUsczYgZG91YmxlLCBzNyBkb3VibGUsczggZG91YmxlLCBzOSBkb3VibGUpJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgdmFyIHNxbCA9XG4gICAgICAgICdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBidWRfdGFibGUgKGRhdHVtIHRpbWVzdGFtcCBQUklNQVJZIEtFWSBOT1QgTlVMTCxzMSBkb3VibGUsIHMyIGRvdWJsZSwgczMgZG91YmxlLHM0IGRvdWJsZSxzNSBkb3VibGUsczYgZG91YmxlLCBzNyBkb3VibGUsczggZG91YmxlLCBzOSBkb3VibGUpJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgdmFyIHNxbCA9XG4gICAgICAgICdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB2bGhfdGFibGUgKCBkYXR1bSB0aW1lc3RhbXAgUFJJTUFSWSBLRVkgTk9UIE5VTEwsczEgZG91YmxlLCBzMiBkb3VibGUsIHMzIGRvdWJsZSxzNCBkb3VibGUsczUgZG91YmxlLHM2IGRvdWJsZSwgczcgZG91YmxlLHM4IGRvdWJsZSwgczkgZG91YmxlKSc7XG4gICAgY29ubmVjdGlvbi5xdWVyeShzcWwpO1xuICAgIHZhciBzcWwgPVxuICAgICAgICAnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZmlsZW5hbWUgKGZuYW1lIFZBUkNIQVIoMjU1KSBQUklNQVJZIEtFWSxmaWxlc2l6ZSBkb3VibGUpJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgICAgIHZhciBzcWwgPVxuICAgICAgICAnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYWxsX3RhYmxlMiAoIGRhdHVtIHRpbWVzdGFtcCBQUklNQVJZIEtFWSBOT1QgTlVMTCwgczEgZG91YmxlLCBzMiBkb3VibGUsIHMzIGRvdWJsZSxzNCBkb3VibGUsczUgZG91YmxlLHM2IGRvdWJsZSwgczcgZG91YmxlLHM4IGRvdWJsZSwgczkgZG91YmxlLHMxMCBkb3VibGUsczExIGRvdWJsZSknO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsKTtcbiAgICB2YXIgc3FsID1cbiAgICAgICAgJ0NSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHNlbGVjdGFibGVfdGFibGVzICggbmFtZV90YWJsZSB2YXJjaGFyKDI1NSlQUklNQVJZIEtFWSBOT1QgTlVMTCwgdGl0bGUgdmFyY2hhciAoMjU1KSknO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkoc3FsKTtcbiAgIHZhciBzcWwgPSBgSU5TRVJUIElHTk9SRSBJTlRPIHNlbGVjdGFibGVfdGFibGVzIFZBTFVFUyAoJ2FsbF90YWJsZTInLCAnRGF0YSAxJyksKCdtb2xfdGFibGUnLCdEYXRhIDInKSwoJ2FsbF90YWJsZScsJ0RhdGEgMycpLCgnYnVkX3RhYmxlJywnRGF0YSA0JyksKCd0eHRfdGFibGUnLCdEYXRhIDUnKSwoJ3ZsaF90YWJsZScsJ0RhdGEgNicpYDtcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7XG4gICAgLyogdmFyIHNxbD0gXCJBTFRFUiBUQUJMRSBhbGxfdGFibGUgIEFERCAoczExIGRvdWJsZSlcIlxuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCk7Ki9cbn1cbmNyZWF0ZXRhYmxlKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "createtable.js"
      ],
      "names": [
        "createtable",
        "connection",
        "sql",
        "query"
      ],
      "mappings": ";;;;;;;AAEA;;;;AAFA;AACA;AAEe,SAASA,WAAT,GAAuB;AAClC,MAAIC,UAAU,GAAG,6BAAjB;AACA,MAAIC,GAAG,GACH,6KADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,mMADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,2KADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,2KADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,4KADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,sFADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACI,MAAIA,GAAG,GACP,oMADA;AAEJD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA,MAAIA,GAAG,GACH,kHADJ;AAEAD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACD,MAAIA,GAAG,4LAAP;AACCD,EAAAA,UAAU,CAACE,KAAX,CAAiBD,GAAjB;AACA;;AAEH;;AACDF,WAAW",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "// make new table, or add column: EXAMPLE var sql= \"ALTER TABLE txt_table  ADD (s9 VARCHAR(25))\";, run separately\n// is necessary have same number of column in database and in parseFile\nimport createConnection from './connection';\nexport default function createtable() {\n    let connection = createConnection();\n    var sql =\n        'CREATE TABLE IF NOT EXISTS txt_table ( datum timestamp PRIMARY KEY NOT NULL ,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS all_table ( datum timestamp PRIMARY KEY NOT NULL, s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS mol_table (datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS bud_table (datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS vlh_table ( datum timestamp PRIMARY KEY NOT NULL,s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS filename (fname VARCHAR(255) PRIMARY KEY,filesize double)';\n    connection.query(sql);\n        var sql =\n        'CREATE TABLE IF NOT EXISTS all_table2 ( datum timestamp PRIMARY KEY NOT NULL, s1 double, s2 double, s3 double,s4 double,s5 double,s6 double, s7 double,s8 double, s9 double,s10 double,s11 double)';\n    connection.query(sql);\n    var sql =\n        'CREATE TABLE IF NOT EXISTS selectable_tables ( name_table varchar(255)PRIMARY KEY NOT NULL, title varchar (255))';\n    connection.query(sql);\n   var sql = `INSERT IGNORE INTO selectable_tables VALUES ('all_table2', 'Data 1'),('mol_table','Data 2'),('all_table','Data 3'),('bud_table','Data 4'),('txt_table','Data 5'),('vlh_table','Data 6')`;\n    connection.query(sql);\n    /* var sql= \"ALTER TABLE all_table  ADD (s11 double)\"\n        connection.query(sql);*/\n}\ncreatetable();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580988727973
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/savetodatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "savetodatabase.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar getDates = function getDates(fields) {\n  return fields.map(function (field) {\n    return field.date;\n  });\n};\n\nvar getColumns = function getColumns(fields) {\n  return fields.map(function (field) {\n    return field.columns;\n  });\n};\n\nvar getAll = function getAll(fields) {\n  return fields.map(function (field) {\n    return field;\n  });\n};\n\nvar toOneArray = function toOneArray(A) {\n  var todb = [];\n\n  for (var _i = 0; _i < A.length; _i++) {\n    var k = [A[_i].date].concat(_toConsumableArray(A[_i].columns));\n    todb.push(k);\n  }\n\n  return todb;\n};\n\nvar _default = function _default(A, index, filename, oriniginalfileresult, fileSizeInBytes) {\n  if (oriniginalfileresult === false) {\n    var connection = (0, _connection[\"default\"])();\n    var sqlfilename = \"INSERT INTO filename VALUES ('\" + index + \"','\" + filename + \"','\" + fileSizeInBytes + \"')\";\n    connection.query(sqlfilename);\n    connection.end();\n  }\n\n  var c = getColumns(A);\n  var d = getDates(A);\n  var values = toOneArray(A);\n  {\n    var path = [foldername, filename[i]];\n    var pathtosize = path.join('/');\n    var stats = fs.statSync(pathtosize);\n    var _fileSizeInBytes = stats.size;\n\n    if (!!result === false || result[0].filesize < _fileSizeInBytes) {\n      loadFile(filename[i]).then(function (A) {\n        savetodatabase(A, i, filename[i], !!result, _fileSizeInBytes);\n\n        if (result[0].filesize < _fileSizeInBytes) {\n          updatefilesize(_fileSizeInBytes, i);\n        }\n      })[\"catch\"](function (error) {\n        console.log('error openFolder');\n      });\n    }\n  }\n  var extension = path.extname(filename).split('.')[1].toLocaleLowerCase();\n\n  switch (extension) {\n    case 'txt':\n      var sql = 'INSERT IGNORE INTO txt_table VALUES ?';\n      var connection1 = (0, _connection[\"default\"])();\n      connection1.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection1.end();\n      });\n      break;\n\n    case 'all':\n      var connection2 = (0, _connection[\"default\"])();\n      var sql = 'INSERT IGNORE INTO all_table VALUES ?';\n      connection2.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection2.end();\n      });\n      break;\n\n    case 'mol':\n      var connection3 = (0, _connection[\"default\"])();\n      var sql = 'INSERT IGNORE INTO mol_table VALUES ?';\n      connection3.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection3.end();\n      });\n      break;\n\n    case 'bud':\n      var connection4 = (0, _connection[\"default\"])();\n      var sql = 'INSERT IGNORE INTO bud_table VALUES ? ';\n      connection4.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection4.end();\n      });\n      break;\n\n    case 'vlh':\n      var connection5 = (0, _connection[\"default\"])();\n      var sql = 'INSERT IGNORE INTO vlh_table VALUES ?';\n      connection5.query(sql, [values], function (err, result) {\n        if (err) throw err;\n        console.log('Number of records inserted: ' + result.affectedRows);\n        connection5.end();\n      });\n      break;\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "savetodatabase.js"
      ],
      "names": [
        "getDates",
        "fields",
        "map",
        "field",
        "date",
        "getColumns",
        "columns",
        "getAll",
        "toOneArray",
        "A",
        "todb",
        "i",
        "length",
        "k",
        "push",
        "index",
        "filename",
        "oriniginalfileresult",
        "fileSizeInBytes",
        "connection",
        "sqlfilename",
        "query",
        "end",
        "c",
        "d",
        "values",
        "path",
        "foldername",
        "pathtosize",
        "join",
        "stats",
        "fs",
        "statSync",
        "size",
        "result",
        "filesize",
        "loadFile",
        "then",
        "savetodatabase",
        "updatefilesize",
        "error",
        "console",
        "log",
        "extension",
        "extname",
        "split",
        "toLocaleLowerCase",
        "sql",
        "connection1",
        "err",
        "affectedRows",
        "connection2",
        "connection3",
        "connection4",
        "connection5"
      ],
      "mappings": "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",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "//saving to db\nimport createConnection from './connection';\nimport path from 'path';\n\nconst getDates = fields => fields.map(field => field.date);\nconst getColumns = fields => fields.map(field => field.columns);\nconst getAll = fields => fields.map(field => field);\n\nvar toOneArray = function(A) {\n    let todb = [];\n    for (let i = 0; i < A.length; i++) {\n        let k = [A[i].date, ...A[i].columns];\n        todb.push(k);\n    }\n    return todb;\n};\n\nexport default (A, index, filename, oriniginalfileresult, fileSizeInBytes) => {\n    if (oriniginalfileresult === false) {\n        let connection = createConnection();\n        var sqlfilename =\n            \"INSERT INTO filename VALUES ('\" +\n            index +\n            \"','\" +\n            filename +\n            \"','\" +\n            fileSizeInBytes +\n            \"')\";\n        connection.query(sqlfilename);\n        connection.end();\n    }\n    let c = getColumns(A);\n    let d = getDates(A);\n    let values = toOneArray(A);\n\n    {\n        var path = [foldername, filename[i]];\n        var pathtosize = path.join('/');\n        const stats = fs.statSync(pathtosize);\n        const fileSizeInBytes = stats.size;\n\n        if (!!result === false || result[0].filesize < fileSizeInBytes) {\n            loadFile(filename[i])\n                .then(A => {\n                    savetodatabase(\n                        A,\n                        i,\n                        filename[i],\n                        !!result,\n                        fileSizeInBytes\n                    );\n                    if (result[0].filesize < fileSizeInBytes) {\n                        updatefilesize(fileSizeInBytes, i);\n                    }\n                })\n                .catch(error => {\n                    console.log('error openFolder');\n                });\n        }\n    }\n\n    const extension = path\n        .extname(filename)\n        .split('.')[1]\n        .toLocaleLowerCase();\n    switch (extension) {\n        case 'txt':\n            var sql = 'INSERT IGNORE INTO txt_table VALUES ?';\n            let connection1 = createConnection();\n\n            connection1.query(sql, [values], function(err, result) {\n                if (err) throw err;\n                console.log(\n                    'Number of records inserted: ' + result.affectedRows\n                );\n                connection1.end();\n            });\n            break;\n        case 'all':\n            let connection2 = createConnection();\n            var sql = 'INSERT IGNORE INTO all_table VALUES ?';\n            connection2.query(sql, [values], function(err, result) {\n                if (err) throw err;\n                console.log(\n                    'Number of records inserted: ' + result.affectedRows\n                );\n                connection2.end();\n            });\n            break;\n        case 'mol':\n            let connection3 = createConnection();\n            var sql = 'INSERT IGNORE INTO mol_table VALUES ?';\n            connection3.query(sql, [values], function(err, result) {\n                if (err) throw err;\n                console.log(\n                    'Number of records inserted: ' + result.affectedRows\n                );\n                connection3.end();\n            });\n            break;\n        case 'bud':\n            let connection4 = createConnection();\n            var sql = 'INSERT IGNORE INTO bud_table VALUES ? ';\n            connection4.query(sql, [values], function(err, result) {\n                if (err) throw err;\n                console.log(\n                    'Number of records inserted: ' + result.affectedRows\n                );\n                connection4.end();\n            });\n            break;\n\n        case 'vlh':\n            let connection5 = createConnection();\n            var sql = 'INSERT IGNORE INTO vlh_table VALUES ?';\n            connection5.query(sql, [values], function(err, result) {\n                if (err) throw err;\n                console.log(\n                    'Number of records inserted: ' + result.affectedRows\n                );\n                connection5.end();\n            });\n            break;\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576791326263
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/database/updatefilesize.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
        "sourceFileName": "updatefilesize.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _connection = _interopRequireDefault(require(\"./connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// function updatefilesize, updating size to existing filename\nvar connection = (0, _connection[\"default\"])();\n\nvar _default = function _default(filename, size, foldername) {\n  return new Promise(function (resolve, reject) {\n    var sql = \"UPDATE filename SET filesize = '\" + size + \"' WHERE fname = '\" + foldername + \"' '/' '\" + filename + \"' \";\n    connection.query(sql, function (err, result) {\n      if (err) throw err;\n      console.log(result.affectedRows + ' record(s) updated');\n      resolve(true);\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZWZpbGVzaXplLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb24iLCJmaWxlbmFtZSIsInNpemUiLCJmb2xkZXJuYW1lIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzcWwiLCJxdWVyeSIsImVyciIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJhZmZlY3RlZFJvd3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7OztBQURBO0FBR0EsSUFBSUEsVUFBVSxHQUFHLDZCQUFqQjs7ZUFDZSxrQkFBQ0MsUUFBRCxFQUFVQyxJQUFWLEVBQWVDLFVBQWYsRUFBOEI7QUFDekMsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBRXhDLFFBQUlDLEdBQUcsR0FBRyxxQ0FBcUNMLElBQXJDLEdBQTRDLG1CQUE1QyxHQUFnRUMsVUFBaEUsR0FBMkUsU0FBM0UsR0FBc0ZGLFFBQXRGLEdBQWlHLElBQTNHO0FBSUlELElBQUFBLFVBQVUsQ0FBQ1EsS0FBWCxDQUFpQkQsR0FBakIsRUFBc0IsVUFBVUUsR0FBVixFQUFlQyxNQUFmLEVBQXVCO0FBQ3pDLFVBQUlELEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixNQUFNLENBQUNHLFlBQVAsR0FBc0Isb0JBQWxDO0FBQ0FSLE1BQUFBLE9BQU8sQ0FBQyxJQUFELENBQVA7QUFDSCxLQUpEO0FBS0gsR0FYTSxDQUFQO0FBYUgsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9sdWNrYXlzL1dlYnN0b3JtUHJvamVjdHMvcmVhbHRpbWVzcWwvc3JjL2RhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZnVuY3Rpb24gdXBkYXRlZmlsZXNpemUsIHVwZGF0aW5nIHNpemUgdG8gZXhpc3RpbmcgZmlsZW5hbWVcbmltcG9ydCBjcmVhdGVDb25uZWN0aW9uIGZyb20gJy4vY29ubmVjdGlvbic7XG5cbmxldCBjb25uZWN0aW9uID0gY3JlYXRlQ29ubmVjdGlvbigpO1xuZXhwb3J0IGRlZmF1bHQgKGZpbGVuYW1lLHNpemUsZm9sZGVybmFtZSkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cbiAgICB2YXIgc3FsID0gXCJVUERBVEUgZmlsZW5hbWUgU0VUIGZpbGVzaXplID0gJ1wiICsgc2l6ZSArIFwiJyBXSEVSRSBmbmFtZSA9ICdcIitmb2xkZXJuYW1lK1wiJyAnLycgJ1wiKyBmaWxlbmFtZSArIFwiJyBcIjtcblxuXG5cbiAgICAgICAgY29ubmVjdGlvbi5xdWVyeShzcWwsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0LmFmZmVjdGVkUm93cyArICcgcmVjb3JkKHMpIHVwZGF0ZWQnKTtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgIH0pXG5cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "updatefilesize.js"
      ],
      "names": [
        "connection",
        "filename",
        "size",
        "foldername",
        "Promise",
        "resolve",
        "reject",
        "sql",
        "query",
        "err",
        "result",
        "console",
        "log",
        "affectedRows"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,UAAU,GAAG,6BAAjB;;eACe,kBAACC,QAAD,EAAUC,IAAV,EAAeC,UAAf,EAA8B;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAExC,QAAIC,GAAG,GAAG,qCAAqCL,IAArC,GAA4C,mBAA5C,GAAgEC,UAAhE,GAA2E,SAA3E,GAAsFF,QAAtF,GAAiG,IAA3G;AAIID,IAAAA,UAAU,CAACQ,KAAX,CAAiBD,GAAjB,EAAsB,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACzC,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,YAAP,GAAsB,oBAAlC;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAJD;AAKH,GAXM,CAAP;AAaH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/database",
      "sourcesContent": [
        "// function updatefilesize, updating size to existing filename\nimport createConnection from './connection';\n\nlet connection = createConnection();\nexport default (filename,size,foldername) => {\n    return new Promise((resolve, reject) => {\n\n    var sql = \"UPDATE filename SET filesize = '\" + size + \"' WHERE fname = '\"+foldername+\"' '/' '\"+ filename + \"' \";\n\n\n\n        connection.query(sql, function (err, result) {\n            if (err) throw err;\n            console.log(result.affectedRows + ' record(s) updated');\n            resolve(true);\n        });\n    })\n\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578161585100
  },
  "{\"sourceRoot\":\"/home/luckays/WebstormProjects/realtimesql/src/api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/luckays/WebstormProjects/realtimesql\",\"filename\":\"/home/luckays/WebstormProjects/realtimesql/src/api/getFromDB.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/luckays/WebstormProjects/realtimesql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/luckays/WebstormProjects/realtimesql",
      "filename": "/home/luckays/WebstormProjects/realtimesql/src/api/getFromDB.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/luckays/WebstormProjects/realtimesql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/luckays/WebstormProjects/realtimesql/src/api/getFromDB.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/luckays/WebstormProjects/realtimesql/src/api/getFromDB.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/api",
        "sourceFileName": "getFromDB.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _connection = _interopRequireDefault(require(\"../database/connection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//function getFromDB get data from database to application\nvar connection = (0, _connection[\"default\"])();\nvar app = (0, _express[\"default\"])();\n\nvar _default = function _default() {\n  app.use(_bodyParser[\"default\"].json());\n  app.listen(4000); //expressvalidator\n\n  app.post('/data', function (req, res) {\n    //switch\n    //  console.log(req.body)\n    connection.query('SELECT datum,?? FROM ?? WHERE datum >=? AND datum<=?', [req.body.column, req.body.table_name, (0, _moment[\"default\"])(req.body.from_date).format('YYYY-MM-DD HH:mm:ss'), (0, _moment[\"default\"])(req.body.to_date).format('YYYY-MM-DD HH:mm:ss')], function (err, rows, fields) {\n      if (!err) res.set({\n        'Access-Control-Allow-Origin': '*'\n      }).send(rows);else console.log(err);\n    });\n  });\n  app.get('/tables', function (req, res) {\n    connection.query('select * from selectable_tables', [], function (err, rows) {\n      res.set({\n        'Access-Control-Allow-Origin': '*'\n      }).json(rows);\n    });\n  });\n  app.post('/columns', function (req, res) {\n    if (req.body.tableName != '--') {\n      var sql = 'show columns from ' + req.body.tableName;\n      connection.query(sql, [], function (err, rows) {\n        if (err) console.log(err);\n        res.set({\n          'Access-Control-Allow-Origin': '*'\n        }).json({\n          data: rows.map(function (c) {\n            return c.Field;\n          }).filter(function (c) {\n            return c !== 'datum';\n          })\n        });\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEZyb21EQi5qcyJdLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwiYXBwIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJsaXN0ZW4iLCJwb3N0IiwicmVxIiwicmVzIiwicXVlcnkiLCJib2R5IiwiY29sdW1uIiwidGFibGVfbmFtZSIsImZyb21fZGF0ZSIsImZvcm1hdCIsInRvX2RhdGUiLCJlcnIiLCJyb3dzIiwiZmllbGRzIiwic2V0Iiwic2VuZCIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJ0YWJsZU5hbWUiLCJzcWwiLCJkYXRhIiwibWFwIiwiYyIsIkZpZWxkIiwiZmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFMQTtBQU1BLElBQU1BLFVBQVUsR0FBRyw2QkFBbkI7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7O2VBRWUsb0JBQU07QUFDakJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLElBQVgsRUFGaUIsQ0FHckI7O0FBRUlKLEVBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLE9BQVQsRUFBa0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQztBQUMvQjtBQUNDUixJQUFBQSxVQUFVLENBQUNTLEtBQVgsQ0FBaUIsc0RBQWpCLEVBQXlFLENBQ3JFRixHQUFHLENBQUNHLElBQUosQ0FBU0MsTUFENEQsRUFFckVKLEdBQUcsQ0FBQ0csSUFBSixDQUFTRSxVQUY0RCxFQUdyRSx3QkFBT0wsR0FBRyxDQUFDRyxJQUFKLENBQVNHLFNBQWhCLEVBQTJCQyxNQUEzQixDQUFrQyxxQkFBbEMsQ0FIcUUsRUFJckUsd0JBQU9QLEdBQUcsQ0FBQ0csSUFBSixDQUFTSyxPQUFoQixFQUF5QkQsTUFBekIsQ0FBZ0MscUJBQWhDLENBSnFFLENBQXpFLEVBTUksVUFBQ0UsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLE1BQVosRUFBdUI7QUFDdEIsVUFBSSxDQUFDRixHQUFMLEVBQ0lSLEdBQUcsQ0FBQ1csR0FBSixDQUFRO0FBQ0osdUNBQStCO0FBRDNCLE9BQVIsRUFFR0MsSUFGSCxDQUVRSCxJQUZSLEVBREosS0FLSUksT0FBTyxDQUFDQyxHQUFSLENBQVlOLEdBQVo7QUFDUCxLQWJGO0FBY0YsR0FoQkQ7QUFrQkFmLEVBQUFBLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QlIsSUFBQUEsVUFBVSxDQUFDUyxLQUFYLENBQWlCLGlDQUFqQixFQUFvRCxFQUFwRCxFQUF3RCxVQUFDTyxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUNuRVQsTUFBQUEsR0FBRyxDQUFDVyxHQUFKLENBQVE7QUFDSix1Q0FBK0I7QUFEM0IsT0FBUixFQUVHZixJQUZILENBRVFhLElBRlI7QUFHSCxLQUpEO0FBS0gsR0FORDtBQVFBaEIsRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsVUFBVCxFQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQixRQUFJRCxHQUFHLENBQUNHLElBQUosQ0FBU2MsU0FBVCxJQUFzQixJQUExQixFQUFnQztBQUM1QixVQUFNQyxHQUFHLEdBQUcsdUJBQXVCbEIsR0FBRyxDQUFDRyxJQUFKLENBQVNjLFNBQTVDO0FBQ0F4QixNQUFBQSxVQUFVLENBQUNTLEtBQVgsQ0FBaUJnQixHQUFqQixFQUFzQixFQUF0QixFQUEwQixVQUFDVCxHQUFELEVBQU1DLElBQU4sRUFBZTtBQUNyQyxZQUFJRCxHQUFKLEVBQVNLLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFaO0FBRVRSLFFBQUFBLEdBQUcsQ0FBQ1csR0FBSixDQUFRO0FBQ0oseUNBQStCO0FBRDNCLFNBQVIsRUFFR2YsSUFGSCxDQUVRO0FBQ0pzQixVQUFBQSxJQUFJLEVBQUVULElBQUksQ0FBQ1UsR0FBTCxDQUFTLFVBQUFDLENBQUM7QUFBQSxtQkFBSUEsQ0FBQyxDQUFDQyxLQUFOO0FBQUEsV0FBVixFQUF1QkMsTUFBdkIsQ0FBOEIsVUFBQUYsQ0FBQztBQUFBLG1CQUFJQSxDQUFDLEtBQUssT0FBVjtBQUFBLFdBQS9CO0FBREYsU0FGUjtBQUtILE9BUkQ7QUFTSDtBQUNKLEdBYkQ7QUFjSCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2x1Y2theXMvV2Vic3Rvcm1Qcm9qZWN0cy9yZWFsdGltZXNxbC9zcmMvYXBpIiwic291cmNlc0NvbnRlbnQiOlsiLy9mdW5jdGlvbiBnZXRGcm9tREIgZ2V0IGRhdGEgZnJvbSBkYXRhYmFzZSB0byBhcHBsaWNhdGlvblxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20nYm9keS1wYXJzZXInXG5pbXBvcnQgbW9tZW50IGZyb20gXCJtb21lbnRcIlxuXG5pbXBvcnQgQ3JlYXRlQ29ubmVjdGlvbiBmcm9tIFwiLi4vZGF0YWJhc2UvY29ubmVjdGlvblwiO1xuY29uc3QgY29ubmVjdGlvbiA9IENyZWF0ZUNvbm5lY3Rpb24oKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuICAgIGFwcC5saXN0ZW4oNDAwMCk7XG4vL2V4cHJlc3N2YWxpZGF0b3JcblxuICAgIGFwcC5wb3N0KCcvZGF0YScsIChyZXEsIHJlcykgPT4gey8vc3dpdGNoXG4gICAgICAvLyAgY29uc29sZS5sb2cocmVxLmJvZHkpXG4gICAgICAgY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGRhdHVtLD8/IEZST00gPz8gV0hFUkUgZGF0dW0gPj0/IEFORCBkYXR1bTw9PycsIFtcbiAgICAgICAgICAgcmVxLmJvZHkuY29sdW1uLFxuICAgICAgICAgICByZXEuYm9keS50YWJsZV9uYW1lLFxuICAgICAgICAgICBtb21lbnQocmVxLmJvZHkuZnJvbV9kYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW06c3MnKSxcbiAgICAgICAgICAgbW9tZW50KHJlcS5ib2R5LnRvX2RhdGUpLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpXG4gICAgICAgXSxcbiAgICAgICAgICAgKGVyciwgcm93cywgZmllbGRzKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWVycilcbiAgICAgICAgICAgICAgICByZXMuc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJ1xuICAgICAgICAgICAgICAgIH0pLnNlbmQocm93cyk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSlcbiAgICB9KVxuXG4gICAgYXBwLmdldCgnL3RhYmxlcycsIChyZXEsIHJlcykgPT4ge1xuICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KCdzZWxlY3QgKiBmcm9tIHNlbGVjdGFibGVfdGFibGVzJywgW10sIChlcnIsIHJvd3MpID0+IHtcbiAgICAgICAgICAgIHJlcy5zZXQoe1xuICAgICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKidcbiAgICAgICAgICAgIH0pLmpzb24ocm93cylcbiAgICAgICAgfSlcbiAgICB9KVxuXG4gICAgYXBwLnBvc3QoJy9jb2x1bW5zJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXEuYm9keS50YWJsZU5hbWUgIT0gJy0tJykge1xuICAgICAgICAgICAgY29uc3Qgc3FsID0gJ3Nob3cgY29sdW1ucyBmcm9tICcgKyByZXEuYm9keS50YWJsZU5hbWU7XG4gICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KHNxbCwgW10sIChlcnIsIHJvd3MpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xuXG4gICAgICAgICAgICAgICAgcmVzLnNldCh7XG4gICAgICAgICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKidcbiAgICAgICAgICAgICAgICB9KS5qc29uKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogcm93cy5tYXAoYyA9PiBjLkZpZWxkKS5maWx0ZXIoYyA9PiBjICE9PSAnZGF0dW0nKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSlcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "getFromDB.js"
      ],
      "names": [
        "connection",
        "app",
        "use",
        "bodyParser",
        "json",
        "listen",
        "post",
        "req",
        "res",
        "query",
        "body",
        "column",
        "table_name",
        "from_date",
        "format",
        "to_date",
        "err",
        "rows",
        "fields",
        "set",
        "send",
        "console",
        "log",
        "get",
        "tableName",
        "sql",
        "data",
        "map",
        "c",
        "Field",
        "filter"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;AAEA;;;;AALA;AAMA,IAAMA,UAAU,GAAG,6BAAnB;AACA,IAAMC,GAAG,GAAG,0BAAZ;;eAEe,oBAAM;AACjBA,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,EAAAA,GAAG,CAACI,MAAJ,CAAW,IAAX,EAFiB,CAGrB;;AAEIJ,EAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAC;AAC/B;AACCR,IAAAA,UAAU,CAACS,KAAX,CAAiB,sDAAjB,EAAyE,CACrEF,GAAG,CAACG,IAAJ,CAASC,MAD4D,EAErEJ,GAAG,CAACG,IAAJ,CAASE,UAF4D,EAGrE,wBAAOL,GAAG,CAACG,IAAJ,CAASG,SAAhB,EAA2BC,MAA3B,CAAkC,qBAAlC,CAHqE,EAIrE,wBAAOP,GAAG,CAACG,IAAJ,CAASK,OAAhB,EAAyBD,MAAzB,CAAgC,qBAAhC,CAJqE,CAAzE,EAMI,UAACE,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAuB;AACtB,UAAI,CAACF,GAAL,EACIR,GAAG,CAACW,GAAJ,CAAQ;AACJ,uCAA+B;AAD3B,OAAR,EAEGC,IAFH,CAEQH,IAFR,EADJ,KAKII,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACP,KAbF;AAcF,GAhBD;AAkBAf,EAAAA,GAAG,CAACsB,GAAJ,CAAQ,SAAR,EAAmB,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC7BR,IAAAA,UAAU,CAACS,KAAX,CAAiB,iCAAjB,EAAoD,EAApD,EAAwD,UAACO,GAAD,EAAMC,IAAN,EAAe;AACnET,MAAAA,GAAG,CAACW,GAAJ,CAAQ;AACJ,uCAA+B;AAD3B,OAAR,EAEGf,IAFH,CAEQa,IAFR;AAGH,KAJD;AAKH,GAND;AAQAhB,EAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAID,GAAG,CAACG,IAAJ,CAASc,SAAT,IAAsB,IAA1B,EAAgC;AAC5B,UAAMC,GAAG,GAAG,uBAAuBlB,GAAG,CAACG,IAAJ,CAASc,SAA5C;AACAxB,MAAAA,UAAU,CAACS,KAAX,CAAiBgB,GAAjB,EAAsB,EAAtB,EAA0B,UAACT,GAAD,EAAMC,IAAN,EAAe;AACrC,YAAID,GAAJ,EAASK,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAETR,QAAAA,GAAG,CAACW,GAAJ,CAAQ;AACJ,yCAA+B;AAD3B,SAAR,EAEGf,IAFH,CAEQ;AACJsB,UAAAA,IAAI,EAAET,IAAI,CAACU,GAAL,CAAS,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,KAAN;AAAA,WAAV,EAAuBC,MAAvB,CAA8B,UAAAF,CAAC;AAAA,mBAAIA,CAAC,KAAK,OAAV;AAAA,WAA/B;AADF,SAFR;AAKH,OARD;AASH;AACJ,GAbD;AAcH,C",
      "sourceRoot": "/home/luckays/WebstormProjects/realtimesql/src/api",
      "sourcesContent": [
        "//function getFromDB get data from database to application\nimport express from 'express'\nimport bodyParser from'body-parser'\nimport moment from \"moment\"\n\nimport CreateConnection from \"../database/connection\";\nconst connection = CreateConnection();\nconst app = express();\n\nexport default () => {\n    app.use(bodyParser.json());\n    app.listen(4000);\n//expressvalidator\n\n    app.post('/data', (req, res) => {//switch\n      //  console.log(req.body)\n       connection.query('SELECT datum,?? FROM ?? WHERE datum >=? AND datum<=?', [\n           req.body.column,\n           req.body.table_name,\n           moment(req.body.from_date).format('YYYY-MM-DD HH:mm:ss'),\n           moment(req.body.to_date).format('YYYY-MM-DD HH:mm:ss')\n       ],\n           (err, rows, fields) => {\n            if (!err)\n                res.set({\n                    'Access-Control-Allow-Origin': '*'\n                }).send(rows);\n            else\n                console.log(err);\n        })\n    })\n\n    app.get('/tables', (req, res) => {\n        connection.query('select * from selectable_tables', [], (err, rows) => {\n            res.set({\n                'Access-Control-Allow-Origin': '*'\n            }).json(rows)\n        })\n    })\n\n    app.post('/columns', (req, res) => {\n        if (req.body.tableName != '--') {\n            const sql = 'show columns from ' + req.body.tableName;\n            connection.query(sql, [], (err, rows) => {\n                if (err) console.log(err);\n\n                res.set({\n                    'Access-Control-Allow-Origin': '*'\n                }).json({\n                    data: rows.map(c => c.Field).filter(c => c !== 'datum')\n                })\n            })\n        }\n    })\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580986123379
  }
}